--- a/chrome/browser/BUILD.gn
+++ b/chrome/browser/BUILD.gn
@@ -290,8 +290,6 @@ static_library("browser") {
     "component_updater/crowd_deny_component_installer.h",
     "component_updater/file_type_policies_component_installer.cc",
     "component_updater/file_type_policies_component_installer.h",
-    "component_updater/floc_blocklist_component_installer.cc",
-    "component_updater/floc_blocklist_component_installer.h",
     "component_updater/games_component_installer.cc",
     "component_updater/games_component_installer.h",
     "component_updater/mei_preload_component_installer.cc",
@@ -480,15 +478,6 @@ static_library("browser") {
     "favicon/large_icon_service_factory.h",
     "feature_engagement/tracker_factory.cc",
     "feature_engagement/tracker_factory.h",
-    "federated_learning/floc_id_provider.h",
-    "federated_learning/floc_id_provider_factory.cc",
-    "federated_learning/floc_id_provider_factory.h",
-    "federated_learning/floc_id_provider_impl.cc",
-    "federated_learning/floc_id_provider_impl.h",
-    "federated_learning/floc_remote_permission_service.cc",
-    "federated_learning/floc_remote_permission_service.h",
-    "federated_learning/floc_remote_permission_service_factory.cc",
-    "federated_learning/floc_remote_permission_service_factory.h",
     "file_select_helper.cc",
     "file_select_helper.h",
     "file_util_service.cc",
@@ -1907,7 +1896,6 @@ static_library("browser") {
     "//components/favicon/core",
     "//components/favicon_base",
     "//components/feature_engagement",
-    "//components/federated_learning",
     "//components/filename_generation",
     "//components/find_in_page",
     "//components/flags_ui",
--- a/chrome/browser/browser_process.h
+++ b/chrome/browser/browser_process.h
@@ -50,10 +50,6 @@ namespace subresource_filter {
 class RulesetService;
 }
 
-namespace federated_learning {
-class FlocBlocklistService;
-}
-
 namespace variations {
 class VariationsService;
 }
@@ -202,10 +198,6 @@ class BrowserProcess {
   // on this platform (or this is a unit test).
   virtual StatusTray* status_tray() = 0;
 
-  // Returns the service providing versioned storage for a blocklist of flocs.
-  virtual federated_learning::FlocBlocklistService*
-  floc_blocklist_service() = 0;
-
   // Returns the service used to provide hints for what optimizations can be
   // performed on slow page loads.
   virtual optimization_guide::OptimizationGuideService*
--- a/chrome/browser/browser_process_impl.cc
+++ b/chrome/browser/browser_process_impl.cc
@@ -90,8 +90,6 @@
 #include "components/component_updater/component_updater_service.h"
 #include "components/component_updater/timer_update_scheduler.h"
 #include "components/crash/core/common/crash_key.h"
-#include "components/federated_learning/floc_blocklist_service.h"
-#include "components/federated_learning/floc_constants.h"
 #include "components/gcm_driver/gcm_driver.h"
 #include "components/language/core/browser/pref_names.h"
 #include "components/metrics/metrics_pref_names.h"
@@ -968,14 +966,6 @@ StatusTray* BrowserProcessImpl::status_t
   return status_tray_.get();
 }
 
-federated_learning::FlocBlocklistService*
-BrowserProcessImpl::floc_blocklist_service() {
-  DCHECK_CALLED_ON_VALID_SEQUENCE(sequence_checker_);
-  if (!floc_blocklist_service_)
-    CreateFlocBlocklistService();
-  return floc_blocklist_service_.get();
-}
-
 optimization_guide::OptimizationGuideService*
 BrowserProcessImpl::optimization_guide_service() {
   DCHECK_CALLED_ON_VALID_SEQUENCE(sequence_checker_);
@@ -1224,12 +1214,6 @@ void BrowserProcessImpl::CreateBackgroun
 #endif
 }
 
-void BrowserProcessImpl::CreateFlocBlocklistService() {
-  DCHECK(!floc_blocklist_service_);
-  floc_blocklist_service_ =
-      std::make_unique<federated_learning::FlocBlocklistService>();
-}
-
 void BrowserProcessImpl::CreateOptimizationGuideService() {
   DCHECK(!created_optimization_guide_service_);
   DCHECK(!optimization_guide_service_);
--- a/chrome/browser/browser_process_impl.h
+++ b/chrome/browser/browser_process_impl.h
@@ -166,7 +166,6 @@ class BrowserProcessImpl : public Browse
   void set_background_mode_manager_for_test(
       std::unique_ptr<BackgroundModeManager> manager) override;
   StatusTray* status_tray() override;
-  federated_learning::FlocBlocklistService* floc_blocklist_service() override;
   optimization_guide::OptimizationGuideService* optimization_guide_service()
       override;
 
@@ -213,7 +212,6 @@ class BrowserProcessImpl : public Browse
   void CreateNotificationUIManager();
   void CreatePrintPreviewDialogController();
   void CreateBackgroundPrintingManager();
-  void CreateFlocBlocklistService();
   void CreateOptimizationGuideService();
   void CreateStatusTray();
   void CreateBackgroundModeManager();
@@ -311,9 +309,6 @@ class BrowserProcessImpl : public Browse
   std::unique_ptr<subresource_filter::RulesetService>
       subresource_filter_ruleset_service_;
 
-  std::unique_ptr<federated_learning::FlocBlocklistService>
-      floc_blocklist_service_;
-
   bool created_optimization_guide_service_ = false;
   std::unique_ptr<optimization_guide::OptimizationGuideService>
       optimization_guide_service_;
--- a/chrome/browser/component_updater/registration.cc
+++ b/chrome/browser/component_updater/registration.cc
@@ -11,7 +11,6 @@
 #include "chrome/browser/component_updater/crl_set_component_installer.h"
 #include "chrome/browser/component_updater/crowd_deny_component_installer.h"
 #include "chrome/browser/component_updater/file_type_policies_component_installer.h"
-#include "chrome/browser/component_updater/floc_blocklist_component_installer.h"
 #include "chrome/browser/component_updater/games_component_installer.h"
 #include "chrome/browser/component_updater/mei_preload_component_installer.h"
 #include "chrome/browser/component_updater/optimization_hints_component_installer.h"
@@ -115,8 +114,6 @@ void RegisterComponentsForUpdate(bool is
   whitelist_installer->RegisterComponents();
 #endif
 
-  RegisterFlocBlocklistComponent(cus,
-                                 g_browser_process->floc_blocklist_service());
   RegisterOnDeviceHeadSuggestComponent(
       cus, g_browser_process->GetApplicationLocale());
   RegisterOptimizationHintsComponent(cus, is_off_the_record_profile);
@@ -144,8 +141,6 @@ void RegisterComponentsForUpdate(bool is
 
     RegisterOriginTrialsComponent(cus, path);
 
-    RegisterFileTypePoliciesComponent(cus, path);
-
     RegisterTrustTokenKeyCommitmentsComponentIfTrustTokensEnabled(cus, path);
 
     RegisterSSLErrorAssistantComponent(cus, path);
--- a/chrome/browser/profiles/profile_impl.cc
+++ b/chrome/browser/profiles/profile_impl.cc
@@ -64,8 +64,6 @@
 #include "chrome/browser/download/download_core_service.h"
 #include "chrome/browser/download/download_core_service_factory.h"
 #include "chrome/browser/download/download_manager_utils.h"
-#include "chrome/browser/federated_learning/floc_id_provider.h"
-#include "chrome/browser/federated_learning/floc_id_provider_factory.h"
 #include "chrome/browser/heavy_ad_intervention/heavy_ad_service.h"
 #include "chrome/browser/heavy_ad_intervention/heavy_ad_service_factory.h"
 #include "chrome/browser/media/media_device_id_salt.h"
@@ -738,10 +736,6 @@ void ProfileImpl::DoFinalInit() {
   // initialized. https://crbug.com/171406
   SharingServiceFactory::GetForBrowserContext(this);
 
-  // The creation of FlocIdProvider should align with the start of a browser
-  // profile session, so initialize it here.
-  federated_learning::FlocIdProviderFactory::GetForProfile(this);
-
   content::NotificationService::current()->Notify(
       chrome::NOTIFICATION_PROFILE_CREATED, content::Source<Profile>(this),
       content::NotificationService::NoDetails());
