diff --git a/components/metrics_services_manager/metrics_services_manager.cc b/components/metrics_services_manager/metrics_services_manager.cc
index 107632b0ad8f..f03e02e2be05 100644
--- a/components/metrics_services_manager/metrics_services_manager.cc
+++ b/components/metrics_services_manager/metrics_services_manager.cc
@@ -15,7 +15,6 @@
 #include "components/metrics/metrics_state_manager.h"
 #include "components/metrics/metrics_switches.h"
 #include "components/metrics_services_manager/metrics_services_manager_client.h"
-#include "components/rappor/rappor_service_impl.h"
 #include "components/ukm/ukm_service.h"
 #include "components/variations/service/variations_service.h"
 #include "services/network/public/cpp/shared_url_loader_factory.h"
@@ -43,15 +42,6 @@ metrics::MetricsService* MetricsServicesManager::GetMetricsService() {
   return GetMetricsServiceClient()->GetMetricsService();
 }
 
-rappor::RapporServiceImpl* MetricsServicesManager::GetRapporServiceImpl() {
-  DCHECK(thread_checker_.CalledOnValidThread());
-  if (!rappor_service_) {
-    rappor_service_ = client_->CreateRapporServiceImpl();
-    rappor_service_->Initialize(client_->GetURLLoaderFactory());
-  }
-  return rappor_service_.get();
-}
-
 ukm::UkmService* MetricsServicesManager::GetUkmService() {
   DCHECK(thread_checker_.CalledOnValidThread());
   return GetMetricsServiceClient()->GetUkmService();
@@ -115,26 +105,14 @@ void MetricsServicesManager::UpdateRunningServices() {
   const base::CommandLine* cmdline = base::CommandLine::ForCurrentProcess();
   if (cmdline->HasSwitch(metrics::switches::kMetricsRecordingOnly)) {
     metrics->StartRecordingForTests();
-    GetRapporServiceImpl()->Update(true, false);
     return;
   }
 
   client_->UpdateRunningServices(may_record_, may_upload_);
 
-  if (may_record_) {
-    if (!metrics->recording_active())
-      metrics->Start();
-    if (may_upload_)
-      metrics->EnableReporting();
-    else
-      metrics->DisableReporting();
-  } else {
     metrics->Stop();
-  }
 
   UpdateUkmService();
-
-  GetRapporServiceImpl()->Update(may_record_, may_upload_);
 }
 
 void MetricsServicesManager::UpdateUkmService() {
@@ -142,35 +120,12 @@ void MetricsServicesManager::UpdateUkmService() {
   if (!ukm)
     return;
 
-  bool listeners_active =
-      metrics_service_client_->AreNotificationListenersEnabledOnAllProfiles();
-  bool sync_enabled =
-      metrics_service_client_->IsMetricsReportingForceEnabled() ||
-      metrics_service_client_->IsUkmAllowedForAllProfiles();
-  bool is_incognito = client_->IsOffTheRecordSessionActive();
-
-  if (consent_given_ && listeners_active && sync_enabled && !is_incognito) {
-    // TODO(skare): revise this - merged in a big change
-    ukm->EnableRecording(
-        metrics_service_client_->IsUkmAllowedWithExtensionsForAllProfiles());
-    if (may_upload_)
-      ukm->EnableReporting();
-    else
-      ukm->DisableReporting();
-  } else {
-    ukm->DisableRecording();
-    ukm->DisableReporting();
-  }
+  ukm->DisableRecording();
+  ukm->DisableReporting();
 }
 
 void MetricsServicesManager::UpdateUploadPermissions(bool may_upload) {
-  if (metrics_service_client_->IsMetricsReportingForceEnabled()) {
-    UpdatePermissions(true, true, true);
-    return;
-  }
-
-  UpdatePermissions(client_->IsMetricsReportingEnabled(),
-                    client_->IsMetricsConsentGiven(), may_upload);
+  UpdatePermissions(false, false, false);
 }
 
 bool MetricsServicesManager::IsMetricsReportingEnabled() const {
