diff --git a/content/browser/net/reporting_service_proxy.cc b/content/browser/net/reporting_service_proxy.cc
index 7394fc1a0c152..a50d2762c7aa7 100644
--- a/content/browser/net/reporting_service_proxy.cc
+++ b/content/browser/net/reporting_service_proxy.cc
@@ -51,16 +51,6 @@ class ReportingServiceProxyImpl : public blink::mojom::ReportingServiceProxy {
                                const base::Optional<std::string>& source_file,
                                int line_number,
                                int column_number) override {
-    auto body = std::make_unique<base::DictionaryValue>();
-    body->SetString("id", id);
-    body->SetString("message", message);
-    if (source_file)
-      body->SetString("sourceFile", *source_file);
-    if (line_number)
-      body->SetInteger("lineNumber", line_number);
-    if (column_number)
-      body->SetInteger("columnNumber", column_number);
-    QueueReport(url, "default", "intervention", std::move(body));
   }
 
   void QueueDeprecationReport(const GURL& url,
@@ -70,19 +60,6 @@ class ReportingServiceProxyImpl : public blink::mojom::ReportingServiceProxy {
                               const base::Optional<std::string>& source_file,
                               int line_number,
                               int column_number) override {
-    auto body = std::make_unique<base::DictionaryValue>();
-    body->SetString("id", id);
-    if (anticipated_removal)
-      body->SetDouble("anticipatedRemoval",
-                      anticipated_removal->ToJsTimeIgnoringNull());
-    body->SetString("message", message);
-    if (source_file)
-      body->SetString("sourceFile", *source_file);
-    if (line_number)
-      body->SetInteger("lineNumber", line_number);
-    if (column_number)
-      body->SetInteger("columnNumber", column_number);
-    QueueReport(url, "default", "deprecation", std::move(body));
   }
 
   void QueueCspViolationReport(const GURL& url,
@@ -98,25 +75,6 @@ class ReportingServiceProxyImpl : public blink::mojom::ReportingServiceProxy {
                                uint16_t status_code,
                                int line_number,
                                int column_number) override {
-    auto body = std::make_unique<base::DictionaryValue>();
-    body->SetString("documentURL", document_url);
-    if (referrer)
-      body->SetString("referrer", *referrer);
-    if (blocked_url)
-      body->SetString("blockedURL", *blocked_url);
-    body->SetString("effectiveDirective", effective_directive);
-    body->SetString("originalPolicy", original_policy);
-    if (source_file)
-      body->SetString("sourceFile", *source_file);
-    if (script_sample)
-      body->SetString("sample", *script_sample);
-    body->SetString("disposition", disposition);
-    body->SetInteger("statusCode", status_code);
-    if (line_number)
-      body->SetInteger("lineNumber", line_number);
-    if (column_number)
-      body->SetInteger("columnNumber", column_number);
-    QueueReport(url, group, "csp-violation", std::move(body));
   }
 
   void QueuePermissionsPolicyViolationReport(
@@ -127,19 +85,6 @@ class ReportingServiceProxyImpl : public blink::mojom::ReportingServiceProxy {
       const base::Optional<std::string>& source_file,
       int line_number,
       int column_number) override {
-    auto body = std::make_unique<base::DictionaryValue>();
-    body->SetString("policyId", policy_id);
-    body->SetString("disposition", disposition);
-    if (message)
-      body->SetString("message", *message);
-    if (source_file)
-      body->SetString("sourceFile", *source_file);
-    if (line_number)
-      body->SetInteger("lineNumber", line_number);
-    if (column_number)
-      body->SetInteger("columnNumber", column_number);
-    QueueReport(url, "default", "permissions-policy-violation",
-                std::move(body));
   }
 
   void QueueDocumentPolicyViolationReport(
@@ -151,18 +96,6 @@ class ReportingServiceProxyImpl : public blink::mojom::ReportingServiceProxy {
       const base::Optional<std::string>& source_file,
       int line_number,
       int column_number) override {
-    auto body = std::make_unique<base::DictionaryValue>();
-    body->SetString("policyId", policy_id);
-    body->SetString("disposition", disposition);
-    if (message)
-      body->SetString("message", *message);
-    if (source_file)
-      body->SetString("sourceFile", *source_file);
-    if (line_number)
-      body->SetInteger("lineNumber", line_number);
-    if (column_number)
-      body->SetInteger("columnNumber", column_number);
-    QueueReport(url, group, "document-policy-violation", std::move(body));
   }
 
   int render_process_id() const { return render_process_id_; }
@@ -172,14 +105,6 @@ class ReportingServiceProxyImpl : public blink::mojom::ReportingServiceProxy {
                    const std::string& group,
                    const std::string& type,
                    std::unique_ptr<base::Value> body) {
-    auto* rph = RenderProcessHost::FromID(render_process_id_);
-    if (!rph)
-      return;
-
-    rph->GetStoragePartition()->GetNetworkContext()->QueueReport(
-        type, group, url, network_isolation_key_,
-        /*user_agent=*/base::nullopt,
-        base::Value::FromUniquePtrValue(std::move(body)));
   }
 
   const int render_process_id_;
