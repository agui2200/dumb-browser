diff --git a/chrome/browser/metrics/chrome_metrics_service_client.cc b/chrome/browser/metrics/chrome_metrics_service_client.cc
index 9a22cf066552..ab93e56e3738 100644
--- a/chrome/browser/metrics/chrome_metrics_service_client.cc
+++ b/chrome/browser/metrics/chrome_metrics_service_client.cc
@@ -53,7 +53,6 @@
 #include "chrome/browser/privacy_budget/privacy_budget_prefs.h"
 #include "chrome/browser/privacy_budget/privacy_budget_ukm_entry_filter.h"
 #include "chrome/browser/profiles/profile_manager.h"
-#include "chrome/browser/safe_browsing/certificate_reporting_metrics_provider.h"
 #include "chrome/browser/sync/device_info_sync_service_factory.h"
 #include "chrome/browser/sync/profile_sync_service_factory.h"
 #include "chrome/browser/tracing/background_tracing_metrics_provider.h"
@@ -165,9 +164,6 @@
 #include "content/public/browser/system_connector.h"
 #endif
 
-#if defined(OS_WIN) || defined(OS_MAC) || defined(OS_ANDROID)
-#include "third_party/crashpad/crashpad/client/crashpad_info.h"
-#endif
 
 #if !defined(OS_CHROMEOS)
 #include "chrome/browser/signin/chrome_signin_status_metrics_provider_delegate.h"
@@ -201,6 +197,7 @@ const char kCrashpadHistogramAllocatorName[] = "CrashpadMetrics";
 #if defined(OS_WIN) || defined(OS_MAC) || defined(OS_ANDROID)
 // The stream type assigned to the minidump stream that holds the serialized
 // system profile proto.
+ALLOW_UNUSED_TYPE
 const uint32_t kSystemProfileMinidumpStreamType = 0x4B6B0003;
 
 // A serialized environment (SystemProfileProto) that was registered with the
@@ -211,6 +208,7 @@ const uint32_t kSystemProfileMinidumpStreamType = 0x4B6B0003;
 base::LazyInstance<std::string>::Leaky g_environment_for_crash_reporter;
 #endif  // defined(OS_WIN) || defined(OS_MAC) || defined(OS_ANDROID)
 
+ALLOW_UNUSED_TYPE
 void RegisterFileMetricsPreferences(PrefRegistrySimple* registry) {
   metrics::FileMetricsProvider::RegisterSourcePrefs(registry,
                                                     kBrowserMetricsName);
@@ -459,8 +457,6 @@ void ChromeMetricsServiceClient::RegisterPrefs(PrefRegistrySimple* registry) {
   metrics::StabilityMetricsHelper::RegisterPrefs(registry);
   prefs::RegisterPrivacyBudgetPrefs(registry);
 
-  RegisterFileMetricsPreferences(registry);
-
   metrics::RegisterMetricsReportingStatePrefs(registry);
 
 #if BUILDFLAG(ENABLE_PLUGINS)
@@ -518,11 +514,6 @@ void ChromeMetricsServiceClient::OnEnvironmentUpdate(std::string* environment) {
 
   g_environment_for_crash_reporter.Get() = std::move(*environment);
 
-  crashpad::CrashpadInfo::GetCrashpadInfo()->AddUserDataMinidumpStream(
-      kSystemProfileMinidumpStreamType,
-      reinterpret_cast<const void*>(
-          g_environment_for_crash_reporter.Get().data()),
-      g_environment_for_crash_reporter.Get().size());
 #endif  // OS_WIN || OS_MAC || OS_ANDROID
 }
 
@@ -582,6 +573,8 @@ void ChromeMetricsServiceClient::Initialize() {
   metrics_service_ = std::make_unique<metrics::MetricsService>(
       metrics_state_manager_, this, local_state);
 
+  notification_listeners_active_ = false;
+#if 0
   notification_listeners_active_ = RegisterForNotifications();
   RegisterMetricsServiceProviders();
 
@@ -601,6 +594,7 @@ void ChromeMetricsServiceClient::Initialize() {
 
     RegisterUKMProviders();
   }
+#endif
 
 #if defined(OS_CHROMEOS)
   metrics::structured::Recorder::GetInstance()->SetUiTaskRunner(
@@ -759,9 +753,6 @@ void ChromeMetricsServiceClient::RegisterMetricsServiceProviders() {
   metrics_service_->RegisterMetricsProvider(
       std::make_unique<HttpsEngagementMetricsProvider>());
 
-  metrics_service_->RegisterMetricsProvider(
-      std::make_unique<CertificateReportingMetricsProvider>());
-
 #if !defined(OS_ANDROID) && !defined(OS_CHROMEOS)
   metrics_service_->RegisterMetricsProvider(
       std::make_unique<UpgradeMetricsProvider>());
