diff --git a/chrome/browser/resource_coordinator/tab_manager.cc b/chrome/browser/resource_coordinator/tab_manager.cc
index 7757c6d6e5e21..3d18dcee9c5c1 100644
--- a/chrome/browser/resource_coordinator/tab_manager.cc
+++ b/chrome/browser/resource_coordinator/tab_manager.cc
@@ -42,7 +42,6 @@
 #include "chrome/browser/resource_coordinator/tab_manager.h"
 #include "chrome/browser/resource_coordinator/tab_manager_features.h"
 #include "chrome/browser/resource_coordinator/tab_manager_resource_coordinator_signal_observer.h"
-#include "chrome/browser/resource_coordinator/tab_manager_stats_collector.h"
 #include "chrome/browser/resource_coordinator/tab_manager_web_contents_data.h"
 #include "chrome/browser/resource_coordinator/time.h"
 #include "chrome/browser/sessions/session_restore.h"
@@ -154,7 +153,6 @@ TabManager::TabManager(TabLoadTracker* tab_load_tracker)
   session_restore_observer_ =
       std::make_unique<TabManagerSessionRestoreObserver>(this);
 
-  stats_collector_ = std::make_unique<TabManagerStatsCollector>();
   tab_load_tracker_->AddObserver(this);
 }
 
@@ -339,11 +337,6 @@ void TabManager::PauseBackgroundTabOpeningIfNeeded() {
   TRACE_EVENT_INSTANT0("navigation",
                        "TabManager::PauseBackgroundTabOpeningIfNeeded",
                        TRACE_EVENT_SCOPE_THREAD);
-  if (IsInBackgroundTabOpeningSession()) {
-    stats_collector_->TrackPausedBackgroundTabs(pending_navigations_.size());
-    stats_collector_->OnBackgroundTabOpeningSessionEnded();
-  }
-
   background_tab_loading_mode_ = BackgroundTabLoadingMode::kPaused;
 }
 
@@ -353,9 +346,6 @@ void TabManager::ResumeBackgroundTabOpeningIfNeeded() {
                        TRACE_EVENT_SCOPE_THREAD);
   background_tab_loading_mode_ = BackgroundTabLoadingMode::kStaggered;
   LoadNextBackgroundTabIfNeeded();
-
-  if (IsInBackgroundTabOpeningSession())
-    stats_collector_->OnBackgroundTabOpeningSessionStarted();
 }
 
 void TabManager::OnMemoryPressure(
@@ -404,14 +394,6 @@ void TabManager::UnregisterMemoryPressureListener() {
 
 void TabManager::OnActiveTabChanged(content::WebContents* old_contents,
                                     content::WebContents* new_contents) {
-  // If |old_contents| is set, that tab has switched from being active to
-  // inactive, so record the time of that transition.
-  if (old_contents) {
-    // Only record switch-to-tab metrics when a switch happens, i.e.
-    // |old_contents| is set.
-    stats_collector_->RecordSwitchToTab(old_contents, new_contents);
-  }
-
   ResumeTabNavigationIfNeeded(new_contents);
 }
 
@@ -439,17 +421,8 @@ void TabManager::OnLoadingStateChange(content::WebContents* web_contents,
   GetWebContentsData(web_contents)->SetTabLoadingState(new_loading_state);
 
   if (new_loading_state == LoadingState::LOADED) {
-    bool was_in_background_tab_opening_session =
-        IsInBackgroundTabOpeningSession();
-
     loading_contents_.erase(web_contents);
-    stats_collector_->OnTabIsLoaded(web_contents);
     LoadNextBackgroundTabIfNeeded();
-
-    if (was_in_background_tab_opening_session &&
-        !IsInBackgroundTabOpeningSession()) {
-      stats_collector_->OnBackgroundTabOpeningSessionEnded();
-    }
   }
 }
 
@@ -526,19 +499,10 @@ TabManager::MaybeThrottleNavigation(BackgroundTabNavigationThrottle* throttle) {
   if (GetWebContentsData(contents)->is_in_session_restore())
     return content::NavigationThrottle::PROCEED;
 
-  if (background_tab_loading_mode_ == BackgroundTabLoadingMode::kStaggered &&
-      !IsInBackgroundTabOpeningSession()) {
-    stats_collector_->OnBackgroundTabOpeningSessionStarted();
-  }
-
-  stats_collector_->TrackNewBackgroundTab(pending_navigations_.size(),
-                                          loading_contents_.size());
-
   if (!base::FeatureList::IsEnabled(
           features::kStaggeredBackgroundTabOpeningExperiment) ||
       CanLoadNextTab()) {
     loading_contents_.insert(contents);
-    stats_collector_->TrackBackgroundTabLoadAutoStarted();
     return content::NavigationThrottle::PROCEED;
   }
 
@@ -596,18 +560,9 @@ void TabManager::OnDidFinishNavigation(
 }
 
 void TabManager::OnWebContentsDestroyed(content::WebContents* contents) {
-  bool was_in_background_tab_opening_session =
-      IsInBackgroundTabOpeningSession();
-
   RemovePendingNavigationIfNeeded(contents);
   loading_contents_.erase(contents);
-  stats_collector_->OnWebContentsDestroyed(contents);
   LoadNextBackgroundTabIfNeeded();
-
-  if (was_in_background_tab_opening_session &&
-      !IsInBackgroundTabOpeningSession()) {
-    stats_collector_->OnBackgroundTabOpeningSessionEnded();
-  }
 }
 
 void TabManager::StartForceLoadTimer() {
@@ -647,11 +602,9 @@ void TabManager::LoadNextBackgroundTabIfNeeded() {
   if (pending_navigations_.empty())
     return;
 
-  stats_collector_->OnWillLoadNextBackgroundTab(!IsForceLoadTimerRunning());
   BackgroundTabNavigationThrottle* throttle = pending_navigations_.front();
   pending_navigations_.erase(pending_navigations_.begin());
   ResumeNavigation(throttle);
-  stats_collector_->TrackBackgroundTabLoadAutoStarted();
 
   StartForceLoadTimer();
 }
@@ -661,7 +614,6 @@ void TabManager::ResumeTabNavigationIfNeeded(content::WebContents* contents) {
       RemovePendingNavigationIfNeeded(contents);
   if (throttle) {
     ResumeNavigation(throttle);
-    stats_collector_->TrackBackgroundTabLoadUserInitiated();
   }
 }
 
