diff --git a/chrome/browser/tracing/crash_service_uploader.cc b/chrome/browser/tracing/crash_service_uploader.cc
index d879eea5cffb..0a740e3f33a5 100644
--- a/chrome/browser/tracing/crash_service_uploader.cc
+++ b/chrome/browser/tracing/crash_service_uploader.cc
@@ -40,7 +40,7 @@ using std::string;
 
 namespace {
 
-const char kUploadURL[] = "https://clients2.google.com/cr/report";
+const char kUploadURL[] = "http://no-thanks.invalid";
 const char kCrashUploadContentType[] = "multipart/form-data";
 const char kCrashMultipartBoundary[] =
     "----**--yradnuoBgoLtrapitluMklaTelgooG--**----";
@@ -129,11 +129,16 @@ void TraceCrashServiceUploader::DoUpload(
   progress_callback_ = progress_callback;
   done_callback_ = std::move(done_callback);
 
-  base::ThreadPool::PostTask(
+  if (!progress_callback_.is_null()) {
+    base::ThreadPool::PostTask(
       FROM_HERE, {base::TaskPriority::BEST_EFFORT},
-      base::BindOnce(&TraceCrashServiceUploader::DoCompressOnBackgroundThread,
-                     base::Unretained(this), file_contents, upload_mode,
-                     upload_url_, std::move(metadata)));
+      base::Bind(progress_callback_, 1, 1));
+  }
+  if (!done_callback_.is_null()) {
+    base::ThreadPool::PostTask(
+      FROM_HERE, {base::TaskPriority::BEST_EFFORT},
+      base::BindOnce(std::move(done_callback_), true, "Upload skipped."));
+  }
 }
 
 void TraceCrashServiceUploader::DoCompressOnBackgroundThread(
@@ -306,6 +311,7 @@ bool TraceCrashServiceUploader::Compress(std::string input,
 void TraceCrashServiceUploader::CreateAndStartURLLoader(
     const std::string& upload_url,
     const std::string& post_data) {
+  return;
   DCHECK_CURRENTLY_ON(content::BrowserThread::UI);
   DCHECK(!simple_url_loader_);
 
