diff --git a/content/renderer/accessibility/render_accessibility_impl.h b/content/renderer/accessibility/render_accessibility_impl.h
index 0df6d32a8b65..42d97c200770 100644
--- a/content/renderer/accessibility/render_accessibility_impl.h
+++ b/content/renderer/accessibility/render_accessibility_impl.h
@@ -43,10 +43,6 @@ class AXActionTarget;
 struct AXEvent;
 }
 
-namespace ukm {
-class MojoUkmRecorder;
-}
-
 namespace content {
 
 class AXImageAnnotator;
@@ -152,9 +148,6 @@ class CONTENT_EXPORT RenderAccessibilityImpl : public RenderAccessibility,
   // Returns the page language.
   std::string GetLanguage();
 
-  // Access the UKM recorder.
-  ukm::MojoUkmRecorder* ukm_recorder() const { return ukm_recorder_.get(); }
-
  protected:
   // Send queued events from the renderer to the browser.
   void SendPendingAccessibilityEvents();
@@ -237,16 +230,6 @@ class CONTENT_EXPORT RenderAccessibilityImpl : public RenderAccessibility,
   // Cancels scheduled events that are not yet in flight
   void CancelScheduledEvents();
 
-  // Sends the URL-keyed metrics for the maximum amount of time spent in
-  // SendPendingAccessibilityEvents if they meet the minimum criteria for
-  // sending.
-  void MaybeSendUKM();
-
-  // Reset all of the UKM data. This can be called after sending UKM data,
-  // or after navigating to a new page when any previous data will no
-  // longer be valid.
-  void ResetUKMData();
-
   // The initial accessibility tree root still needs to be created. Like other
   // accessible objects, it must be created when layout is clean.
   bool needs_initial_ax_tree_root_ = true;
@@ -311,23 +294,11 @@ class CONTENT_EXPORT RenderAccessibilityImpl : public RenderAccessibility,
   // The specified page language, or empty if unknown.
   std::string page_language_;
 
-  // The URL-keyed metrics recorder interface.
-  std::unique_ptr<ukm::MojoUkmRecorder> ukm_recorder_;
-
   // The longest amount of time spent serializing the accessibility tree
   // in SendPendingAccessibilityEvents. This is periodically uploaded as
   // a UKM and then reset.
   int slowest_serialization_ms_ = 0;
 
-  // The amount of time since the last UKM upload.
-  std::unique_ptr<base::ElapsedTimer> ukm_timer_;
-
-  // The UKM Source ID that corresponds to the web page represented by
-  // slowest_serialization_ms_. We report UKM before the user navigates
-  // away, or every few minutes.
-  ukm::SourceId last_ukm_source_id_;
-  std::string last_ukm_url_;
-
   // So we can queue up tasks to be executed later.
   base::WeakPtrFactory<RenderAccessibilityImpl>
       weak_factory_for_pending_events_{this};
@@ -335,7 +306,6 @@ class CONTENT_EXPORT RenderAccessibilityImpl : public RenderAccessibility,
   friend class AXImageAnnotatorTest;
   friend class PluginActionHandlingTest;
   friend class RenderAccessibilityImplTest;
-  friend class RenderAccessibilityImplUKMTest;
 
   DISALLOW_COPY_AND_ASSIGN(RenderAccessibilityImpl);
 };
