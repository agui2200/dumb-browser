diff --git a/chrome/browser/renderer_context_menu/render_view_context_menu.h b/chrome/browser/renderer_context_menu/render_view_context_menu.h
index cd477e3ba1b4..5d82f5dd04c8 100644
--- a/chrome/browser/renderer_context_menu/render_view_context_menu.h
+++ b/chrome/browser/renderer_context_menu/render_view_context_menu.h
@@ -111,7 +111,6 @@ class RenderViewContextMenu : public RenderViewContextMenuBase {
 #if BUILDFLAG(ENABLE_EXTENSIONS)
   extensions::ContextMenuMatcher extension_items_;
 #endif
-  void RecordUsedItem(int id) override;
 
   // Returns true if the browser is in HTML fullscreen mode, initiated by the
   // page (as opposed to the user). Used to determine which shortcut to display.
@@ -147,7 +146,6 @@ class RenderViewContextMenu : public RenderViewContextMenuBase {
 
   // RenderViewContextMenuBase:
   void InitMenu() override;
-  void RecordShownItem(int id) override;
 #if BUILDFLAG(ENABLE_PLUGINS)
   void HandleAuthorizeAllPlugins() override;
 #endif
@@ -197,7 +195,9 @@ class RenderViewContextMenu : public RenderViewContextMenuBase {
   void AppendPasswordItems();
   void AppendPictureInPictureItem();
   void AppendSharingItems();
+#if BUILDFLAG(ENABLE_CLICK_TO_CALL)
   void AppendClickToCallItem();
+#endif
   void AppendSharedClipboardItem();
   void AppendQRCodeGeneratorItem(bool for_image, bool draw_icon);
 
@@ -307,9 +307,11 @@ class RenderViewContextMenu : public RenderViewContextMenuBase {
   std::unique_ptr<send_tab_to_self::SendTabToSelfSubMenuModel>
       send_tab_to_self_sub_menu_model_;
 
+#if BUILDFLAG(ENABLE_CLICK_TO_CALL)
   // Click to call menu observer.
   std::unique_ptr<ClickToCallContextMenuObserver>
       click_to_call_context_menu_observer_;
+#endif
 
   // Shared clipboard menu observer.
   std::unique_ptr<SharedClipboardContextMenuObserver>
