diff --git a/chrome/browser/renderer_context_menu/render_view_context_menu.h b/chrome/browser/renderer_context_menu/render_view_context_menu.h
index 140c03836951..32124c6548a8 100644
--- a/chrome/browser/renderer_context_menu/render_view_context_menu.h
+++ b/chrome/browser/renderer_context_menu/render_view_context_menu.h
@@ -34,13 +34,13 @@
 #endif
 
 class AccessibilityLabelsMenuObserver;
+#if BUILDFLAG(ENABLE_CLICK_TO_CALL)
 class ClickToCallContextMenuObserver;
+#endif
 class PrintPreviewContextMenuObserver;
 class Profile;
 class QuickAnswersMenuObserver;
 class SharedClipboardContextMenuObserver;
-class SpellingMenuObserver;
-class SpellingOptionsSubMenuObserver;
 
 namespace content {
 class RenderFrameHost;
@@ -73,10 +73,6 @@ class RenderViewContextMenu : public RenderViewContextMenuBase {
 
   ~RenderViewContextMenu() override;
 
-  // Adds the spell check service item to the context menu.
-  static void AddSpellCheckServiceItem(ui::SimpleMenuModel* menu,
-                                       bool is_checked);
-
   // Range of command IDs to use for the items in the send tab to self submenu.
   static const int kMaxSendTabToSelfSubMenuCommandId =
       send_tab_to_self::SendTabToSelfSubMenuModel::kMaxCommandId;
@@ -86,7 +82,6 @@ class RenderViewContextMenu : public RenderViewContextMenuBase {
   bool IsCommandIdVisible(int command_id) const override;
   bool IsCommandIdEnabled(int command_id) const override;
   void ExecuteCommand(int command_id, int event_flags) override;
-  void AddSpellCheckServiceItem(bool is_checked) override;
   void AddAccessibilityLabelsServiceItem(bool is_checked) override;
 
   // Registers a one-time callback that will be called the next time a context
@@ -180,7 +175,6 @@ class RenderViewContextMenu : public RenderViewContextMenuBase {
   void AppendRotationItems();
   void AppendEditableItems();
   void AppendLanguageSettings();
-  void AppendSpellingSuggestionItems();
   // Returns true if the items were appended. This might not happen in all
   // cases, e.g. these are only appended if a screen reader is enabled.
   bool AppendAccessibilityLabelsItems();
@@ -195,7 +189,9 @@ class RenderViewContextMenu : public RenderViewContextMenuBase {
   void AppendPasswordItems();
   void AppendPictureInPictureItem();
   void AppendSharingItems();
+#if BUILDFLAG(ENABLE_CLICK_TO_CALL)
   void AppendClickToCallItem();
+#endif
   void AppendSharedClipboardItem();
   void AppendQRCodeGeneratorItem(bool for_image, bool draw_icon);
 
@@ -264,22 +260,11 @@ class RenderViewContextMenu : public RenderViewContextMenuBase {
   ui::SimpleMenuModel protocol_handler_submenu_model_;
   ProtocolHandlerRegistry* protocol_handler_registry_;
 
-  // An observer that handles spelling suggestions, "Add to dictionary", and
-  // "Use enhanced spell check" items.
-  std::unique_ptr<SpellingMenuObserver> spelling_suggestions_menu_observer_;
-
   // An observer that handles accessibility labels items.
   std::unique_ptr<AccessibilityLabelsMenuObserver>
       accessibility_labels_menu_observer_;
   ui::SimpleMenuModel accessibility_labels_submenu_model_;
 
-#if !defined(OS_MAC)
-  // An observer that handles the submenu for showing spelling options. This
-  // submenu lets users select the spelling language, for example.
-  std::unique_ptr<SpellingOptionsSubMenuObserver>
-      spelling_options_submenu_observer_;
-#endif
-
 #if defined(OS_CHROMEOS)
   // An observer that handles "Open with <app>" items.
   std::unique_ptr<RenderViewContextMenuObserver> open_with_menu_observer_;
@@ -303,9 +288,11 @@ class RenderViewContextMenu : public RenderViewContextMenuBase {
   std::unique_ptr<send_tab_to_self::SendTabToSelfSubMenuModel>
       send_tab_to_self_sub_menu_model_;
 
+#if BUILDFLAG(ENABLE_CLICK_TO_CALL)
   // Click to call menu observer.
   std::unique_ptr<ClickToCallContextMenuObserver>
       click_to_call_context_menu_observer_;
+#endif
 
   // Shared clipboard menu observer.
   std::unique_ptr<SharedClipboardContextMenuObserver>
