diff --git a/chrome/browser/safe_browsing/safe_browsing_service.h b/chrome/browser/safe_browsing/safe_browsing_service.h
index 9dfec7284fd6..2e2464d11ac2 100644
--- a/chrome/browser/safe_browsing/safe_browsing_service.h
+++ b/chrome/browser/safe_browsing/safe_browsing_service.h
@@ -25,7 +25,6 @@
 #include "chrome/browser/profiles/profile_observer.h"
 #include "chrome/browser/safe_browsing/services_delegate.h"
 #include "components/safe_browsing/buildflags.h"
-#include "components/safe_browsing/core/common/safe_browsing_prefs.h"
 #include "components/safe_browsing/core/db/util.h"
 #include "components/safe_browsing/core/safe_browsing_service_interface.h"
 #include "content/public/browser/browser_thread.h"
@@ -93,15 +92,6 @@ class SafeBrowsingService : public SafeBrowsingServiceInterface,
   // Called on the main thread to let us know that the io_thread is going away.
   void ShutDown();
 
-  // NOTE(vakh): This is not the most reliable way to find out if extended
-  // reporting has been enabled. That's why it starts with estimated_. It
-  // returns true if any of the profiles have extended reporting enabled. It may
-  // be called on any thread. That can lead to a race condition, but that's
-  // acceptable.
-  ExtendedReportingLevel estimated_extended_reporting_by_prefs() const {
-    return estimated_extended_reporting_by_prefs_;
-  }
-
   // Get current enabled status. Must be called on IO thread.
   bool enabled() const {
     DCHECK_CURRENTLY_ON(content::BrowserThread::IO);
@@ -279,10 +269,6 @@ class SafeBrowsingService : public SafeBrowsingServiceInterface,
   // Provides phishing and malware statistics. Accessed on UI thread.
   std::unique_ptr<PingManager> ping_manager_;
 
-  // Whether SafeBrowsing Extended Reporting is enabled by the current set of
-  // profiles. Updated on the UI thread.
-  ExtendedReportingLevel estimated_extended_reporting_by_prefs_;
-
   // Whether the service has been shutdown.
   bool shutdown_;
 
