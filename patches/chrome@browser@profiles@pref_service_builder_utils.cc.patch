diff --git a/chrome/browser/profiles/pref_service_builder_utils.cc b/chrome/browser/profiles/pref_service_builder_utils.cc
index a7c58cc4bb9f..7efd2d6ac03b 100644
--- a/chrome/browser/profiles/pref_service_builder_utils.cc
+++ b/chrome/browser/profiles/pref_service_builder_utils.cc
@@ -12,13 +12,13 @@
 #include "base/files/file_util.h"
 #include "base/path_service.h"
 #include "base/sequenced_task_runner.h"
+#include "base/strings/stringprintf.h"
 #include "base/threading/scoped_blocking_call.h"
 #include "chrome/browser/browser_process.h"
 #include "chrome/browser/policy/chrome_browser_policy_connector.h"
 #include "chrome/browser/prefs/browser_prefs.h"
 #include "chrome/browser/prefs/chrome_pref_service_factory.h"
 #include "chrome/browser/prefs/profile_pref_store_manager.h"
-#include "chrome/browser/safe_browsing/safe_browsing_service.h"
 #include "chrome/common/buildflags.h"
 #include "chrome/common/chrome_constants.h"
 #include "chrome/grit/chromium_strings.h"
@@ -30,7 +30,6 @@
 #include "components/prefs/pref_value_store.h"
 #include "components/sync_preferences/pref_service_syncable.h"
 #include "content/public/browser/network_service_instance.h"
-#include "services/preferences/public/mojom/tracked_preference_validation_delegate.mojom.h"
 #include "ui/base/l10n/l10n_util.h"
 
 #if BUILDFLAG(ENABLE_SUPERVISED_USERS)
@@ -86,8 +85,6 @@ std::unique_ptr<sync_preferences::PrefServiceSyncable> CreatePrefService(
     PrefStore* extension_pref_store,
     policy::PolicyService* policy_service,
     policy::ChromeBrowserPolicyConnector* browser_policy_connector,
-    mojo::PendingRemote<prefs::mojom::TrackedPreferenceValidationDelegate>
-        pref_validation_delegate,
     scoped_refptr<base::SequencedTaskRunner> io_task_runner,
     SimpleFactoryKey* key,
     const base::FilePath& path,
@@ -100,7 +97,7 @@ std::unique_ptr<sync_preferences::PrefServiceSyncable> CreatePrefService(
 #endif
   {
     return chrome_prefs::CreateProfilePrefs(
-        path, std::move(pref_validation_delegate), policy_service,
+        path, policy_service,
         supervised_user_settings, extension_pref_store, pref_registry,
         browser_policy_connector, async_prefs, io_task_runner);
   }
