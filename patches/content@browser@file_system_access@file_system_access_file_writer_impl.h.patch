diff --git a/content/browser/file_system_access/file_system_access_file_writer_impl.h b/content/browser/file_system_access/file_system_access_file_writer_impl.h
index 4d1881e579dde..cdb0e09eeeb8b 100644
--- a/content/browser/file_system_access/file_system_access_file_writer_impl.h
+++ b/content/browser/file_system_access/file_system_access_file_writer_impl.h
@@ -7,7 +7,6 @@
 
 #include "base/memory/weak_ptr.h"
 #include "base/types/pass_key.h"
-#include "components/download/public/common/quarantine_connection.h"
 #include "components/services/filesystem/public/mojom/types.mojom.h"
 #include "content/browser/file_system_access/file_system_access_file_handle_impl.h"
 #include "content/browser/file_system_access/file_system_access_handle_base.h"
@@ -48,8 +47,7 @@ class CONTENT_EXPORT FileSystemAccessFileWriterImpl
       const SharedHandleState& handle_state,
       mojo::PendingReceiver<blink::mojom::FileSystemAccessFileWriter> receiver,
       bool has_transient_user_activation,
-      bool auto_close,
-      download::QuarantineConnectionCallback quarantine_connection_callback);
+      bool auto_close);
   ~FileSystemAccessFileWriterImpl() override;
 
   const storage::FileSystemURL& swap_url() const { return swap_url_; }
@@ -99,20 +97,10 @@ class CONTENT_EXPORT FileSystemAccessFileWriterImpl
   void TruncateImpl(uint64_t length, TruncateCallback callback);
   void CloseImpl(CloseCallback callback);
   void AbortImpl(AbortCallback callback);
-  void DoAfterWriteCheck(base::File::Error hash_result,
-                         const std::string& hash,
-                         int64_t size);
   void DidAfterWriteCheck(
       FileSystemAccessPermissionContext::AfterWriteCheckResult result);
   void DidSwapFileSkipQuarantine(base::File::Error result);
-  void DidSwapFileDoQuarantine(
-      const storage::FileSystemURL& target_url,
-      const GURL& referrer_url,
-      mojo::Remote<quarantine::mojom::Quarantine> quarantine_remote,
-      base::File::Error result);
-  void DidAnnotateFile(
-      mojo::Remote<quarantine::mojom::Quarantine> quarantine_remote,
-      quarantine::mojom::QuarantineFileResult result);
+  void DidAnnotateFile();
 
   // After write and quarantine checks should apply to paths on all filesystems
   // except temporary file systems.
@@ -132,12 +120,6 @@ class CONTENT_EXPORT FileSystemAccessFileWriterImpl
 
   CloseCallback close_callback_;
 
-  download::QuarantineConnectionCallback quarantine_connection_callback_;
-
-  // Keeps track of user activation state at creation time for after write
-  // checks.
-  bool has_transient_user_activation_ = false;
-
   // Changes will be written to the target file even if the stream isn't
   // explicitly closed.
   bool auto_close_ = false;
