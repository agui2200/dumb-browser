diff --git a/third_party/blink/renderer/modules/webmidi/midi_access.cc b/third_party/blink/renderer/modules/webmidi/midi_access.cc
index 442923960c930..ac5f79da4174b 100644
--- a/third_party/blink/renderer/modules/webmidi/midi_access.cc
+++ b/third_party/blink/renderer/modules/webmidi/midi_access.cc
@@ -31,10 +31,6 @@
 #include "third_party/blink/renderer/modules/webmidi/midi_access.h"
 
 #include <memory>
-#include "third_party/blink/public/common/privacy_budget/identifiability_metric_builder.h"
-#include "third_party/blink/public/common/privacy_budget/identifiability_study_settings.h"
-#include "third_party/blink/public/common/privacy_budget/identifiable_surface.h"
-#include "third_party/blink/public/common/privacy_budget/identifiable_token_builder.h"
 #include "third_party/blink/renderer/core/dom/document.h"
 #include "third_party/blink/renderer/core/loader/document_load_timing.h"
 #include "third_party/blink/renderer/core/loader/document_loader.h"
@@ -46,7 +42,6 @@
 #include "third_party/blink/renderer/modules/webmidi/midi_output_map.h"
 #include "third_party/blink/renderer/modules/webmidi/midi_port.h"
 #include "third_party/blink/renderer/platform/heap/heap.h"
-#include "third_party/blink/renderer/platform/privacy_budget/identifiability_digest_helpers.h"
 
 namespace blink {
 
@@ -85,22 +80,6 @@ MIDIAccess::MIDIAccess(
           port.version, ToDeviceState(port.state)));
     }
   }
-  constexpr IdentifiableSurface surface = IdentifiableSurface::FromTypeAndToken(
-      IdentifiableSurface::Type::kWebFeature,
-      WebFeature::kRequestMIDIAccess_ObscuredByFootprinting);
-  if (IdentifiabilityStudySettings::Get()->ShouldSample(surface)) {
-    IdentifiableTokenBuilder builder;
-    for (const auto& port : ports) {
-      builder.AddToken(IdentifiabilityBenignStringToken(port.id));
-      builder.AddToken(IdentifiabilityBenignStringToken(port.name));
-      builder.AddToken(IdentifiabilityBenignStringToken(port.manufacturer));
-      builder.AddToken(IdentifiabilityBenignStringToken(port.version));
-      builder.AddToken(port.type);
-    }
-    IdentifiabilityMetricBuilder(execution_context->UkmSourceID())
-        .Set(surface, builder.GetToken())
-        .Record(execution_context->UkmRecorder());
-  }
 }
 
 MIDIAccess::~MIDIAccess() = default;
