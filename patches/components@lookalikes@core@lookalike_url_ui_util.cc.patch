diff --git a/components/lookalikes/core/lookalike_url_ui_util.cc b/components/lookalikes/core/lookalike_url_ui_util.cc
index 0347407999c9..5ee34facd888 100644
--- a/components/lookalikes/core/lookalike_url_ui_util.cc
+++ b/components/lookalikes/core/lookalike_url_ui_util.cc
@@ -8,35 +8,8 @@
 #include "components/lookalikes/core/lookalike_url_util.h"
 #include "components/security_interstitials/core/common_string_util.h"
 #include "components/strings/grit/components_strings.h"
-#include "services/metrics/public/cpp/ukm_builders.h"
-#include "services/metrics/public/cpp/ukm_recorder.h"
 #include "ui/base/l10n/l10n_util.h"
 
-void RecordUkmForLookalikeUrlBlockingPage(
-    ukm::SourceId source_id,
-    LookalikeUrlMatchType match_type,
-    LookalikeUrlBlockingPageUserAction user_action) {
-  ukm::UkmRecorder* ukm_recorder = ukm::UkmRecorder::Get();
-  CHECK(ukm_recorder);
-
-  ukm::builders::LookalikeUrl_NavigationSuggestion(source_id)
-      .SetMatchType(static_cast<int>(match_type))
-      .SetUserAction(static_cast<int>(user_action))
-      .Record(ukm_recorder);
-}
-
-void ReportUkmForLookalikeUrlBlockingPageIfNeeded(
-    ukm::SourceId& source_id,
-    LookalikeUrlMatchType match_type,
-    LookalikeUrlBlockingPageUserAction action) {
-  // Rely on the saved SourceId because deconstruction happens after the next
-  // navigation occurs, so web contents points to the new destination.
-  if (source_id != ukm::kInvalidSourceId) {
-    RecordUkmForLookalikeUrlBlockingPage(source_id, match_type, action);
-    source_id = ukm::kInvalidSourceId;
-  }
-}
-
 void PopulateLookalikeUrlBlockingPageStrings(
     base::DictionaryValue* load_time_data,
     const GURL& safe_url,
@@ -46,12 +19,6 @@ void PopulateLookalikeUrlBlockingPageStrings(
   PopulateStringsForSharedHTML(load_time_data);
   load_time_data->SetString("tabTitle",
                             l10n_util::GetStringUTF16(IDS_LOOKALIKE_URL_TITLE));
-  load_time_data->SetString(
-      "optInLink",
-      l10n_util::GetStringUTF16(IDS_SAFE_BROWSING_SCOUT_REPORTING_AGREE));
-  load_time_data->SetString(
-      "enhancedProtectionMessage",
-      l10n_util::GetStringUTF16(IDS_SAFE_BROWSING_ENHANCED_PROTECTION_MESSAGE));
 
   if (safe_url.is_valid()) {
     const base::string16 hostname =
