diff --git a/content/browser/contacts/contacts_manager_impl.cc b/content/browser/contacts/contacts_manager_impl.cc
index fd419c1e2f4e..50e54499b25b 100644
--- a/content/browser/contacts/contacts_manager_impl.cc
+++ b/content/browser/contacts/contacts_manager_impl.cc
@@ -15,7 +15,6 @@
 #include "content/public/browser/web_contents.h"
 #include "mojo/public/cpp/bindings/self_owned_receiver.h"
 #include "services/metrics/public/cpp/metrics_utils.h"
-#include "services/metrics/public/cpp/ukm_builders.h"
 
 #if defined(OS_ANDROID)
 #include "content/browser/contacts/contacts_provider_android.h"
@@ -38,18 +37,9 @@ std::unique_ptr<ContactsProvider> CreateProvider(
 
 void OnContactsSelected(
     blink::mojom::ContactsManager::SelectCallback callback,
-    ukm::SourceId source_id,
     base::Optional<std::vector<blink::mojom::ContactInfoPtr>> contacts,
     int percentage_shared,
     ContactsPickerPropertiesRequested properties_requested) {
-  if (contacts != base::nullopt) {
-    int select_count = contacts.value().size();
-    ukm::builders::ContactsPicker_ShareStatistics(source_id)
-        .SetSelectCount(ukm::GetExponentialBucketMinForCounts1000(select_count))
-        .SetSelectPercentage(percentage_shared)
-        .SetPropertiesRequested(properties_requested)
-        .Record(ukm::UkmRecorder::Get());
-  }
   std::move(callback).Run(std::move(contacts));
 }
 
@@ -70,8 +60,6 @@ ContactsManagerImpl::ContactsManagerImpl(RenderFrameHostImpl* render_frame_host)
       WebContents::FromRenderFrameHost(render_frame_host);
   if (!web_contents || !web_contents->GetTopLevelNativeWindow())
     return;
-
-  source_id_ = render_frame_host->GetPageUkmSourceId();
 }
 
 ContactsManagerImpl::~ContactsManagerImpl() = default;
@@ -87,8 +75,7 @@ void ContactsManagerImpl::Select(bool multiple,
     contacts_provider_->Select(
         multiple, include_names, include_emails, include_tel, include_addresses,
         include_icons,
-        base::BindOnce(&OnContactsSelected, std::move(mojom_callback),
-                       source_id_));
+        base::BindOnce(&OnContactsSelected, std::move(mojom_callback)));
   } else {
     std::move(mojom_callback).Run(base::nullopt);
   }
