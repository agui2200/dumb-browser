diff --git a/components/translate/core/browser/translate_ranker_impl.h b/components/translate/core/browser/translate_ranker_impl.h
index c07ab56885d7..0ca58bde76ab 100644
--- a/components/translate/core/browser/translate_ranker_impl.h
+++ b/components/translate/core/browser/translate_ranker_impl.h
@@ -17,7 +17,6 @@
 #include "components/assist_ranker/ranker_model_loader.h"
 #include "components/keyed_service/core/keyed_service.h"
 #include "components/translate/core/browser/translate_ranker.h"
-#include "services/metrics/public/cpp/ukm_source_id.h"
 #include "url/gurl.h"
 
 class GURL;
@@ -26,10 +25,6 @@ namespace assist_ranker {
 class RankerModel;
 }  // namespace assist_ranker
 
-namespace ukm {
-class UkmRecorder;
-}  // namespace ukm
-
 namespace metrics {
 class TranslateEventProto;
 }  // namespace metrics
@@ -82,8 +77,7 @@ struct TranslateRankerFeatures {
 class TranslateRankerImpl : public TranslateRanker {
  public:
   TranslateRankerImpl(const base::FilePath& model_path,
-                      const GURL& model_url,
-                      ukm::UkmRecorder* ukm_recorder);
+                      const GURL& model_url);
   ~TranslateRankerImpl() override;
 
   // Get the file path of the translate ranker model, by default with a fixed
@@ -101,14 +95,8 @@ class TranslateRankerImpl : public TranslateRanker {
       metrics::TranslateEventProto* translate_event) override;
   void FlushTranslateEvents(
       std::vector<metrics::TranslateEventProto>* events) override;
-  void RecordTranslateEvent(
-      int event_type,
-      ukm::SourceId ukm_source_id,
-      metrics::TranslateEventProto* translate_event) override;
   bool ShouldOverrideDecision(
-      int event_type,
-      ukm::SourceId ukm_source_id,
-      metrics::TranslateEventProto* translate_event) override;
+      int event_type) override;
 
   void OnModelAvailable(std::unique_ptr<assist_ranker::RankerModel> model);
 
@@ -121,15 +109,8 @@ class TranslateRankerImpl : public TranslateRanker {
   bool CheckModelLoaderForTesting();
 
  private:
-  void SendEventToUKM(const metrics::TranslateEventProto& translate_event,
-                      ukm::SourceId ukm_source_id);
-
   // Caches the translate event.
-  void AddTranslateEvent(const metrics::TranslateEventProto& translate_event,
-                         ukm::SourceId ukm_source_id);
-
-  // Used to log URL-keyed metrics. This pointer will outlive |this|.
-  ukm::UkmRecorder* ukm_recorder_;
+  void AddTranslateEvent(const metrics::TranslateEventProto& translate_event);
 
   // Used to sanity check the threading of this ranker.
   base::SequenceChecker sequence_checker_;
