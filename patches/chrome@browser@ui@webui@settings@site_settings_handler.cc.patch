diff --git a/chrome/browser/ui/webui/settings/site_settings_handler.cc b/chrome/browser/ui/webui/settings/site_settings_handler.cc
index 918e662ffe108..5e4c3d96f8739 100644
--- a/chrome/browser/ui/webui/settings/site_settings_handler.cc
+++ b/chrome/browser/ui/webui/settings/site_settings_handler.cc
@@ -53,7 +53,6 @@
 #include "components/permissions/contexts/bluetooth_chooser_context.h"
 #include "components/permissions/object_permission_context_base.h"
 #include "components/permissions/permission_decision_auto_blocker.h"
-#include "components/permissions/permission_uma_util.h"
 #include "components/permissions/permission_util.h"
 #include "components/prefs/pref_change_registrar.h"
 #include "components/prefs/pref_service.h"
@@ -1041,11 +1040,6 @@ void SiteSettingsHandler::HandleSetOriginPermissions(
     HostContentSettingsMap* map =
         HostContentSettingsMapFactory::GetForProfile(profile_);
 
-    permissions::PermissionUmaUtil::ScopedRevocationReporter
-        scoped_revocation_reporter(
-            profile_, origin, origin, content_type,
-            permissions::PermissionSourceUI::SITE_SETTINGS);
-
     // Clear any existing embargo status if the new setting isn't block.
     if (setting != CONTENT_SETTING_BLOCK) {
       PermissionDecisionAutoBlockerFactory::GetForProfile(profile_)
@@ -1118,10 +1112,6 @@ void SiteSettingsHandler::HandleResetCategoryPermissionForPattern(
       secondary_pattern_string.empty()
           ? ContentSettingsPattern::Wildcard()
           : ContentSettingsPattern::FromString(secondary_pattern_string);
-  permissions::PermissionUmaUtil::ScopedRevocationReporter
-      scoped_revocation_reporter(
-          profile, primary_pattern, secondary_pattern, content_type,
-          permissions::PermissionSourceUI::SITE_SETTINGS);
 
   map->SetContentSettingCustomScope(primary_pattern, secondary_pattern,
                                     content_type, CONTENT_SETTING_DEFAULT);
@@ -1196,11 +1186,6 @@ void SiteSettingsHandler::HandleSetCategoryPermissionForPattern(
     }
   }
 
-  permissions::PermissionUmaUtil::ScopedRevocationReporter
-      scoped_revocation_reporter(
-          profile, primary_pattern, secondary_pattern, content_type,
-          permissions::PermissionSourceUI::SITE_SETTINGS);
-
   map->SetContentSettingCustomScope(primary_pattern, secondary_pattern,
                                     content_type, setting);
 
