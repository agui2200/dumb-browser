diff --git a/chrome/browser/ui/webui/settings/site_settings_handler.cc b/chrome/browser/ui/webui/settings/site_settings_handler.cc
index 73dd3c48952c..2a27727c6dba 100644
--- a/chrome/browser/ui/webui/settings/site_settings_handler.cc
+++ b/chrome/browser/ui/webui/settings/site_settings_handler.cc
@@ -52,7 +52,6 @@
 #include "components/crx_file/id_util.h"
 #include "components/permissions/chooser_context_base.h"
 #include "components/permissions/permission_decision_auto_blocker.h"
-#include "components/permissions/permission_uma_util.h"
 #include "components/permissions/permission_util.h"
 #include "components/prefs/pref_change_registrar.h"
 #include "components/prefs/pref_service.h"
@@ -1046,11 +1045,6 @@ void SiteSettingsHandler::HandleSetOriginPermissions(
     HostContentSettingsMap* map =
         HostContentSettingsMapFactory::GetForProfile(profile_);
 
-    permissions::PermissionUmaUtil::ScopedRevocationReporter
-        scoped_revocation_reporter(
-            profile_, origin, origin, content_type,
-            permissions::PermissionSourceUI::SITE_SETTINGS);
-
     // Clear any existing embargo status if the new setting isn't block.
     if (setting != CONTENT_SETTING_BLOCK) {
       PermissionDecisionAutoBlockerFactory::GetForProfile(profile_)
@@ -1123,10 +1117,6 @@ void SiteSettingsHandler::HandleResetCategoryPermissionForPattern(
       secondary_pattern_string.empty()
           ? ContentSettingsPattern::Wildcard()
           : ContentSettingsPattern::FromString(secondary_pattern_string);
-  permissions::PermissionUmaUtil::ScopedRevocationReporter
-      scoped_revocation_reporter(
-          profile, primary_pattern, secondary_pattern, content_type,
-          permissions::PermissionSourceUI::SITE_SETTINGS);
 
   map->SetContentSettingCustomScope(primary_pattern, secondary_pattern,
                                     content_type, CONTENT_SETTING_DEFAULT);
@@ -1189,11 +1179,6 @@ void SiteSettingsHandler::HandleSetCategoryPermissionForPattern(
           ? ContentSettingsPattern::Wildcard()
           : ContentSettingsPattern::FromString(secondary_pattern_string);
 
-  permissions::PermissionUmaUtil::ScopedRevocationReporter
-      scoped_revocation_reporter(
-          profile, primary_pattern, secondary_pattern, content_type,
-          permissions::PermissionSourceUI::SITE_SETTINGS);
-
   map->SetContentSettingCustomScope(primary_pattern, secondary_pattern,
                                     content_type, setting);
 
