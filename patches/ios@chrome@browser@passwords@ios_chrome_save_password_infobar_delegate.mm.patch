diff --git a/ios/chrome/browser/passwords/ios_chrome_save_password_infobar_delegate.mm b/ios/chrome/browser/passwords/ios_chrome_save_password_infobar_delegate.mm
index d3afee460f21..9dd02118a672 100644
--- a/ios/chrome/browser/passwords/ios_chrome_save_password_infobar_delegate.mm
+++ b/ios/chrome/browser/passwords/ios_chrome_save_password_infobar_delegate.mm
@@ -11,7 +11,6 @@
 #include "components/infobars/core/infobar.h"
 #include "components/infobars/core/infobar_manager.h"
 #include "components/password_manager/core/browser/password_form_manager_for_ui.h"
-#include "components/password_manager/core/browser/password_form_metrics_recorder.h"
 #include "components/password_manager/core/browser/password_manager_constants.h"
 #include "components/password_manager/core/browser/password_ui_utils.h"
 #include "components/strings/grit/components_strings.h"
@@ -25,83 +24,6 @@
 
 namespace {
 
-// Records Presentation Metrics for the Infobar Delegate.
-// |current_password_saved| is true if the Infobar is on read-only mode after a
-// Save/Update action has occured.
-// |update_infobar| is YES if presenting an Update Infobar, NO if presenting a
-// Save Infobar.
-// |automatic| is YES the Infobar was presented automatically(e.g. The banner
-// was presented), NO if the user triggered it  (e.g. Tapped onthe badge).
-void RecordPresentationMetrics(
-    password_manager::PasswordFormManagerForUI* form_to_save,
-    bool current_password_saved,
-    bool update_infobar,
-    bool automatic) {
-  if (current_password_saved) {
-    // Password was already saved or updated.
-    form_to_save->GetMetricsRecorder()->RecordPasswordBubbleShown(
-        form_to_save->GetCredentialSource(),
-        password_manager::metrics_util::MANUAL_MANAGE_PASSWORDS);
-    password_manager::metrics_util::LogUIDisplayDisposition(
-        password_manager::metrics_util::MANUAL_MANAGE_PASSWORDS);
-    return;
-  }
-
-  if (update_infobar) {
-    // Update Password.
-    if (automatic) {
-      form_to_save->GetMetricsRecorder()->RecordPasswordBubbleShown(
-          form_to_save->GetCredentialSource(),
-          password_manager::metrics_util::
-              AUTOMATIC_WITH_PASSWORD_PENDING_UPDATE);
-      password_manager::metrics_util::LogUIDisplayDisposition(
-          password_manager::metrics_util::
-              AUTOMATIC_WITH_PASSWORD_PENDING_UPDATE);
-    } else {
-      form_to_save->GetMetricsRecorder()->RecordPasswordBubbleShown(
-          form_to_save->GetCredentialSource(),
-          password_manager::metrics_util::MANUAL_WITH_PASSWORD_PENDING_UPDATE);
-      password_manager::metrics_util::LogUIDisplayDisposition(
-          password_manager::metrics_util::MANUAL_WITH_PASSWORD_PENDING_UPDATE);
-    }
-  } else {
-    // Save Password.
-    if (automatic) {
-      form_to_save->GetMetricsRecorder()->RecordPasswordBubbleShown(
-          form_to_save->GetCredentialSource(),
-          password_manager::metrics_util::AUTOMATIC_WITH_PASSWORD_PENDING);
-      password_manager::metrics_util::LogUIDisplayDisposition(
-          password_manager::metrics_util::AUTOMATIC_WITH_PASSWORD_PENDING);
-    } else {
-      form_to_save->GetMetricsRecorder()->RecordPasswordBubbleShown(
-          form_to_save->GetCredentialSource(),
-          password_manager::metrics_util::MANUAL_WITH_PASSWORD_PENDING);
-      password_manager::metrics_util::LogUIDisplayDisposition(
-          password_manager::metrics_util::MANUAL_WITH_PASSWORD_PENDING);
-    }
-  }
-}
-
-// Records Dismissal Metrics for the Infobar Delegate.
-// |infobar_response| is the action that was taken in order to dismiss the
-// Infobar.
-// |update_infobar| is YES if presenting an Update Infobar, NO if presenting a
-// Save Infobar.
-void RecordDismissalMetrics(
-    password_manager::PasswordFormManagerForUI* form_to_save,
-    password_manager::metrics_util::UIDismissalReason infobar_response,
-    bool update_infobar) {
-  form_to_save->GetMetricsRecorder()->RecordUIDismissalReason(infobar_response);
-
-  if (update_infobar) {
-    password_manager::metrics_util::LogUpdateUIDismissalReason(
-        infobar_response);
-  } else {
-    password_manager::metrics_util::LogSaveUIDismissalReason(
-        infobar_response, /*user_state=*/base::nullopt);
-  }
-}
-
 bool IsUpdateInfobar(PasswordInfobarType infobar_type) {
   switch (infobar_type) {
     case PasswordInfobarType::kPasswordInfobarTypeUpdate: {
@@ -138,12 +60,6 @@ bool IsUpdateInfobar(PasswordInfobarType infobar_type) {
 }
 
 IOSChromeSavePasswordInfoBarDelegate::~IOSChromeSavePasswordInfoBarDelegate() {
-    // If by any reason this delegate gets dealloc before the Infobar is
-    // dismissed, record the dismissal metrics.
-    if (infobar_presenting_) {
-      RecordDismissalMetrics(form_to_save(), infobar_response(),
-                             IsUpdateInfobar(infobar_type_));
-    }
 }
 
 infobars::InfoBarDelegate::InfoBarIdentifier
@@ -224,8 +140,6 @@ bool IsUpdateInfobar(PasswordInfobarType infobar_type) {
   if (infobar_presenting_)
     return;
 
-  RecordPresentationMetrics(form_to_save(), current_password_saved_,
-                            IsUpdateInfobar(infobar_type_), automatic);
   infobar_presenting_ = YES;
 }
 
@@ -233,8 +147,6 @@ bool IsUpdateInfobar(PasswordInfobarType infobar_type) {
   if (!infobar_presenting_)
     return;
 
-  RecordDismissalMetrics(form_to_save(), infobar_response(),
-                         IsUpdateInfobar(infobar_type_));
   // After the metrics have been recorded we can reset the response.
   set_infobar_response(password_manager::metrics_util::NO_DIRECT_INTERACTION);
   infobar_presenting_ = NO;
