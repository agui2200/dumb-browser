diff --git a/chrome/browser/media/router/media_router_feature.cc b/chrome/browser/media/router/media_router_feature.cc
index 487542297e5f..1920de23202d 100644
--- a/chrome/browser/media/router/media_router_feature.cc
+++ b/chrome/browser/media/router/media_router_feature.cc
@@ -34,11 +34,13 @@ namespace media_router {
 
 #if !defined(OS_ANDROID)
 #if !defined(OFFICIAL_BUILD)
+#if BUILDFLAG(ENABLE_MEDIA_REMOTING)
 // Enables the media router. Can be useful to disable for local
 // development on Mac because DIAL local discovery opens a local port
 // and triggers a permission prompt. Only toggleable for developer builds.
 const base::Feature kMediaRouter{"MediaRouter",
                                  base::FEATURE_ENABLED_BY_DEFAULT};
+#endif // BUILDFLAG(ENABLE_MEDIA_REMOTING)
 #endif  // !defined(OFFICIAL_BUILD)
 // Controls if browser side DialMediaRouteProvider is enabled.
 const base::Feature kDialMediaRouteProvider{"DialMediaRouteProvider",
@@ -55,15 +57,18 @@ const base::Feature kAllowAllSitesToInitiateMirroring{
 
 #if defined(OS_ANDROID) || BUILDFLAG(ENABLE_EXTENSIONS)
 namespace {
+#if BUILDFLAG(ENABLE_MEDIA_REMOTING)
 const PrefService::Preference* GetMediaRouterPref(
     content::BrowserContext* context) {
   return user_prefs::UserPrefs::Get(context)->FindPreference(
       ::prefs::kEnableMediaRouter);
 }
+#endif // BUILDFLAG(ENABLE_MEDIA_REMOTING)
 }  // namespace
 #endif  // defined(OS_ANDROID) || BUILDFLAG(ENABLE_EXTENSIONS)
 
 bool MediaRouterEnabled(content::BrowserContext* context) {
+#if BUILDFLAG(ENABLE_MEDIA_REMOTING)
 #if !defined(OFFICIAL_BUILD) && !defined(OS_ANDROID)
   if (!base::FeatureList::IsEnabled(kMediaRouter))
     return false;
@@ -95,6 +100,9 @@ bool MediaRouterEnabled(content::BrowserContext* context) {
 #else   // !(defined(OS_ANDROID) || BUILDFLAG(ENABLE_EXTENSIONS))
   return false;
 #endif  // defined(OS_ANDROID) || BUILDFLAG(ENABLE_EXTENSIONS)
+#else
+  return false;
+#endif // BUILDFLAG(ENABLE_MEDIA_REMOTING)
 }
 
 #if !defined(OS_ANDROID)
