diff --git a/chrome/browser/ui/webui/signin/profile_picker_handler.cc b/chrome/browser/ui/webui/signin/profile_picker_handler.cc
index 500d8302043c4..1c8cc07d845ad 100644
--- a/chrome/browser/ui/webui/signin/profile_picker_handler.cc
+++ b/chrome/browser/ui/webui/signin/profile_picker_handler.cc
@@ -489,8 +489,6 @@ void ProfilePickerHandler::HandleCreateProfile(const base::ListValue* args) {
   DCHECK(profiles::IsDefaultAvatarIconIndex(avatar_index));
 #endif
 
-  ProfileMetrics::LogProfileAddNewUser(
-      ProfileMetrics::ADD_NEW_PROFILE_PICKER_LOCAL);
   ProfileManager::CreateMultiProfileAsync(
       profile_name, avatar_index, /*is_hidden=*/false,
       base::BindRepeating(&ProfilePickerHandler::OnProfileCreated,
@@ -651,8 +649,7 @@ void ProfilePickerHandler::HandleRemoveProfile(const base::ListValue* args) {
     return;
   }
   RecordProfilePickerAction(ProfilePickerAction::kDeleteProfile);
-  webui::DeleteProfileAtPath(*profile_path,
-                             ProfileMetrics::DELETE_PROFILE_USER_MANAGER);
+  webui::DeleteProfileAtPath(*profile_path);
 }
 
 void ProfilePickerHandler::HandleGetProfileStatistics(
@@ -924,9 +921,6 @@ void ProfilePickerHandler::DidFirstVisuallyNonEmptyPaint() {
   auto now = base::TimeTicks::Now();
   base::UmaHistogramTimes("ProfilePicker.StartupTime.FirstPaint",
                           now - creation_time_on_startup_);
-  startup_metric_utils::RecordExternalStartupMetric(
-      "ProfilePicker.StartupTime.FirstPaint.FromApplicationStart", now,
-      /*set_non_browser_ui_displayed=*/true);
   // Stop observing so that the histogram is only recorded once.
   Observe(nullptr);
 }
