diff --git a/third_party/blink/renderer/platform/graphics/canvas_resource_provider.h b/third_party/blink/renderer/platform/graphics/canvas_resource_provider.h
index 3043630b791bf..d4265622763c7 100644
--- a/third_party/blink/renderer/platform/graphics/canvas_resource_provider.h
+++ b/third_party/blink/renderer/platform/graphics/canvas_resource_provider.h
@@ -9,7 +9,6 @@
 #include "cc/raster/playback_image_provider.h"
 #include "gpu/command_buffer/common/shared_image_usage.h"
 #include "third_party/blink/renderer/platform/graphics/canvas_resource.h"
-#include "third_party/blink/renderer/platform/graphics/identifiability_paint_op_digest.h"
 #include "third_party/blink/renderer/platform/graphics/image_orientation.h"
 #include "third_party/blink/renderer/platform/graphics/memory_managed_paint_recorder.h"
 #include "third_party/blink/renderer/platform/graphics/paint/paint_recorder.h"
@@ -228,6 +227,7 @@ class PLATFORM_EXPORT CanvasResourceProvider
 
   void OnDestroyResource();
 
+#if 0
   // Gets an immutable reference to the IdentifiabilityPaintOpDigest, which
   // contains the current PaintOp digest, and taint bits (encountered
   // partially-digested images, encountered skipped ops).
@@ -236,6 +236,7 @@ class PLATFORM_EXPORT CanvasResourceProvider
   // method also calls FlushCanvas() to ensure that all operations are accounted
   // for in the digest.
   const IdentifiabilityPaintOpDigest& GetIdentifiablityPaintOpDigest();
+#endif
   virtual void OnAcquireRecyclableCanvasResource() {}
   virtual void OnDestroyRecyclableCanvasResource(
       const gpu::SyncToken& sync_token) {}
@@ -346,10 +347,6 @@ class PLATFORM_EXPORT CanvasResourceProvider
 
   RestoreMatrixClipStackCb restore_clip_stack_callback_;
 
-  // For identifiability metrics -- PaintOps are serialized so that digests can
-  // be calculated using hashes of the serialized output.
-  IdentifiabilityPaintOpDigest identifiability_paint_op_digest_;
-
   base::WeakPtrFactory<CanvasResourceProvider> weak_ptr_factory_{this};
 
   DISALLOW_COPY_AND_ASSIGN(CanvasResourceProvider);
