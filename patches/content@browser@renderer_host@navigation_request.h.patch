diff --git a/content/browser/renderer_host/navigation_request.h b/content/browser/renderer_host/navigation_request.h
index a5c8cafef454..a475a7f6bb63 100644
--- a/content/browser/renderer_host/navigation_request.h
+++ b/content/browser/renderer_host/navigation_request.h
@@ -75,7 +75,6 @@ struct URLLoaderCompletionStatus;
 namespace content {
 
 class AppCacheNavigationHandle;
-class CrossOriginEmbedderPolicyReporter;
 class WebBundleHandleTracker;
 class WebBundleNavigationInfo;
 class FrameNavigationEntry;
@@ -225,7 +224,6 @@ class CONTENT_EXPORT NavigationRequest
       const std::vector<GURL>& redirects,
       const GURL& original_url,
       const blink::PageState& page_state,
-      std::unique_ptr<CrossOriginEmbedderPolicyReporter> coep_reporter,
       std::unique_ptr<WebBundleNavigationInfo> web_bundle_navigation_info,
       int http_response_code);
 
@@ -675,12 +673,6 @@ class CONTENT_EXPORT NavigationRequest
     return policy_container_host_.get();
   }
 
-  CrossOriginEmbedderPolicyReporter* coep_reporter() {
-    return coep_reporter_.get();
-  }
-
-  std::unique_ptr<CrossOriginEmbedderPolicyReporter> TakeCoepReporter();
-
   // Returns UKM SourceId for the page we are navigating away from.
   // Equal to GetRenderFrameHost()->GetPageUkmSourceId() for subframe
   // and same-document navigations and to
@@ -1507,8 +1499,6 @@ class CONTENT_EXPORT NavigationRequest
   // DidCommitNavigation time.
   std::unique_ptr<PolicyContainerHost> policy_container_host_;
 
-  std::unique_ptr<CrossOriginEmbedderPolicyReporter> coep_reporter_;
-
   std::unique_ptr<PeakGpuMemoryTracker> loading_mem_tracker_ = nullptr;
 
   // Structure tracking the effects of the CrossOriginOpenerPolicy on this
