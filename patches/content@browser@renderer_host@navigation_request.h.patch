diff --git a/content/browser/renderer_host/navigation_request.h b/content/browser/renderer_host/navigation_request.h
index a20a7c4c9442..d56b8c4f91b5 100644
--- a/content/browser/renderer_host/navigation_request.h
+++ b/content/browser/renderer_host/navigation_request.h
@@ -78,7 +78,6 @@ struct URLLoaderCompletionStatus;
 namespace content {
 
 class AppCacheNavigationHandle;
-class CrossOriginEmbedderPolicyReporter;
 class WebBundleHandleTracker;
 class WebBundleNavigationInfo;
 class FrameNavigationEntry;
@@ -227,7 +226,6 @@ class CONTENT_EXPORT NavigationRequest
       const std::vector<GURL>& redirects,
       const GURL& original_url,
       const blink::PageState& page_state,
-      std::unique_ptr<CrossOriginEmbedderPolicyReporter> coep_reporter,
       std::unique_ptr<WebBundleNavigationInfo> web_bundle_navigation_info,
       int http_response_code);
 
@@ -674,12 +672,6 @@ class CONTENT_EXPORT NavigationRequest
   // Must only be called after ReadyToCommitNavigation().
   scoped_refptr<PolicyContainerHost> TakePolicyContainerHost();
 
-  CrossOriginEmbedderPolicyReporter* coep_reporter() {
-    return coep_reporter_.get();
-  }
-
-  std::unique_ptr<CrossOriginEmbedderPolicyReporter> TakeCoepReporter();
-
   // Returns UKM SourceId for the page we are navigating away from.
   // Equal to GetRenderFrameHost()->GetPageUkmSourceId() for subframe
   // and same-document navigations and to
@@ -1547,8 +1539,6 @@ class CONTENT_EXPORT NavigationRequest
   base::Optional<PolicyContainerNavigationBundle>
       policy_container_navigation_bundle_;
 
-  std::unique_ptr<CrossOriginEmbedderPolicyReporter> coep_reporter_;
-
   std::unique_ptr<PeakGpuMemoryTracker> loading_mem_tracker_ = nullptr;
 
   // Structure tracking the effects of the CrossOriginOpenerPolicy on this
