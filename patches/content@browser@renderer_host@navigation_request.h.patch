diff --git a/content/browser/renderer_host/navigation_request.h b/content/browser/renderer_host/navigation_request.h
index 0e01b71e3572..044a61090738 100644
--- a/content/browser/renderer_host/navigation_request.h
+++ b/content/browser/renderer_host/navigation_request.h
@@ -45,7 +45,6 @@
 #include "mojo/public/cpp/system/data_pipe.h"
 #include "net/base/proxy_server.h"
 #include "net/dns/public/resolve_error_info.h"
-#include "services/metrics/public/cpp/ukm_source_id.h"
 #include "services/network/public/cpp/origin_policy.h"
 #include "services/network/public/mojom/blocked_by_response_reason.mojom-shared.h"
 #include "services/network/public/mojom/content_security_policy.mojom.h"
@@ -250,7 +249,6 @@ class CONTENT_EXPORT NavigationRequest
 
   // NavigationHandle implementation:
   int64_t GetNavigationId() override;
-  ukm::SourceId GetNextPageUkmSourceId() override;
   const GURL& GetURL() override;
   SiteInstanceImpl* GetStartingSiteInstance() override;
   SiteInstanceImpl* GetSourceSiteInstance() override;
@@ -665,13 +663,6 @@ class CONTENT_EXPORT NavigationRequest
 
   std::unique_ptr<CrossOriginEmbedderPolicyReporter> TakeCoepReporter();
 
-  // Returns UKM SourceId for the page we are navigating away from.
-  // Equal to GetRenderFrameHost()->GetPageUkmSourceId() for subframe
-  // and same-document navigations and to
-  // RenderFrameHost::FromID(GetPreviousRenderFrameHostId())
-  //     ->GetPageUkmSourceId() for main-frame cross-document navigations.
-  ukm::SourceId GetPreviousPageUkmSourceId();
-
   void OnServiceWorkerAccessed(const GURL& scope,
                                AllowServiceWorkerResult allowed);
 
@@ -1465,9 +1456,6 @@ class CONTENT_EXPORT NavigationRequest
   bool is_safe_to_delete_ = true;
 #endif
 
-  // UKM source associated with the page we are navigated away from.
-  const ukm::SourceId previous_page_ukm_source_id_;
-
   // If true, changes to the user-agent override require a reload. If false, a
   // reload is not necessary.
   bool ua_change_requires_reload_ = true;
