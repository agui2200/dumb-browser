diff --git a/chrome/browser/touch_to_fill/touch_to_fill_controller.cc b/chrome/browser/touch_to_fill/touch_to_fill_controller.cc
index 81fd6d1cfb5ed..be7fd1b822899 100644
--- a/chrome/browser/touch_to_fill/touch_to_fill_controller.cc
+++ b/chrome/browser/touch_to_fill/touch_to_fill_controller.cc
@@ -20,11 +20,7 @@
 #include "components/password_manager/core/browser/origin_credential_store.h"
 #include "components/password_manager/core/browser/password_manager_driver.h"
 #include "components/password_manager/core/browser/password_manager_metrics_util.h"
-#include "components/ukm/content/source_url_recorder.h"
 #include "components/url_formatter/elide_url.h"
-#include "services/metrics/public/cpp/ukm_builders.h"
-#include "services/metrics/public/cpp/ukm_recorder.h"
-#include "services/metrics/public/cpp/ukm_source_id.h"
 #include "services/network/public/cpp/is_potentially_trustworthy.h"
 #include "url/origin.h"
 
@@ -62,9 +58,7 @@ TouchToFillController::TouchToFillController(
     ChromePasswordManagerClient* password_client,
     scoped_refptr<password_manager::BiometricAuthenticator> authenticator)
     : password_client_(password_client),
-      authenticator_(std::move(authenticator)),
-      source_id_(ukm::GetSourceIdForWebContentsDocument(
-          password_client_->web_contents())) {}
+      authenticator_(std::move(authenticator)) {}
 
 TouchToFillController::~TouchToFillController() {
   if (authenticator_) {
@@ -107,10 +101,6 @@ void TouchToFillController::OnCredentialSelected(
   if (!driver_)
     return;
 
-  ukm::builders::TouchToFill_Shown(source_id_)
-      .SetUserAction(static_cast<int64_t>(UserAction::kSelectedCredential))
-      .Record(ukm::UkmRecorder::Get());
-
   if (!authenticator_ ||
       authenticator_->CanAuthenticate() !=
           password_manager::BiometricsAvailability::kAvailable) {
@@ -135,10 +125,6 @@ void TouchToFillController::OnManagePasswordsSelected() {
       ->TouchToFillClosed(ShowVirtualKeyboard(false));
   password_client_->NavigateToManagePasswordsPage(
       password_manager::ManagePasswordsReferrer::kTouchToFill);
-
-  ukm::builders::TouchToFill_Shown(source_id_)
-      .SetUserAction(static_cast<int64_t>(UserAction::kSelectedManagePasswords))
-      .Record(ukm::UkmRecorder::Get());
 }
 
 void TouchToFillController::OnDismiss() {
@@ -147,10 +133,6 @@ void TouchToFillController::OnDismiss() {
     return;
 
   std::exchange(driver_, nullptr)->TouchToFillClosed(ShowVirtualKeyboard(true));
-
-  ukm::builders::TouchToFill_Shown(source_id_)
-      .SetUserAction(static_cast<int64_t>(UserAction::kDismissed))
-      .Record(ukm::UkmRecorder::Get());
 }
 
 gfx::NativeView TouchToFillController::GetNativeView() {
