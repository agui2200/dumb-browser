diff --git a/components/optimization_guide/core/optimization_guide_permissions_util.cc b/components/optimization_guide/core/optimization_guide_permissions_util.cc
index d7a71e2785ea7..556b6e50f2f0a 100644
--- a/components/optimization_guide/core/optimization_guide_permissions_util.cc
+++ b/components/optimization_guide/core/optimization_guide_permissions_util.cc
@@ -10,20 +10,18 @@
 #include "components/data_reduction_proxy/core/browser/data_reduction_proxy_settings.h"
 #include "components/optimization_guide/core/optimization_guide_features.h"
 #include "components/optimization_guide/core/optimization_guide_switches.h"
-#include "components/unified_consent/url_keyed_data_collection_consent_helper.h"
 
 namespace {
 
 bool IsUserDataSaverEnabledAndAllowedToFetchFromRemoteService(
     bool is_off_the_record,
     PrefService* pref_service) {
-  // Check if they are a data saver user.
-  return data_reduction_proxy::DataReductionProxySettings::
-      IsDataSaverEnabledByUser(is_off_the_record, pref_service);
+  return false;
 }
 
 bool IsUserConsentedToAnonymousDataCollectionAndAllowedToFetchFromRemoteService(
     PrefService* pref_service) {
+#if 0
   if (!optimization_guide::features::
           IsRemoteFetchingForAnonymousDataConsentEnabled()) {
     return false;
@@ -33,6 +31,8 @@ bool IsUserConsentedToAnonymousDataCollectionAndAllowedToFetchFromRemoteService(
       unified_consent::UrlKeyedDataCollectionConsentHelper::
           NewAnonymizedDataCollectionConsentHelper(pref_service);
   return helper->IsEnabled();
+#endif
+  return false;
 }
 
 }  // namespace
