diff --git a/content/browser/net/cross_origin_embedder_policy_reporter.cc b/content/browser/net/cross_origin_embedder_policy_reporter.cc
index 03616fbcc27f..1b095b86492f 100644
--- a/content/browser/net/cross_origin_embedder_policy_reporter.cc
+++ b/content/browser/net/cross_origin_embedder_policy_reporter.cc
@@ -15,13 +15,6 @@ namespace {
 
 constexpr char kType[] = "coep";
 
-GURL StripUsernameAndPassword(const GURL& url) {
-  url::Replacements<char> replacements;
-  replacements.ClearUsername();
-  replacements.ClearPassword();
-  return url.ReplaceComponents(replacements);
-}
-
 }  // namespace
 
 CrossOriginEmbedderPolicyReporter::CrossOriginEmbedderPolicyReporter(
@@ -42,18 +35,7 @@ CrossOriginEmbedderPolicyReporter::~CrossOriginEmbedderPolicyReporter() =
 void CrossOriginEmbedderPolicyReporter::QueueCorpViolationReport(
     const GURL& blocked_url,
     network::mojom::RequestDestination destination,
-    bool report_only) {
-  GURL url_to_pass = StripUsernameAndPassword(blocked_url);
-  // We're migrating from "blocked-url" to "blockedURL".
-  // TODO(crbug.com/1119676): Remove "blocked-url" in M90.
-  QueueAndNotify(
-      {std::make_pair("type", "corp"),
-       std::make_pair("blocked-url", url_to_pass.spec()),
-       std::make_pair("blockedURL", url_to_pass.spec()),
-       std::make_pair("destination",
-                      network::RequestDestinationToString(destination))},
-      report_only);
-}
+    bool report_only) {}
 
 void CrossOriginEmbedderPolicyReporter::BindObserver(
     mojo::PendingRemote<blink::mojom::ReportingObserver> observer) {
@@ -62,15 +44,7 @@ void CrossOriginEmbedderPolicyReporter::BindObserver(
 
 void CrossOriginEmbedderPolicyReporter::QueueNavigationReport(
     const GURL& blocked_url,
-    bool report_only) {
-  GURL url_to_pass = StripUsernameAndPassword(blocked_url);
-  // We're migrating from "blocked-url" to "blockedURL".
-  // TODO(crbug.com/1119676): Remove "blocked-url" in M90.
-  QueueAndNotify({std::make_pair("type", "navigation"),
-                  std::make_pair("blocked-url", url_to_pass.spec()),
-                  std::make_pair("blockedURL", url_to_pass.spec())},
-                 report_only);
-}
+    bool report_only) {}
 
 void CrossOriginEmbedderPolicyReporter::Clone(
     mojo::PendingReceiver<network::mojom::CrossOriginEmbedderPolicyReporter>
