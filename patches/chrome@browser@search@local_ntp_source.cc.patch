diff --git a/chrome/browser/search/local_ntp_source.cc b/chrome/browser/search/local_ntp_source.cc
index 78e588256493..62b6d59a5922 100644
--- a/chrome/browser/search/local_ntp_source.cc
+++ b/chrome/browser/search/local_ntp_source.cc
@@ -34,9 +34,6 @@
 #include "chrome/browser/search/ntp_features.h"
 #include "chrome/browser/search/one_google_bar/one_google_bar_data.h"
 #include "chrome/browser/search/one_google_bar/one_google_bar_service_factory.h"
-#include "chrome/browser/search/promos/promo_data.h"
-#include "chrome/browser/search/promos/promo_service.h"
-#include "chrome/browser/search/promos/promo_service_factory.h"
 #include "chrome/browser/search/search.h"
 #include "chrome/browser/search/search_suggest/search_suggest_data.h"
 #include "chrome/browser/search/search_suggest/search_suggest_service_factory.h"
@@ -102,7 +99,6 @@ const char kNtpBackgroundCollectionScriptFilename[] =
     "ntp-background-collections.js";
 const char kNtpBackgroundImageScriptFilename[] = "ntp-background-images.js";
 const char kOneGoogleBarScriptFilename[] = "one-google.js";
-const char kPromoScriptFilename[] = "promo.js";
 const char kSearchSuggestionsScriptFilename[] = "search-suggestions.js";
 const char kSha256[] = "sha256-";
 const char kThemeCSSFilename[] = "theme.css";
@@ -132,7 +128,6 @@ const struct Resource{
     {kNtpBackgroundCollectionScriptFilename, kLocalResource, "text/javascript"},
     {kNtpBackgroundImageScriptFilename, kLocalResource, "text/javascript"},
     {kOneGoogleBarScriptFilename, kLocalResource, "text/javascript"},
-    {kPromoScriptFilename, kLocalResource, "text/javascript"},
     {kSearchSuggestionsScriptFilename, kLocalResource, "text/javascript"},
     {kThemeCSSFilename, kLocalResource, "text/css"},
     // Image may not be a jpeg but the .jpg extension here still works for other
@@ -343,9 +338,6 @@ std::unique_ptr<base::DictionaryValue> GetTranslatedStrings(bool is_google) {
               IDS_ACC_HEADER_HIDE_SUGGESTIONS_BUTTON);
     AddString(translated_strings.get(), "showSection",
               IDS_ACC_HEADER_SHOW_SUGGESTIONS_BUTTON);
-
-    // Promos
-    AddString(translated_strings.get(), "dismissPromo", IDS_NTP_DISMISS_PROMO);
   }
 
   return translated_strings;
@@ -439,23 +431,6 @@ scoped_refptr<base::RefCountedString> GetOGBString(
       base::RefCountedString::TakeString(&js));
 }
 
-scoped_refptr<base::RefCountedString> GetPromoString(
-    const base::Optional<PromoData>& promo) {
-  base::DictionaryValue dict;
-  if (promo.has_value()) {
-    dict.SetString("promoHtml", promo->promo_html);
-    dict.SetString("promoLogUrl", promo->promo_log_url.spec());
-    dict.SetString("promoId", promo->promo_id);
-    dict.SetBoolean("canOpenExtensionsPage", promo->can_open_extensions_page);
-  }
-
-  std::string js;
-  base::JSONWriter::Write(dict, &js);
-  js = "var promo = " + js + ";";
-  return scoped_refptr<base::RefCountedString>(
-      base::RefCountedString::TakeString(&js));
-}
-
 std::unique_ptr<base::DictionaryValue> ConvertSearchSuggestDataToDict(
     const base::Optional<SearchSuggestData>& data) {
   auto result = std::make_unique<base::DictionaryValue>();
@@ -786,7 +761,6 @@ LocalNtpSource::LocalNtpSource(Profile* profile)
           NtpBackgroundServiceFactory::GetForProfile(profile_)),
       one_google_bar_service_(
           OneGoogleBarServiceFactory::GetForProfile(profile_)),
-      promo_service_(PromoServiceFactory::GetForProfile(profile_)),
       search_suggest_service_(
           SearchSuggestServiceFactory::GetForProfile(profile_)),
       logo_service_(nullptr) {
@@ -807,11 +781,6 @@ LocalNtpSource::LocalNtpSource(Profile* profile)
   if (search_suggest_service_)
     search_suggest_service_observer_.Add(search_suggest_service_);
 
-  // |promo_service_| is null in incognito, or when the feature is
-  // disabled.
-  if (promo_service_)
-    promo_service_observer_.Add(promo_service_);
-
   logo_service_ = LogoServiceFactory::GetForProfile(profile_);
   logo_observer_ = std::make_unique<DesktopLogoObserver>();
 
@@ -896,15 +865,6 @@ void LocalNtpSource::StartDataRequest(
     return;
   }
 
-  if (stripped_path == kPromoScriptFilename) {
-    if (!promo_service_) {
-      std::move(callback).Run(nullptr);
-    } else {
-      ServePromoWhenAvailable(std::move(callback));
-    }
-    return;
-  }
-
   // Search suggestions always used a cached value, so there is no need to
   // refresh the data until the old data is used.
   if (stripped_path == kSearchSuggestionsScriptFilename) {
@@ -951,7 +911,7 @@ void LocalNtpSource::StartDataRequest(
 
   if (stripped_path == kMainHtmlFilename) {
     if (search_config_provider_->DefaultSearchProviderIsGoogle()) {
-      InitiatePromoAndOGBRequests();
+      InitiateOGBRequests();
     }
 
     std::string force_doodle_param;
@@ -1247,19 +1207,6 @@ void LocalNtpSource::OnOneGoogleBarServiceShuttingDown() {
   one_google_bar_service_ = nullptr;
 }
 
-void LocalNtpSource::OnPromoDataUpdated() {
-  DCHECK_CURRENTLY_ON(content::BrowserThread::UI);
-
-  ServePromo(promo_service_->promo_data());
-}
-
-void LocalNtpSource::OnPromoServiceShuttingDown() {
-  DCHECK_CURRENTLY_ON(content::BrowserThread::UI);
-
-  promo_service_observer_.RemoveAll();
-  promo_service_ = nullptr;
-}
-
 void LocalNtpSource::OnSearchSuggestDataUpdated() {
   DCHECK_CURRENTLY_ON(content::BrowserThread::UI);
 
@@ -1373,59 +1320,11 @@ void LocalNtpSource::ServeOneGoogleBarWhenAvailable(
   }
 }
 
-void LocalNtpSource::ServePromo(const base::Optional<PromoData>& data) {
-  DCHECK_CURRENTLY_ON(content::BrowserThread::UI);
-
-  if (!pending_promo_request_.has_value()) {
-    return;
-  }
-
-  scoped_refptr<base::RefCountedString> result = GetPromoString(data);
-
-  base::TimeDelta delta = base::TimeTicks::Now() - *pending_promo_request_;
-  UMA_HISTOGRAM_MEDIUM_TIMES("NewTabPage.Promos.RequestLatency", delta);
-  if (promo_service_->promo_status() == PromoService::Status::OK_WITH_PROMO) {
-    UMA_HISTOGRAM_MEDIUM_TIMES(
-        "NewTabPage.Promos.RequestLatency2.SuccessWithPromo", delta);
-  } else if (promo_service_->promo_status() ==
-             PromoService::Status::OK_BUT_BLOCKED) {
-    UMA_HISTOGRAM_MEDIUM_TIMES(
-        "NewTabPage.Promos.RequestLatency2.SuccessButBlocked", delta);
-  } else if (promo_service_->promo_status() ==
-             PromoService::Status::OK_WITHOUT_PROMO) {
-    UMA_HISTOGRAM_MEDIUM_TIMES(
-        "NewTabPage.Promos.RequestLatency2.SuccessWithoutPromo", delta);
-  } else {
-    UMA_HISTOGRAM_MEDIUM_TIMES("NewTabPage.Promos.RequestLatency2.Failure",
-                               delta);
-  }
-  for (auto& callback : promo_callbacks_) {
-    std::move(callback).Run(result);
-  }
-  pending_promo_request_ = base::nullopt;
-  promo_callbacks_.clear();
-}
-
-void LocalNtpSource::ServePromoWhenAvailable(
-    content::URLDataSource::GotDataCallback callback) {
-  base::Optional<PromoData> data = promo_service_->promo_data();
-
-  if (!pending_promo_request_.has_value()) {
-    std::move(callback).Run(GetPromoString(data));
-  } else {
-    promo_callbacks_.push_back(std::move(callback));
-  }
-}
-
-void LocalNtpSource::InitiatePromoAndOGBRequests() {
+void LocalNtpSource::InitiateOGBRequests() {
   if (one_google_bar_service_) {
     pending_one_google_bar_request_ = base::TimeTicks::Now();
     one_google_bar_service_->Refresh();
   }
-  if (promo_service_) {
-    pending_promo_request_ = base::TimeTicks::Now();
-    promo_service_->Refresh();
-  }
 }
 
 LocalNtpSource::NtpBackgroundRequest::NtpBackgroundRequest(
