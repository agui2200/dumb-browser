diff --git a/chrome/browser/browsing_data/chrome_browsing_data_remover_delegate.cc b/chrome/browser/browsing_data/chrome_browsing_data_remover_delegate.cc
index d10f3c91eac78..0bdf01da9fb10 100644
--- a/chrome/browser/browsing_data/chrome_browsing_data_remover_delegate.cc
+++ b/chrome/browser/browsing_data/chrome_browsing_data_remover_delegate.cc
@@ -32,21 +32,14 @@
 #include "chrome/browser/browsing_data/navigation_entry_remover.h"
 #include "chrome/browser/chrome_notification_types.h"
 #include "chrome/browser/content_settings/host_content_settings_map_factory.h"
-#include "chrome/browser/crash_upload_list/crash_upload_list.h"
 #include "chrome/browser/custom_handlers/protocol_handler_registry.h"
 #include "chrome/browser/custom_handlers/protocol_handler_registry_factory.h"
-#include "chrome/browser/data_reduction_proxy/data_reduction_proxy_chrome_settings.h"
-#include "chrome/browser/data_reduction_proxy/data_reduction_proxy_chrome_settings_factory.h"
-#include "chrome/browser/domain_reliability/service_factory.h"
 #include "chrome/browser/downgrade/user_data_downgrade.h"
 #include "chrome/browser/download/download_prefs.h"
 #include "chrome/browser/external_protocol/external_protocol_handler.h"
-#include "chrome/browser/heavy_ad_intervention/heavy_ad_service_factory.h"
 #include "chrome/browser/history/history_service_factory.h"
 #include "chrome/browser/history/web_history_service_factory.h"
 #include "chrome/browser/language/url_language_histogram_factory.h"
-#include "chrome/browser/lite_video/lite_video_keyed_service.h"
-#include "chrome/browser/lite_video/lite_video_keyed_service_factory.h"
 #include "chrome/browser/login_detection/login_detection_prefs.h"
 #include "chrome/browser/media/history/media_history_keyed_service.h"
 #include "chrome/browser/media/history/media_history_keyed_service_factory.h"
@@ -70,7 +63,6 @@
 #include "chrome/browser/profiles/profile.h"
 #include "chrome/browser/profiles/profile_keep_alive_types.h"
 #include "chrome/browser/profiles/scoped_profile_keep_alive.h"
-#include "chrome/browser/safe_browsing/safe_browsing_service.h"
 #include "chrome/browser/search_engines/template_url_service_factory.h"
 #include "chrome/browser/spellchecker/spellcheck_factory.h"
 #include "chrome/browser/spellchecker/spellcheck_service.h"
@@ -282,6 +274,7 @@ ChromeBrowsingDataRemoverDelegate::ChromeBrowsingDataRemoverDelegate(
       webapp_registry_(new WebappRegistry())
 #endif
 {
+#if 0
   domain_reliability_clearer_ = base::BindRepeating(
       [](BrowserContext* browser_context,
          content::BrowsingDataFilterBuilder* filter_builder,
@@ -295,6 +288,7 @@ ChromeBrowsingDataRemoverDelegate::ChromeBrowsingDataRemoverDelegate(
             std::move(callback));
       },
       browser_context);
+#endif
 }
 
 ChromeBrowsingDataRemoverDelegate::~ChromeBrowsingDataRemoverDelegate() =
@@ -551,28 +545,6 @@ void ChromeBrowsingDataRemoverDelegate::RemoveEmbedderData(
     customtabs::OriginVerifier::ClearBrowsingData();
 #endif
 
-    data_reduction_proxy::DataReductionProxySettings*
-        data_reduction_proxy_settings =
-            DataReductionProxyChromeSettingsFactory::GetForBrowserContext(
-                profile_);
-    // |data_reduction_proxy_settings| is null if |profile_| is off the record.
-    if (data_reduction_proxy_settings) {
-      data_reduction_proxy::DataReductionProxyService*
-          data_reduction_proxy_service =
-              data_reduction_proxy_settings->data_reduction_proxy_service();
-      if (data_reduction_proxy_service) {
-        data_reduction_proxy_service->compression_stats()
-            ->DeleteBrowsingHistory(delete_begin_, delete_end_);
-      }
-    }
-
-    heavy_ad_intervention::HeavyAdService* heavy_ad_service =
-        HeavyAdServiceFactory::GetForBrowserContext(profile_);
-    if (heavy_ad_service && heavy_ad_service->heavy_ad_blocklist()) {
-      heavy_ad_service->heavy_ad_blocklist()->ClearBlockList(delete_begin_,
-                                                             delete_end_);
-    }
-
     OptimizationGuideKeyedService* optimization_guide_keyed_service =
         OptimizationGuideKeyedServiceFactory::GetForProfile(profile_);
     if (optimization_guide_keyed_service)
@@ -580,11 +552,6 @@ void ChromeBrowsingDataRemoverDelegate::RemoveEmbedderData(
 
     AvailabilityProber::ClearData(prefs);
 
-    LiteVideoKeyedService* lite_video_keyed_service =
-        LiteVideoKeyedServiceFactory::GetForProfile(profile_);
-    if (lite_video_keyed_service)
-      lite_video_keyed_service->ClearData(delete_begin_, delete_end_);
-
     PrefetchProxyService* prefetch_proxy_service =
         PrefetchProxyServiceFactory::GetForProfile(profile_);
     if (prefetch_proxy_service) {
@@ -637,8 +604,6 @@ void ChromeBrowsingDataRemoverDelegate::RemoveEmbedderData(
     }
 #endif
 
-    CreateCrashUploadList()->Clear(delete_begin_, delete_end_);
-
     FindBarStateFactory::GetForBrowserContext(profile_)->SetLastSearchText(
         std::u16string());
   }
@@ -664,19 +629,6 @@ void ChromeBrowsingDataRemoverDelegate::RemoveEmbedderData(
        content::BrowsingDataRemover::ORIGIN_TYPE_UNPROTECTED_WEB)) {
     base::RecordAction(UserMetricsAction("ClearBrowsingData_Cookies"));
 
-    network::mojom::NetworkContext* safe_browsing_context = nullptr;
-    safe_browsing::SafeBrowsingService* sb_service =
-        g_browser_process->safe_browsing_service();
-    if (sb_service)
-      safe_browsing_context = sb_service->GetNetworkContext(profile_);
-
-    browsing_data::RemoveEmbedderCookieData(
-        delete_begin, delete_end, filter_builder, host_content_settings_map_,
-        safe_browsing_context,
-        base::BindOnce(
-            &ChromeBrowsingDataRemoverDelegate::CreateTaskCompletionClosure,
-            base::Unretained(this), TracingDataType::kCookies));
-
     if (filter_builder->GetMode() ==
         BrowsingDataFilterBuilder::Mode::kPreserve) {
       PrivacySandboxSettings* privacy_sandbox_settings =
@@ -1134,6 +1086,7 @@ void ChromeBrowsingDataRemoverDelegate::RemoveEmbedderData(
       template_url_service->ClearSessionToken();
   }
 
+#if 0
   //////////////////////////////////////////////////////////////////////////////
   // Domain reliability.
   if (remove_mask & (content::BrowsingDataRemover::DATA_TYPE_COOKIES |
@@ -1149,6 +1102,7 @@ void ChromeBrowsingDataRemoverDelegate::RemoveEmbedderData(
                                     CreateTaskCompletionClosureForMojo(
                                         TracingDataType::kDomainReliability));
   }
+#endif
 
   //////////////////////////////////////////////////////////////////////////////
   // Persisted isolated origins.
@@ -1329,11 +1283,13 @@ void ChromeBrowsingDataRemoverDelegate::OverrideWebappRegistryForTesting(
 }
 #endif
 
+#if 0
 void ChromeBrowsingDataRemoverDelegate::
     OverrideDomainReliabilityClearerForTesting(
         DomainReliabilityClearer clearer) {
   domain_reliability_clearer_ = std::move(clearer);
 }
+#endif
 
 bool ChromeBrowsingDataRemoverDelegate::IsForAllTime() const {
   return delete_begin_ == base::Time() && delete_end_ == base::Time::Max();
