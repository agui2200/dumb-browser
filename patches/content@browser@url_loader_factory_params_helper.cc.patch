diff --git a/content/browser/url_loader_factory_params_helper.cc b/content/browser/url_loader_factory_params_helper.cc
index 5921731b5fe2..83d2a175b15e 100644
--- a/content/browser/url_loader_factory_params_helper.cc
+++ b/content/browser/url_loader_factory_params_helper.cc
@@ -42,8 +42,6 @@ network::mojom::URLLoaderFactoryParamsPtr CreateParams(
     const base::Optional<blink::LocalFrameToken>& top_frame_token,
     const net::IsolationInfo& isolation_info,
     network::mojom::ClientSecurityStatePtr client_security_state,
-    mojo::PendingRemote<network::mojom::CrossOriginEmbedderPolicyReporter>
-        coep_reporter,
     bool allow_universal_access_from_file_urls,
     bool is_for_isolated_world,
     mojo::PendingRemote<network::mojom::CookieAccessObserver> cookie_observer,
@@ -72,7 +70,6 @@ network::mojom::URLLoaderFactoryParamsPtr CreateParams(
       base::CommandLine::ForCurrentProcess()->HasSwitch(
           switches::kDisableWebSecurity);
   params->client_security_state = std::move(client_security_state);
-  params->coep_reporter = std::move(coep_reporter);
 
   if (params->disable_web_security) {
     // --disable-web-security also disables Cross-Origin Read Blocking (CORB).
@@ -111,8 +108,6 @@ URLLoaderFactoryParamsHelper::CreateForFrame(
     const url::Origin& frame_origin,
     const net::IsolationInfo& isolation_info,
     network::mojom::ClientSecurityStatePtr client_security_state,
-    mojo::PendingRemote<network::mojom::CrossOriginEmbedderPolicyReporter>
-        coep_reporter,
     RenderProcessHost* process,
     network::mojom::TrustTokenRedemptionPolicy trust_token_redemption_policy,
     base::StringPiece debug_tag) {
@@ -122,7 +117,7 @@ URLLoaderFactoryParamsHelper::CreateForFrame(
       frame_origin,  // request_initiator_origin_lock
       false,         // is_trusted
       frame->GetTopFrameToken(), isolation_info,
-      std::move(client_security_state), std::move(coep_reporter),
+      std::move(client_security_state),
       WebContents::FromRenderFrameHost(frame)
           ->GetOrCreateWebPreferences()
           .allow_universal_access_from_file_urls,
@@ -147,7 +142,6 @@ URLLoaderFactoryParamsHelper::CreateForIsolatedWorld(
       false,                  // is_trusted
       frame->GetTopFrameToken(), isolation_info,
       std::move(client_security_state),
-      mojo::NullRemote(),  // coep_reporter
       WebContents::FromRenderFrameHost(frame)
           ->GetOrCreateWebPreferences()
           .allow_universal_access_from_file_urls,
@@ -171,7 +165,6 @@ URLLoaderFactoryParamsHelper::CreateForPrefetch(
                       frame->GetTopFrameToken(),
                       net::IsolationInfo(),  // isolation_info
                       std::move(client_security_state),
-                      mojo::NullRemote(),  // coep_reporter
                       WebContents::FromRenderFrameHost(frame)
                           ->GetOrCreateWebPreferences()
                           .allow_universal_access_from_file_urls,
@@ -188,8 +181,6 @@ URLLoaderFactoryParamsHelper::CreateForWorker(
     RenderProcessHost* process,
     const url::Origin& request_initiator,
     const net::IsolationInfo& isolation_info,
-    mojo::PendingRemote<network::mojom::CrossOriginEmbedderPolicyReporter>
-        coep_reporter,
     mojo::PendingRemote<network::mojom::AuthenticationAndCertificateObserver>
         auth_cert_observer,
     base::StringPiece debug_tag) {
@@ -201,7 +192,6 @@ URLLoaderFactoryParamsHelper::CreateForWorker(
       base::nullopt,      // top_frame_token
       isolation_info,
       nullptr,  // client_security_state
-      std::move(coep_reporter),
       false,  // allow_universal_access_from_file_urls
       false,  // is_for_isolated_world
       static_cast<StoragePartitionImpl*>(process->GetStoragePartition())
@@ -240,7 +230,6 @@ URLLoaderFactoryParamsHelper::CreateForRendererProcess(
       false,                          // is_trusted
       top_frame_token, isolation_info,
       nullptr,             // client_security_state
-      mojo::NullRemote(),  // coep_reporter
       false,               // allow_universal_access_from_file_urls
       false,               // is_for_isolated_world
       mojo::NullRemote(), mojo::NullRemote(),
