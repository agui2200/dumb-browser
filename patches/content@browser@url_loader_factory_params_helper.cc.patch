diff --git a/content/browser/url_loader_factory_params_helper.cc b/content/browser/url_loader_factory_params_helper.cc
index 3b5c75957304..290e39ecb528 100644
--- a/content/browser/url_loader_factory_params_helper.cc
+++ b/content/browser/url_loader_factory_params_helper.cc
@@ -41,8 +41,6 @@ network::mojom::URLLoaderFactoryParamsPtr CreateParams(
     const base::Optional<base::UnguessableToken>& top_frame_token,
     const net::IsolationInfo& isolation_info,
     network::mojom::ClientSecurityStatePtr client_security_state,
-    mojo::PendingRemote<network::mojom::CrossOriginEmbedderPolicyReporter>
-        coep_reporter,
     bool allow_universal_access_from_file_urls,
     bool is_for_isolated_world,
     mojo::PendingRemote<network::mojom::CookieAccessObserver> cookie_observer,
@@ -68,7 +66,6 @@ network::mojom::URLLoaderFactoryParamsPtr CreateParams(
       base::CommandLine::ForCurrentProcess()->HasSwitch(
           switches::kDisableWebSecurity);
   params->client_security_state = std::move(client_security_state);
-  params->coep_reporter = std::move(coep_reporter);
 
   if (params->disable_web_security) {
     // --disable-web-security also disables Cross-Origin Read Blocking (CORB).
@@ -106,8 +103,6 @@ URLLoaderFactoryParamsHelper::CreateForFrame(
     const url::Origin& frame_origin,
     const net::IsolationInfo& isolation_info,
     network::mojom::ClientSecurityStatePtr client_security_state,
-    mojo::PendingRemote<network::mojom::CrossOriginEmbedderPolicyReporter>
-        coep_reporter,
     RenderProcessHost* process,
     network::mojom::TrustTokenRedemptionPolicy trust_token_redemption_policy,
     base::StringPiece debug_tag) {
@@ -117,7 +112,6 @@ URLLoaderFactoryParamsHelper::CreateForFrame(
                       false,         // is_trusted
                       frame->GetTopFrameToken(), isolation_info,
                       std::move(client_security_state),
-                      std::move(coep_reporter),
                       WebContents::FromRenderFrameHost(frame)
                           ->GetOrCreateWebPreferences()
                           .allow_universal_access_from_file_urls,
@@ -141,7 +135,6 @@ URLLoaderFactoryParamsHelper::CreateForIsolatedWorld(
                       false,                  // is_trusted
                       frame->GetTopFrameToken(), isolation_info,
                       std::move(client_security_state),
-                      mojo::NullRemote(),  // coep_reporter
                       WebContents::FromRenderFrameHost(frame)
                           ->GetOrCreateWebPreferences()
                           .allow_universal_access_from_file_urls,
@@ -166,7 +159,6 @@ URLLoaderFactoryParamsHelper::CreateForPrefetch(
                       frame->GetTopFrameToken(),
                       net::IsolationInfo(),  // isolation_info
                       std::move(client_security_state),
-                      mojo::NullRemote(),  // coep_reporter
                       WebContents::FromRenderFrameHost(frame)
                           ->GetOrCreateWebPreferences()
                           .allow_universal_access_from_file_urls,
@@ -182,8 +174,6 @@ URLLoaderFactoryParamsHelper::CreateForWorker(
     RenderProcessHost* process,
     const url::Origin& request_initiator,
     const net::IsolationInfo& isolation_info,
-    mojo::PendingRemote<network::mojom::CrossOriginEmbedderPolicyReporter>
-        coep_reporter,
     base::StringPiece debug_tag) {
   return CreateParams(
       process,
@@ -193,7 +183,6 @@ URLLoaderFactoryParamsHelper::CreateForWorker(
       base::nullopt,      // top_frame_token
       isolation_info,
       nullptr,  // client_security_state
-      std::move(coep_reporter),
       false,  // allow_universal_access_from_file_urls
       false,  // is_for_isolated_world
       static_cast<StoragePartitionImpl*>(process->GetStoragePartition())
@@ -231,7 +220,6 @@ URLLoaderFactoryParamsHelper::CreateForRendererProcess(
       false,                          // is_trusted
       top_frame_token, isolation_info,
       nullptr,             // client_security_state
-      mojo::NullRemote(),  // coep_reporter
       false,               // allow_universal_access_from_file_urls
       false,               // is_for_isolated_world
       mojo::NullRemote(), network::mojom::TrustTokenRedemptionPolicy::kForbid,
