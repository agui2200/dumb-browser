diff --git a/cc/metrics/compositor_frame_reporting_controller.h b/cc/metrics/compositor_frame_reporting_controller.h
index 7b62bc3bc67e..e410cf78828f 100644
--- a/cc/metrics/compositor_frame_reporting_controller.h
+++ b/cc/metrics/compositor_frame_reporting_controller.h
@@ -21,7 +21,6 @@ struct FrameTimingDetails;
 
 namespace cc {
 class DroppedFrameCounter;
-class UkmManager;
 struct BeginMainFrameMetrics;
 
 // This is used for managing simultaneous CompositorFrameReporter instances
@@ -75,8 +74,6 @@ class CC_EXPORT CompositorFrameReportingController {
   void SetBlinkBreakdown(std::unique_ptr<BeginMainFrameMetrics> details,
                          base::TimeTicks main_thread_start_time);
 
-  void SetUkmManager(UkmManager* manager);
-
   void AddActiveTracker(FrameSequenceTrackerType type);
   void RemoveActiveTracker(FrameSequenceTrackerType type);
 
@@ -140,12 +137,6 @@ class CC_EXPORT CompositorFrameReportingController {
   bool is_compositor_thread_driving_smoothness_ = false;
   bool is_main_thread_driving_smoothness_ = false;
 
-  // The latency reporter passed to each CompositorFrameReporter. Owned here
-  // because it must be common among all reporters.
-  // DO NOT reorder this line and the ones below. The latency_ukm_reporter_ must
-  // outlive the objects in |submitted_compositor_frames_|.
-  std::unique_ptr<LatencyUkmReporter> latency_ukm_reporter_;
-
   std::unique_ptr<CompositorFrameReporter>
       reporters_[PipelineStage::kNumPipelineStages];
 
