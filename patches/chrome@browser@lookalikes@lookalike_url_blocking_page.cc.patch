diff --git a/chrome/browser/lookalikes/lookalike_url_blocking_page.cc b/chrome/browser/lookalikes/lookalike_url_blocking_page.cc
index 6d7c101d8b9f..8a34b272f513 100644
--- a/chrome/browser/lookalikes/lookalike_url_blocking_page.cc
+++ b/chrome/browser/lookalikes/lookalike_url_blocking_page.cc
@@ -28,7 +28,6 @@ LookalikeUrlBlockingPage::LookalikeUrlBlockingPage(
     content::WebContents* web_contents,
     const GURL& safe_url,
     const GURL& request_url,
-    ukm::SourceId source_id,
     LookalikeUrlMatchType match_type,
     std::unique_ptr<
         security_interstitials::SecurityInterstitialControllerClient>
@@ -38,7 +37,6 @@ LookalikeUrlBlockingPage::LookalikeUrlBlockingPage(
           request_url,
           std::move(controller_client)),
       safe_url_(safe_url),
-      source_id_(source_id),
       match_type_(match_type) {
   controller()->metrics_helper()->RecordUserDecision(MetricsHelper::SHOW);
   controller()->metrics_helper()->RecordUserInteraction(
@@ -61,9 +59,6 @@ void LookalikeUrlBlockingPage::PopulateInterstitialStrings(
 }
 
 void LookalikeUrlBlockingPage::OnInterstitialClosing() {
-  ReportUkmForLookalikeUrlBlockingPageIfNeeded(
-      source_id_, match_type_,
-      LookalikeUrlBlockingPageUserAction::kCloseOrBack);
 }
 
 bool LookalikeUrlBlockingPage::ShouldDisplayURL() const {
@@ -86,9 +81,6 @@ void LookalikeUrlBlockingPage::CommandReceived(const std::string& command) {
     case security_interstitials::CMD_DONT_PROCEED:
       controller()->metrics_helper()->RecordUserDecision(
           MetricsHelper::DONT_PROCEED);
-      ReportUkmForLookalikeUrlBlockingPageIfNeeded(
-          source_id_, match_type_,
-          LookalikeUrlBlockingPageUserAction::kAcceptSuggestion);
       // If the interstitial doesn't have a suggested URL (e.g. punycode
       // interstitial), simply open the new tab page.
       if (!safe_url_.is_valid()) {
@@ -100,9 +92,6 @@ void LookalikeUrlBlockingPage::CommandReceived(const std::string& command) {
     case security_interstitials::CMD_PROCEED:
       controller()->metrics_helper()->RecordUserDecision(
           MetricsHelper::PROCEED);
-      ReportUkmForLookalikeUrlBlockingPageIfNeeded(
-          source_id_, match_type_,
-          LookalikeUrlBlockingPageUserAction::kClickThrough);
       controller()->Proceed();
       break;
     case security_interstitials::CMD_DO_REPORT:
