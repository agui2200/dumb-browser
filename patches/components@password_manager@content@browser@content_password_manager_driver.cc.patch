diff --git a/components/password_manager/content/browser/content_password_manager_driver.cc b/components/password_manager/content/browser/content_password_manager_driver.cc
index 4278a6a1b6dde..11bdd294d4c1c 100644
--- a/components/password_manager/content/browser/content_password_manager_driver.cc
+++ b/components/password_manager/content/browser/content_password_manager_driver.cc
@@ -15,7 +15,6 @@
 #include "components/password_manager/content/browser/content_password_manager_driver_factory.h"
 #include "components/password_manager/core/browser/password_manager.h"
 #include "components/password_manager/core/browser/password_manager_client.h"
-#include "components/password_manager/core/browser/password_manager_metrics_recorder.h"
 #include "components/safe_browsing/buildflags.h"
 #include "content/public/browser/back_forward_cache.h"
 #include "content/public/browser/browser_context.h"
@@ -283,8 +282,6 @@ void ContentPasswordManagerDriver::RecordSavePasswordProgress(
 }
 
 void ContentPasswordManagerDriver::UserModifiedPasswordField() {
-  if (client_->GetMetricsRecorder())
-    client_->GetMetricsRecorder()->RecordUserModifiedPasswordField();
 }
 
 void ContentPasswordManagerDriver::UserModifiedNonPasswordField(
@@ -311,11 +308,6 @@ void ContentPasswordManagerDriver::ShowTouchToFill() {
 void ContentPasswordManagerDriver::CheckSafeBrowsingReputation(
     const GURL& form_action,
     const GURL& frame_url) {
-  // Despite the name, this method is only called on password fields.
-  // (See PasswordAutofillAgent::MaybeCheckSafeBrowsingReputation())
-  if (client_->GetMetricsRecorder()) {
-    client_->GetMetricsRecorder()->RecordUserFocusedPasswordField();
-  }
 #if defined(ON_FOCUS_PING_ENABLED)
   client_->CheckSafeBrowsingReputation(form_action, frame_url);
 #endif
@@ -330,7 +322,6 @@ void ContentPasswordManagerDriver::FocusedInputChanged(
 void ContentPasswordManagerDriver::LogFirstFillingResult(
     autofill::FormRendererId form_renderer_id,
     int32_t result) {
-  GetPasswordManager()->LogFirstFillingResult(this, form_renderer_id, result);
 }
 
 const mojo::AssociatedRemote<autofill::mojom::AutofillAgent>&
