diff --git a/chrome/browser/ui/views/first_run_dialog.cc b/chrome/browser/ui/views/first_run_dialog.cc
index 3ece75358ed2..9954c4f7f599 100644
--- a/chrome/browser/ui/views/first_run_dialog.cc
+++ b/chrome/browser/ui/views/first_run_dialog.cc
@@ -9,7 +9,6 @@
 #include "base/bind.h"
 #include "base/run_loop.h"
 #include "chrome/browser/first_run/first_run.h"
-#include "chrome/browser/metrics/metrics_reporting_state.h"
 #include "chrome/browser/platform_util.h"
 #include "chrome/browser/shell_integration.h"
 #include "chrome/browser/ui/browser_dialogs.h"
@@ -30,26 +29,6 @@
 #include "ui/views/widget/widget.h"
 #include "ui/views/window/dialog_delegate.h"
 
-#if defined(OS_WIN)
-#include "components/crash/content/app/breakpad_win.h"
-#elif defined(OS_LINUX) || defined(OS_CHROMEOS)
-#include "components/crash/core/app/breakpad_linux.h"
-#endif
-
-namespace {
-
-void InitCrashReporterIfEnabled(bool enabled) {
-#if defined(OS_WIN)
-  if (enabled)
-    breakpad::InitCrashReporter(std::string());
-#elif defined(OS_LINUX) || defined(OS_CHROMEOS)
-  if (!crash_reporter::IsCrashpadEnabled() && enabled)
-    breakpad::InitCrashReporter(std::string());
-#endif
-}
-
-}  // namespace
-
 namespace first_run {
 
 void ShowFirstRunDialog(Profile* profile) {
@@ -101,7 +80,6 @@ FirstRunDialog::FirstRunDialog(Profile* profile) {
   // Having this box checked means the user has to opt-out of metrics recording.
   report_crashes->SetChecked(!first_run::IsMetricsReportingOptIn());
   report_crashes_ = layout->AddView(std::move(report_crashes));
-  chrome::RecordDialogCreation(chrome::DialogIdentifier::FIRST_RUN_DIALOG);
 }
 
 FirstRunDialog::~FirstRunDialog() {
@@ -115,10 +93,6 @@ void FirstRunDialog::Done() {
 bool FirstRunDialog::Accept() {
   GetWidget()->Hide();
 
-  ChangeMetricsReportingStateWithReply(
-      report_crashes_->GetChecked(),
-      base::BindOnce(&InitCrashReporterIfEnabled));
-
   if (make_default_->GetChecked())
     shell_integration::SetAsDefaultBrowser();
 
