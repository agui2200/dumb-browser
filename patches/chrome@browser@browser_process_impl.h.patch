diff --git a/chrome/browser/browser_process_impl.h b/chrome/browser/browser_process_impl.h
index 1d3c566cc59b..fe4d803ce636 100644
--- a/chrome/browser/browser_process_impl.h
+++ b/chrome/browser/browser_process_impl.h
@@ -35,11 +35,7 @@
 #include "services/network/public/cpp/network_quality_tracker.h"
 #include "services/network/public/mojom/network_service.mojom-forward.h"
 
-#if !defined(OS_ANDROID)
-#include "chrome/browser/upgrade_detector/build_state.h"
-#endif
 
-class BatteryMetrics;
 class ChromeMetricsServicesManagerClient;
 class DevToolsAutoOpener;
 class RemoteDebuggingServer;
@@ -133,14 +129,12 @@ class BrowserProcessImpl : public BrowserProcess,
   metrics_services_manager::MetricsServicesManager* GetMetricsServicesManager()
       override;
   metrics::MetricsService* metrics_service() override;
-  rappor::RapporServiceImpl* rappor_service() override;
   // TODO(qinmin): Remove this method as callers can retrieve the global
   // instance from SystemNetworkContextManager directly.
   SystemNetworkContextManager* system_network_context_manager() override;
   scoped_refptr<network::SharedURLLoaderFactory> shared_url_loader_factory()
       override;
   network::NetworkQualityTracker* network_quality_tracker() override;
-  WatchDogThread* watchdog_thread() override;
   ProfileManager* profile_manager() override;
   PrefService* local_state() override;
   variations::VariationsService* variations_service() override;
@@ -170,11 +164,6 @@ class BrowserProcessImpl : public BrowserProcess,
   void set_background_mode_manager_for_test(
       std::unique_ptr<BackgroundModeManager> manager) override;
   StatusTray* status_tray() override;
-  safe_browsing::SafeBrowsingService* safe_browsing_service() override;
-  subresource_filter::RulesetService* subresource_filter_ruleset_service()
-      override;
-  federated_learning::FlocSortingLshClustersService*
-  floc_sorting_lsh_clusters_service() override;
 
   StartupData* startup_data() override;
 
@@ -195,7 +184,6 @@ class BrowserProcessImpl : public BrowserProcess,
   resource_coordinator::ResourceCoordinatorParts* resource_coordinator_parts()
       override;
 
-  BuildState* GetBuildState() override;
 
   static void RegisterPrefs(PrefRegistrySimple* registry);
 
@@ -210,17 +198,12 @@ class BrowserProcessImpl : public BrowserProcess,
   // changes to the render process.
   void CreateNetworkQualityObserver();
 
-  void CreateWatchdogThread();
   void CreateProfileManager();
   void CreateIconManager();
   void CreateNotificationPlatformBridge();
   void CreateNotificationUIManager();
   void CreatePrintPreviewDialogController();
   void CreateBackgroundPrintingManager();
-  void CreateSafeBrowsingService();
-  void CreateSubresourceFilterRulesetService();
-  void CreateFlocBlocklistService();
-  void CreateFlocSortingLshClustersService();
   void CreateOptimizationGuideService();
   void CreateStatusTray();
   void CreateBackgroundModeManager();
@@ -235,9 +218,6 @@ class BrowserProcessImpl : public BrowserProcess,
 
   StartupData* const startup_data_;
 
-  bool created_watchdog_thread_ = false;
-  std::unique_ptr<WatchDogThread> watchdog_thread_;
-
   // Must be destroyed after |local_state_|.
   std::unique_ptr<policy::ChromeBrowserPolicyConnector>
       browser_policy_connector_;
@@ -318,16 +298,6 @@ class BrowserProcessImpl : public BrowserProcess,
   std::unique_ptr<BackgroundModeManager> background_mode_manager_;
 #endif
 
-  bool created_safe_browsing_service_ = false;
-  scoped_refptr<safe_browsing::SafeBrowsingService> safe_browsing_service_;
-
-  bool created_subresource_filter_ruleset_service_ = false;
-  std::unique_ptr<subresource_filter::RulesetService>
-      subresource_filter_ruleset_service_;
-
-  std::unique_ptr<federated_learning::FlocSortingLshClustersService>
-      floc_sorting_lsh_clusters_service_;
-
   bool shutting_down_ = false;
 
   bool tearing_down_ = false;
@@ -348,8 +318,6 @@ class BrowserProcessImpl : public BrowserProcess,
   // notifications are properly added and removed.
   PrefChangeRegistrar pref_change_registrar_;
 
-  std::unique_ptr<BatteryMetrics> battery_metrics_;
-
 // TODO(crbug.com/1052397): Revisit the macro expression once build flag switch
 // of lacros-chrome is complete.
 #if defined(OS_WIN) || (defined(OS_LINUX) || BUILDFLAG(IS_CHROMEOS_LACROS))
@@ -398,7 +366,6 @@ class BrowserProcessImpl : public BrowserProcess,
   // Called to signal the process' main message loop to exit.
   base::OnceClosure quit_closure_;
 
-  BuildState build_state_;
 #endif
 
   SEQUENCE_CHECKER(sequence_checker_);
