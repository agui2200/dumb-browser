diff --git a/chrome/browser/ui/content_settings/content_setting_bubble_model.cc b/chrome/browser/ui/content_settings/content_setting_bubble_model.cc
index b36d7cc55bdd..b4cdb18c49a0 100644
--- a/chrome/browser/ui/content_settings/content_setting_bubble_model.cc
+++ b/chrome/browser/ui/content_settings/content_setting_bubble_model.cc
@@ -41,7 +41,6 @@
 #include "chrome/common/pref_names.h"
 #include "chrome/grit/generated_resources.h"
 #include "chrome/grit/theme_resources.h"
-#include "components/blocked_content/popup_blocker_tab_helper.h"
 #include "components/content_settings/browser/page_specific_content_settings.h"
 #include "components/content_settings/common/content_settings_agent.mojom.h"
 #include "components/content_settings/core/browser/content_settings_utils.h"
@@ -57,9 +56,6 @@
 #include "components/permissions/permissions_client.h"
 #include "components/prefs/pref_service.h"
 #include "components/strings/grit/components_strings.h"
-#include "components/subresource_filter/content/browser/content_subresource_filter_throttle_manager.h"
-#include "components/subresource_filter/core/browser/subresource_filter_constants.h"
-#include "components/subresource_filter/core/browser/subresource_filter_features.h"
 #include "components/url_formatter/elide_url.h"
 #include "components/vector_icons/vector_icons.h"
 #include "content/public/browser/notification_service.h"
@@ -145,22 +141,6 @@ bool GetSettingManagedByUser(const GURL& url,
          map->CanSetNarrowestContentSetting(url, url, type);
 }
 
-ContentSettingBubbleModel::ListItem CreateUrlListItem(int32_t id,
-                                                      const GURL& url) {
-  // Empty URLs should get a placeholder.
-  // TODO(csharrison): See if we can DCHECK that the URL will be valid here.
-  base::string16 title = url.spec().empty()
-                             ? l10n_util::GetStringUTF16(IDS_TAB_LOADING_TITLE)
-                             : base::UTF8ToUTF16(url.spec());
-
-  // Format the title to include the unicode single dot bullet code-point
-  // \u2022 and two spaces.
-  title = l10n_util::GetStringFUTF16(IDS_LIST_BULLET, title);
-  return ContentSettingBubbleModel::ListItem(nullptr, title, base::string16(),
-                                             true /* has_link */,
-                                             false /* has_blocked_badge */, id);
-}
-
 struct ContentSettingsTypeIdEntry {
   ContentSettingsType type;
   int id;
@@ -698,8 +678,7 @@ void ContentSettingCookiesBubbleModel::OnCustomLinkClicked() {
 // ContentSettingPopupBubbleModel ----------------------------------------------
 
 class ContentSettingPopupBubbleModel
-    : public ContentSettingSingleRadioGroup,
-      public blocked_content::UrlListManager::Observer {
+    : public ContentSettingSingleRadioGroup {
  public:
   ContentSettingPopupBubbleModel(Delegate* delegate, WebContents* web_contents);
   ~ContentSettingPopupBubbleModel() override;
@@ -707,9 +686,6 @@ class ContentSettingPopupBubbleModel
   // ContentSettingBubbleModel:
   void CommitChanges() override;
 
-  // PopupBlockerTabHelper::Observer:
-  void BlockedUrlAdded(int32_t id, const GURL& url) override;
-
  private:
   void OnListItemClicked(int index, const ui::Event& event) override;
 
@@ -717,10 +693,6 @@ class ContentSettingPopupBubbleModel
     return bubble_content().list_items[index].item_id;
   }
 
-  ScopedObserver<blocked_content::UrlListManager,
-                 blocked_content::UrlListManager::Observer>
-      url_list_observer_;
-
   DISALLOW_COPY_AND_ASSIGN(ContentSettingPopupBubbleModel);
 };
 
@@ -729,36 +701,12 @@ ContentSettingPopupBubbleModel::ContentSettingPopupBubbleModel(
     WebContents* web_contents)
     : ContentSettingSingleRadioGroup(delegate,
                                      web_contents,
-                                     ContentSettingsType::POPUPS),
-      url_list_observer_(this) {
+                                     ContentSettingsType::POPUPS) {
   set_title(l10n_util::GetStringUTF16(IDS_BLOCKED_POPUPS_TITLE));
-
-  // Build blocked popup list.
-  auto* helper =
-      blocked_content::PopupBlockerTabHelper::FromWebContents(web_contents);
-  std::map<int32_t, GURL> blocked_popups = helper->GetBlockedPopupRequests();
-  for (const auto& blocked_popup : blocked_popups)
-    AddListItem(CreateUrlListItem(blocked_popup.first, blocked_popup.second));
-
-  url_list_observer_.Add(helper->manager());
-  content_settings::RecordPopupsAction(
-      content_settings::POPUPS_ACTION_DISPLAYED_BUBBLE);
-}
-
-void ContentSettingPopupBubbleModel::BlockedUrlAdded(int32_t id,
-                                                     const GURL& url) {
-  AddListItem(CreateUrlListItem(id, url));
 }
 
 void ContentSettingPopupBubbleModel::OnListItemClicked(int index,
                                                        const ui::Event& event) {
-  auto* helper =
-      blocked_content::PopupBlockerTabHelper::FromWebContents(web_contents());
-  helper->ShowBlockedPopup(item_id_from_item_index(index),
-                           ui::DispositionFromEventFlags(event.flags()));
-  RemoveListItem(index);
-  content_settings::RecordPopupsAction(
-      content_settings::POPUPS_ACTION_CLICKED_LIST_ITEM_CLICKED);
 }
 
 void ContentSettingPopupBubbleModel::CommitChanges() {
@@ -1033,21 +981,11 @@ void ContentSettingMediaStreamBubbleModel::UpdateSettings(
   HostContentSettingsMap* map =
       HostContentSettingsMapFactory::GetForProfile(GetProfile());
   if (MicrophoneAccessed()) {
-    permissions::PermissionUmaUtil::ScopedRevocationReporter
-        scoped_revocation_reporter(
-            GetProfile(), page_content_settings->media_stream_access_origin(),
-            GURL(), ContentSettingsType::MEDIASTREAM_MIC,
-            permissions::PermissionSourceUI::PAGE_ACTION);
     map->SetContentSettingDefaultScope(
         page_content_settings->media_stream_access_origin(), GURL(),
         ContentSettingsType::MEDIASTREAM_MIC, setting);
   }
   if (CameraAccessed()) {
-    permissions::PermissionUmaUtil::ScopedRevocationReporter
-        scoped_revocation_reporter(
-            GetProfile(), page_content_settings->media_stream_access_origin(),
-            GURL(), ContentSettingsType::MEDIASTREAM_CAMERA,
-            permissions::PermissionSourceUI::PAGE_ACTION);
     map->SetContentSettingDefaultScope(
         page_content_settings->media_stream_access_origin(), GURL(),
         ContentSettingsType::MEDIASTREAM_CAMERA, setting);
@@ -1301,64 +1239,6 @@ void ContentSettingGeolocationBubbleModel::SetCustomLink() {
     set_custom_link(l10n_util::GetStringUTF16(IDS_GEOLOCATION_WILL_ASK_AGAIN));
 }
 
-// ContentSettingSubresourceFilterBubbleModel ----------------------------------
-
-ContentSettingSubresourceFilterBubbleModel::
-    ContentSettingSubresourceFilterBubbleModel(Delegate* delegate,
-                                               WebContents* web_contents)
-    : ContentSettingBubbleModel(delegate, web_contents) {
-  SetTitle();
-  SetMessage();
-  SetManageText();
-  set_done_button_text(l10n_util::GetStringUTF16(IDS_OK));
-  set_show_learn_more(true);
-  subresource_filter::ContentSubresourceFilterThrottleManager::LogAction(
-      subresource_filter::SubresourceFilterAction::kDetailsShown);
-}
-
-ContentSettingSubresourceFilterBubbleModel::
-    ~ContentSettingSubresourceFilterBubbleModel() = default;
-
-void ContentSettingSubresourceFilterBubbleModel::SetTitle() {
-  set_title(l10n_util::GetStringUTF16(IDS_BLOCKED_ADS_PROMPT_TITLE));
-}
-
-void ContentSettingSubresourceFilterBubbleModel::SetManageText() {
-  set_manage_text(l10n_util::GetStringUTF16(IDS_ALWAYS_ALLOW_ADS));
-  set_manage_text_style(ContentSettingBubbleModel::ManageTextStyle::kCheckbox);
-}
-
-void ContentSettingSubresourceFilterBubbleModel::SetMessage() {
-  set_message(l10n_util::GetStringUTF16(IDS_BLOCKED_ADS_PROMPT_EXPLANATION));
-}
-
-void ContentSettingSubresourceFilterBubbleModel::OnManageCheckboxChecked(
-    bool is_checked) {
-  set_done_button_text(
-      l10n_util::GetStringUTF16(is_checked ? IDS_APP_MENU_RELOAD : IDS_OK));
-  is_checked_ = is_checked;
-}
-
-void ContentSettingSubresourceFilterBubbleModel::OnLearnMoreClicked() {
-  DCHECK(delegate());
-  subresource_filter::ContentSubresourceFilterThrottleManager::LogAction(
-      subresource_filter::SubresourceFilterAction::kClickedLearnMore);
-  delegate()->ShowLearnMorePage(ContentSettingsType::ADS);
-}
-
-void ContentSettingSubresourceFilterBubbleModel::CommitChanges() {
-  if (is_checked_) {
-    subresource_filter::ContentSubresourceFilterThrottleManager::
-        FromWebContents(web_contents())
-            ->OnReloadRequested();
-  }
-}
-
-ContentSettingSubresourceFilterBubbleModel*
-ContentSettingSubresourceFilterBubbleModel::AsSubresourceFilterBubbleModel() {
-  return this;
-}
-
 // ContentSettingDownloadsBubbleModel ------------------------------------------
 
 ContentSettingDownloadsBubbleModel::ContentSettingDownloadsBubbleModel(
@@ -1459,45 +1339,6 @@ void ContentSettingDownloadsBubbleModel::OnManageButtonClicked() {
         ContentSettingsType::AUTOMATIC_DOWNLOADS);
 }
 
-// ContentSettingFramebustBlockBubbleModel -------------------------------------
-ContentSettingFramebustBlockBubbleModel::
-    ContentSettingFramebustBlockBubbleModel(Delegate* delegate,
-                                            WebContents* web_contents)
-    : ContentSettingSingleRadioGroup(delegate,
-                                     web_contents,
-                                     ContentSettingsType::POPUPS),
-      url_list_observer_(this) {
-  set_title(l10n_util::GetStringUTF16(IDS_REDIRECT_BLOCKED_MESSAGE));
-  auto* helper = FramebustBlockTabHelper::FromWebContents(web_contents);
-
-  // Build the blocked urls list.
-  for (const auto& blocked_url : helper->blocked_urls())
-    AddListItem(CreateUrlListItem(0 /* id */, blocked_url));
-
-  url_list_observer_.Add(helper->manager());
-}
-
-ContentSettingFramebustBlockBubbleModel::
-    ~ContentSettingFramebustBlockBubbleModel() = default;
-
-void ContentSettingFramebustBlockBubbleModel::OnListItemClicked(
-    int index,
-    const ui::Event& event) {
-  FramebustBlockTabHelper::FromWebContents(web_contents())
-      ->OnBlockedUrlClicked(index);
-}
-
-ContentSettingFramebustBlockBubbleModel*
-ContentSettingFramebustBlockBubbleModel::AsFramebustBlockBubbleModel() {
-  return this;
-}
-
-void ContentSettingFramebustBlockBubbleModel::BlockedUrlAdded(
-    int32_t id,
-    const GURL& blocked_url) {
-  AddListItem(CreateUrlListItem(0 /* id */, blocked_url));
-}
-
 // ContentSettingNotificationsBubbleModel ----------------------------------
 ContentSettingNotificationsBubbleModel::ContentSettingNotificationsBubbleModel(
     Delegate* delegate,
@@ -1664,10 +1505,6 @@ ContentSettingBubbleModel::CreateContentSettingBubbleModel(
     return std::make_unique<ContentSettingDownloadsBubbleModel>(delegate,
                                                                 web_contents);
   }
-  if (content_type == ContentSettingsType::ADS) {
-    return std::make_unique<ContentSettingSubresourceFilterBubbleModel>(
-        delegate, web_contents);
-  }
   if (content_type == ContentSettingsType::IMAGES ||
       content_type == ContentSettingsType::JAVASCRIPT ||
       content_type == ContentSettingsType::SOUND ||
@@ -1730,21 +1567,11 @@ ContentSettingBubbleModel::AsNotificationsBubbleModel() {
   return nullptr;
 }
 
-ContentSettingSubresourceFilterBubbleModel*
-ContentSettingBubbleModel::AsSubresourceFilterBubbleModel() {
-  return nullptr;
-}
-
 ContentSettingDownloadsBubbleModel*
 ContentSettingBubbleModel::AsDownloadsBubbleModel() {
   return nullptr;
 }
 
-ContentSettingFramebustBlockBubbleModel*
-ContentSettingBubbleModel::AsFramebustBlockBubbleModel() {
-  return nullptr;
-}
-
 Profile* ContentSettingBubbleModel::GetProfile() const {
   return Profile::FromBrowserContext(web_contents_->GetBrowserContext());
 }
