diff --git a/chrome/browser/extensions/api/enterprise_reporting_private/context_info_fetcher.cc b/chrome/browser/extensions/api/enterprise_reporting_private/context_info_fetcher.cc
index 0c44b4216f92..fc678dae620d 100644
--- a/chrome/browser/extensions/api/enterprise_reporting_private/context_info_fetcher.cc
+++ b/chrome/browser/extensions/api/enterprise_reporting_private/context_info_fetcher.cc
@@ -43,12 +43,6 @@ void ContextInfoFetcher::Fetch(ContextInfoCallback callback) {
 
   info.browser_affiliation_ids = GetBrowserAffiliationIDs();
   info.profile_affiliation_ids = GetProfileAffiliationIDs();
-  info.on_file_attached_providers =
-      GetAnalysisConnectorProviders(enterprise_connectors::FILE_ATTACHED);
-  info.on_file_downloaded_providers =
-      GetAnalysisConnectorProviders(enterprise_connectors::FILE_DOWNLOADED);
-  info.on_bulk_data_entry_providers =
-      GetAnalysisConnectorProviders(enterprise_connectors::BULK_DATA_ENTRY);
   info.realtime_url_check_mode = GetRealtimeUrlCheckMode();
   info.on_security_event_providers = GetOnSecurityEventProviders();
   info.browser_version = version_info::GetVersionNumber();
@@ -86,26 +80,14 @@ std::vector<std::string> ContextInfoFetcher::GetProfileAffiliationIDs() {
                                   affiliation_ids.end());
 }
 
-std::vector<std::string> ContextInfoFetcher::GetAnalysisConnectorProviders(
-    enterprise_connectors::AnalysisConnector connector) {
-  return connectors_service_->GetAnalysisServiceProviderNames(connector);
-}
-
 api::enterprise_reporting_private::RealtimeUrlCheckMode
 ContextInfoFetcher::GetRealtimeUrlCheckMode() {
-  switch (connectors_service_->GetAppliedRealTimeUrlCheck()) {
-    case safe_browsing::REAL_TIME_CHECK_DISABLED:
       return api::enterprise_reporting_private::
           REALTIME_URL_CHECK_MODE_DISABLED;
-    case safe_browsing::REAL_TIME_CHECK_FOR_MAINFRAME_ENABLED:
-      return api::enterprise_reporting_private::
-          REALTIME_URL_CHECK_MODE_ENABLED_MAIN_FRAME;
-  }
 }
 
 std::vector<std::string> ContextInfoFetcher::GetOnSecurityEventProviders() {
-  return connectors_service_->GetReportingServiceProviderNames(
-      enterprise_connectors::ReportingConnector::SECURITY_EVENT);
+  return std::vector<std::string>();
 }
 
 }  // namespace enterprise_reporting
