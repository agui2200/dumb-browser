diff --git a/content/browser/frame_host/cross_origin_opener_policy_status.cc b/content/browser/frame_host/cross_origin_opener_policy_status.cc
index 9e6e009b308a..7f4a4dc3de7b 100644
--- a/content/browser/frame_host/cross_origin_opener_policy_status.cc
+++ b/content/browser/frame_host/cross_origin_opener_policy_status.cc
@@ -42,7 +42,7 @@ bool CrossOriginOpenerPolicyMatch(
 // This function returns whether the BrowsingInstance should change following
 // COOP rules defined in:
 // https://gist.github.com/annevk/6f2dd8c79c77123f39797f6bdac43f3e#changes-to-navigation
-bool ShouldSwapBrowsingInstanceForCrossOriginOpenerPolicy(
+ALLOW_UNUSED_TYPE bool ShouldSwapBrowsingInstanceForCrossOriginOpenerPolicy(
     network::mojom::CrossOriginOpenerPolicyValue initiator_coop,
     const url::Origin& initiator_origin,
     bool is_initial_navigation,
@@ -117,6 +117,7 @@ CrossOriginOpenerPolicyStatus::EnforceCOOP(
     const url::Origin& response_origin,
     const GURL& response_url,
     const GURL& response_referrer_url) {
+#if 0
   SanitizeCoopHeaders(response_url, response_origin, response_head);
   network::mojom::ParsedHeaders* parsed_headers =
       response_head->parsed_headers.get();
@@ -248,7 +249,7 @@ CrossOriginOpenerPolicyStatus::EnforceCOOP(
   // Any subsequent response means this response was a redirect, and the source
   // of the navigation to the subsequent response.
   is_navigation_source_ = true;
-
+#endif
   return base::nullopt;
 }
 
@@ -320,6 +321,8 @@ std::unique_ptr<CrossOriginOpenerPolicyReporter>
 CrossOriginOpenerPolicyStatus::CreateCoopReporterIfNeeded(
     const network::CrossOriginOpenerPolicy& coop,
     const GURL& url) {
+  return nullptr;
+#if 0
   // If the main document hasn't specified any network report endpoint(s),
   // then it is likely not interested in receiving:
   // 1. Network reports (for obvious reasons).
@@ -340,6 +343,7 @@ CrossOriginOpenerPolicyStatus::CreateCoopReporterIfNeeded(
           ->GetProcess()
           ->GetStoragePartition(),
       url, coop);
+#endif
 }
 
 }  // namespace content
