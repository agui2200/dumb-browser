diff --git a/chrome/browser/search/local_ntp_source.h b/chrome/browser/search/local_ntp_source.h
index 45b2a4d2ae4a..f23f9145138b 100644
--- a/chrome/browser/search/local_ntp_source.h
+++ b/chrome/browser/search/local_ntp_source.h
@@ -19,8 +19,6 @@
 #include "chrome/browser/search/background/ntp_background_service_observer.h"
 #include "chrome/browser/search/one_google_bar/one_google_bar_service.h"
 #include "chrome/browser/search/one_google_bar/one_google_bar_service_observer.h"
-#include "chrome/browser/search/promos/promo_service.h"
-#include "chrome/browser/search/promos/promo_service_observer.h"
 #include "chrome/browser/search/search_suggest/search_suggest_service.h"
 #include "chrome/browser/search/search_suggest/search_suggest_service_observer.h"
 #include "components/prefs/pref_registry_simple.h"
@@ -31,7 +29,6 @@
 #endif
 
 struct OneGoogleBarData;
-struct PromoData;
 class Profile;
 
 namespace search_provider_logos {
@@ -48,7 +45,6 @@ class LogoService;
 class LocalNtpSource : public content::URLDataSource,
                        public NtpBackgroundServiceObserver,
                        public OneGoogleBarServiceObserver,
-                       public PromoServiceObserver,
                        public SearchSuggestServiceObserver {
  public:
   explicit LocalNtpSource(Profile* profile);
@@ -95,10 +91,6 @@ class LocalNtpSource : public content::URLDataSource,
   void OnOneGoogleBarDataUpdated() override;
   void OnOneGoogleBarServiceShuttingDown() override;
 
-  // Overridden from PromoServiceObserver:
-  void OnPromoDataUpdated() override;
-  void OnPromoServiceShuttingDown() override;
-
   // Overridden from SearchSuggestServiceObserver:
   void OnSearchSuggestDataUpdated() override;
   void OnSearchSuggestServiceShuttingDown() override;
@@ -112,22 +104,13 @@ class LocalNtpSource : public content::URLDataSource,
   void ServeOneGoogleBarWhenAvailable(
       content::URLDataSource::GotDataCallback callback);
 
-  // Called when the promo data is available and serves |data| to any pending
-  // requests from the NTP.
-  void ServePromo(const base::Optional<PromoData>& data);
-  // Called when the page requests promo data. If the data is available it
-  // is returned immediately, otherwise it is returned when it becomes
-  // available in ServePromo.
-  void ServePromoWhenAvailable(
-      content::URLDataSource::GotDataCallback callback);
-
   // If suggestion data is available return it immediately, otherwise no search
   // suggestions will be shown on this NTP load.
   void ServeSearchSuggestionsIfAvailable(
       content::URLDataSource::GotDataCallback callback);
 
-  // Start requests for the promo and OGB.
-  void InitiatePromoAndOGBRequests();
+  // Start requests for the OGB.
+  void InitiateOGBRequests();
 
   Profile* const profile_;
 
@@ -148,14 +131,6 @@ class LocalNtpSource : public content::URLDataSource,
   ScopedObserver<OneGoogleBarService, OneGoogleBarServiceObserver>
       one_google_bar_service_observer_{this};
 
-  base::Optional<base::TimeTicks> pending_promo_request_;
-  std::vector<content::URLDataSource::GotDataCallback> promo_callbacks_;
-
-  PromoService* promo_service_;
-
-  ScopedObserver<PromoService, PromoServiceObserver> promo_service_observer_{
-      this};
-
   base::Optional<base::TimeTicks> pending_search_suggest_request_;
 
   SearchSuggestService* search_suggest_service_;
