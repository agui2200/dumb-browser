diff --git a/components/download/internal/common/base_file.cc b/components/download/internal/common/base_file.cc
index 932ab3ea2864e..c79a2fd07fca2 100644
--- a/components/download/internal/common/base_file.cc
+++ b/components/download/internal/common/base_file.cc
@@ -22,8 +22,6 @@
 #include "build/build_config.h"
 #include "components/download/public/common/download_interrupt_reasons_utils.h"
 #include "components/download/public/common/download_item.h"
-#include "components/download/public/common/download_stats.h"
-#include "components/services/quarantine/quarantine.h"
 #include "crypto/secure_hash.h"
 
 #if defined(OS_WIN)
@@ -164,11 +162,6 @@ DownloadInterruptReason BaseFile::AppendDataToFile(const char* data,
 DownloadInterruptReason BaseFile::WriteDataToFile(int64_t offset,
                                                   const char* data,
                                                   size_t data_len) {
-  // NOTE(benwells): The above DCHECK won't be present in release builds,
-  // so we log any occurences to see how common this error is in the wild.
-  if (detached_)
-    RecordDownloadCount(APPEND_TO_DETACHED_FILE_COUNT);
-
   if (!file_.IsValid()) {
     return LogInterruptReason("No file stream on append", 0,
                               DOWNLOAD_INTERRUPT_REASON_FILE_FAILED);
@@ -533,6 +526,7 @@ DownloadInterruptReason BaseFile::PublishDownload() {
 }
 #endif  // defined(OS_ANDROID)
 
+#if 0
 namespace {
 
 DownloadInterruptReason QuarantineFileResultToReason(
@@ -632,13 +626,14 @@ void BaseFile::OnQuarantineServiceError(const GURL& source_url,
 
   CHECK(false) << "In-process quarantine service should not have failed.";
 }
+#endif
 
 void BaseFile::AnnotateWithSourceInformation(
     const std::string& client_guid,
     const GURL& source_url,
     const GURL& referrer_url,
-    mojo::PendingRemote<quarantine::mojom::Quarantine> remote_quarantine,
     OnAnnotationDoneCallback on_annotation_done_callback) {
+#if 0
   GURL authority_url = GetEffectiveAuthorityURL(source_url, referrer_url);
   if (!remote_quarantine) {
 #if defined(OS_WIN)
@@ -665,6 +660,8 @@ void BaseFile::AnnotateWithSourceInformation(
         base::BindOnce(&BaseFile::OnFileQuarantined, weak_factory_.GetWeakPtr(),
                        false));
   }
+#endif
+  std::move(on_annotation_done_callback).Run(DOWNLOAD_INTERRUPT_REASON_NONE);
 }
 
 }  // namespace download
