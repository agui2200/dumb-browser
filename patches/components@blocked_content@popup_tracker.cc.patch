diff --git a/components/blocked_content/popup_tracker.cc b/components/blocked_content/popup_tracker.cc
index 22cf6b9cb445..1da3a978b908 100644
--- a/components/blocked_content/popup_tracker.cc
+++ b/components/blocked_content/popup_tracker.cc
@@ -47,7 +47,6 @@ PopupTracker::PopupTracker(content::WebContents* contents,
                            content::WebContents* opener,
                            WindowOpenDisposition disposition)
     : content::WebContentsObserver(contents),
-      scoped_observer_(this),
       visibility_tracker_(
           base::DefaultTickClock::GetInstance(),
           contents->GetVisibility() != content::Visibility::HIDDEN),
@@ -55,13 +54,6 @@ PopupTracker::PopupTracker(content::WebContents* contents,
       window_open_disposition_(disposition) {
   if (auto* popup_opener = PopupOpenerTabHelper::FromWebContents(opener))
     popup_opener->OnOpenedPopup(this);
-
-  auto* observer_manager =
-      subresource_filter::SubresourceFilterObserverManager::FromWebContents(
-          contents);
-  if (observer_manager) {
-    scoped_observer_.Add(observer_manager);
-  }
 }
 
 void PopupTracker::WebContentsDestroyed() {
@@ -143,31 +135,6 @@ void PopupTracker::DidGetUserInteraction(const blink::WebInputEvent& event) {
   }
 }
 
-// This method will always be called before the DidFinishNavigation associated
-// with this handle.
-// The exception is a navigation restoring a page from back-forward cache --
-// in that case don't issue any requests, therefore we don't get any
-// safe browsing callbacks. See the comment above for the mitigation.
-void PopupTracker::OnSafeBrowsingChecksComplete(
-    content::NavigationHandle* navigation_handle,
-    const subresource_filter::SubresourceFilterSafeBrowsingClient::CheckResult&
-        result) {
-  DCHECK(navigation_handle->IsInMainFrame());
-  safe_browsing_status_ = PopupSafeBrowsingStatus::kSafe;
-  if (result.threat_type ==
-          safe_browsing::SBThreatType::SB_THREAT_TYPE_URL_PHISHING ||
-      result.threat_type == safe_browsing::SBThreatType::
-                                SB_THREAT_TYPE_URL_CLIENT_SIDE_PHISHING ||
-      result.threat_type ==
-          safe_browsing::SBThreatType::SB_THREAT_TYPE_SUBRESOURCE_FILTER) {
-    safe_browsing_status_ = PopupSafeBrowsingStatus::kUnsafe;
-  }
-}
-
-void PopupTracker::OnSubresourceFilterGoingAway() {
-  scoped_observer_.RemoveAll();
-}
-
 WEB_CONTENTS_USER_DATA_KEY_IMPL(PopupTracker)
 
 }  // namespace blocked_content
