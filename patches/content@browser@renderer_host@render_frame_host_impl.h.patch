diff --git a/content/browser/renderer_host/render_frame_host_impl.h b/content/browser/renderer_host/render_frame_host_impl.h
index ef37788ae723..35e499394f9f 100644
--- a/content/browser/renderer_host/render_frame_host_impl.h
+++ b/content/browser/renderer_host/render_frame_host_impl.h
@@ -40,7 +40,6 @@
 #include "content/browser/coop_coep_cross_origin_isolated_info.h"
 #include "content/browser/feature_observer.h"
 #include "content/browser/idle/idle_manager_impl.h"
-#include "content/browser/net/cross_origin_opener_policy_reporter.h"
 #include "content/browser/renderer_host/back_forward_cache_metrics.h"
 #include "content/browser/renderer_host/media/render_frame_audio_input_stream_factory.h"
 #include "content/browser/renderer_host/media/render_frame_audio_output_stream_factory.h"
@@ -69,7 +68,6 @@
 #include "media/mojo/mojom/interface_factory.mojom-forward.h"
 #include "media/mojo/mojom/media_metrics_provider.mojom-forward.h"
 #include "media/mojo/mojom/media_player.mojom-forward.h"
-#include "media/mojo/services/media_metrics_provider.h"
 #include "mojo/public/cpp/bindings/associated_receiver.h"
 #include "mojo/public/cpp/bindings/associated_remote.h"
 #include "mojo/public/cpp/bindings/message.h"
@@ -78,6 +76,7 @@
 #include "mojo/public/cpp/bindings/pending_remote.h"
 #include "mojo/public/cpp/bindings/receiver.h"
 #include "mojo/public/cpp/bindings/remote.h"
+#include "mojo/public/cpp/bindings/unique_receiver_set.h"
 #include "mojo/public/cpp/system/data_pipe.h"
 #include "net/base/isolation_info.h"
 #include "net/base/network_isolation_key.h"
@@ -115,7 +114,6 @@
 #include "third_party/blink/public/mojom/frame/frame_owner_element_type.mojom.h"
 #include "third_party/blink/public/mojom/frame/frame_owner_properties.mojom-forward.h"
 #include "third_party/blink/public/mojom/frame/navigation_initiator.mojom.h"
-#include "third_party/blink/public/mojom/frame/reporting_observer.mojom-forward.h"
 #include "third_party/blink/public/mojom/frame/tree_scope_type.mojom.h"
 #include "third_party/blink/public/mojom/frame/user_activation_update_types.mojom.h"
 #include "third_party/blink/public/mojom/idle/idle_manager.mojom.h"
@@ -206,7 +204,6 @@ class AgentSchedulingGroupHost;
 class AppCacheNavigationHandle;
 class AuthenticatorImpl;
 class BackForwardCacheMetrics;
-class CrossOriginEmbedderPolicyReporter;
 class FrameTree;
 class FrameTreeNode;
 class GeolocationServiceImpl;
@@ -701,9 +698,6 @@ class CONTENT_EXPORT RenderFrameHostImpl
   // typically mean that the frame has been detached from the frame tree.
   virtual RenderWidgetHostImpl* GetRenderWidgetHost();
 
-  media::MediaMetricsProvider::RecordAggregateWatchTimeCallback
-  GetRecordAggregateWatchTimeCallback();
-
   // The unique ID of the latest NavigationEntry that this RenderFrameHost is
   // showing. This may change even when this frame hasn't committed a page,
   // such as for a new subframe navigation in a different frame.
@@ -1474,9 +1468,6 @@ class CONTENT_EXPORT RenderFrameHostImpl
   void BindMediaInterfaceFactoryReceiver(
       mojo::PendingReceiver<media::mojom::InterfaceFactory> receiver);
 
-  void BindMediaMetricsProviderReceiver(
-      mojo::PendingReceiver<media::mojom::MediaMetricsProvider> receiver);
-
   void CreateMediaPlayerHost(
       mojo::PendingReceiver<media::mojom::MediaPlayerHost> receiver);
 
@@ -1521,13 +1512,6 @@ class CONTENT_EXPORT RenderFrameHostImpl
       network::CrossOriginEmbedderPolicy policy) {
     cross_origin_embedder_policy_ = policy;
   }
-  CrossOriginEmbedderPolicyReporter* coep_reporter() {
-    return coep_reporter_.get();
-  }
-  void set_coop_reporter(
-      std::unique_ptr<CrossOriginOpenerPolicyReporter>&& reporter) {
-    coop_reporter_ = std::move(reporter);
-  }
 
   // Semi-formal definition of COOP:
   // https://gist.github.com/annevk/6f2dd8c79c77123f39797f6bdac43f3e
@@ -1538,9 +1522,6 @@ class CONTENT_EXPORT RenderFrameHostImpl
       const network::CrossOriginOpenerPolicy& cross_origin_opener_policy) {
     cross_origin_opener_policy_ = cross_origin_opener_policy;
   }
-  CrossOriginOpenerPolicyReporter* coop_reporter() {
-    return coop_reporter_.get();
-  }
   int virtual_browsing_context_group() const {
     return virtual_browsing_context_group_;
   }
@@ -2252,8 +2233,6 @@ class CONTENT_EXPORT RenderFrameHostImpl
       url::Origin* out_main_world_origin,
       net::IsolationInfo* out_isolation_info,
       network::mojom::ClientSecurityStatePtr* out_client_security_state,
-      mojo::PendingRemote<network::mojom::CrossOriginEmbedderPolicyReporter>*
-          coep_reporter_pending_remote,
       network::mojom::TrustTokenRedemptionPolicy*
           out_trust_token_redemption_policy);
 
@@ -2631,10 +2610,6 @@ class CONTENT_EXPORT RenderFrameHostImpl
   // RenderFrameHost LifecycleState.
   void SetLifecycleState(LifecycleState state);
 
-  void BindReportingObserver(
-      mojo::PendingReceiver<blink::mojom::ReportingObserver>
-          reporting_observer_receiver);
-
   // Check the renderer provided sandbox flags matches with what the browser
   // process computed on its own. This triggers DCHECK and DumpWithoutCrashing()
   //
@@ -3322,9 +3297,6 @@ class CONTENT_EXPORT RenderFrameHostImpl
   // This time is used to record the last WebXR DOM Overlay setup request.
   base::TimeTicks last_xr_overlay_setup_time_;
 
-  std::unique_ptr<CrossOriginEmbedderPolicyReporter> coep_reporter_;
-  std::unique_ptr<CrossOriginOpenerPolicyReporter> coop_reporter_;
-
   // https://github.com/camillelamy/explainers/blob/master/coop_reporting.md#virtual-browsing-context-group-id
   //
   // Whenever we detect that the enforcement of a report-only COOP policy would
