diff --git a/cc/metrics/compositor_frame_reporter.cc b/cc/metrics/compositor_frame_reporter.cc
index 320e9d6af631..2ac5b4d42c77 100644
--- a/cc/metrics/compositor_frame_reporter.cc
+++ b/cc/metrics/compositor_frame_reporter.cc
@@ -17,7 +17,6 @@
 #include "cc/base/rolling_time_delta_history.h"
 #include "cc/metrics/dropped_frame_counter.h"
 #include "cc/metrics/frame_sequence_tracker.h"
-#include "cc/metrics/latency_ukm_reporter.h"
 #include "services/tracing/public/cpp/perfetto/macros.h"
 #include "third_party/perfetto/protos/perfetto/trace/track_event/chrome_frame_reporter.pbzero.h"
 #include "ui/events/types/event_type.h"
@@ -292,14 +291,12 @@ void ReportOffsetBetweenDeadlineAndPresentationTime(
 CompositorFrameReporter::CompositorFrameReporter(
     const ActiveTrackers& active_trackers,
     const viz::BeginFrameArgs& args,
-    LatencyUkmReporter* latency_ukm_reporter,
     bool should_report_metrics,
     SmoothThread smooth_thread,
     int layer_tree_host_id)
     : should_report_metrics_(should_report_metrics),
       args_(args),
       active_trackers_(active_trackers),
-      latency_ukm_reporter_(latency_ukm_reporter),
       smooth_thread_(smooth_thread),
       layer_tree_host_id_(layer_tree_host_id) {}
 
@@ -312,7 +309,7 @@ CompositorFrameReporter::CopyReporterAtBeginImplStage() {
     return nullptr;
   }
   auto new_reporter = std::make_unique<CompositorFrameReporter>(
-      active_trackers_, args_, latency_ukm_reporter_, should_report_metrics_,
+      active_trackers_, args_, should_report_metrics_,
       smooth_thread_, layer_tree_host_id_);
   new_reporter->did_finish_impl_frame_ = did_finish_impl_frame_;
   new_reporter->impl_frame_finish_time_ = impl_frame_finish_time_;
@@ -526,10 +523,6 @@ void CompositorFrameReporter::ReportCompositorLatencyHistograms() const {
       continue;
     FrameReportType report_type = static_cast<FrameReportType>(type);
     UMA_HISTOGRAM_ENUMERATION("CompositorLatency.Type", report_type);
-    if (latency_ukm_reporter_) {
-      latency_ukm_reporter_->ReportCompositorLatencyUkm(
-          report_type, stage_history_, active_trackers_, viz_breakdown_);
-    }
     bool any_active_interaction = false;
     for (size_t fst_type = 0; fst_type < active_trackers_.size(); ++fst_type) {
       const auto tracker_type = static_cast<FrameSequenceTrackerType>(fst_type);
@@ -783,11 +776,6 @@ void CompositorFrameReporter::ReportEventLatencyHistograms() const {
       }
     }
   }
-
-  if (latency_ukm_reporter_) {
-    latency_ukm_reporter_->ReportEventLatencyUkm(
-        events_metrics_, stage_history_, viz_breakdown_);
-  }
 }
 
 void CompositorFrameReporter::ReportEventLatencyBlinkBreakdowns(
