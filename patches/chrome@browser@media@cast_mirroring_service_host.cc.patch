diff --git a/chrome/browser/media/cast_mirroring_service_host.cc b/chrome/browser/media/cast_mirroring_service_host.cc
index 16357c19e37b..dd0a2fbfd295 100644
--- a/chrome/browser/media/cast_mirroring_service_host.cc
+++ b/chrome/browser/media/cast_mirroring_service_host.cc
@@ -16,7 +16,9 @@
 #include "base/task/thread_pool.h"
 #include "base/threading/thread_task_runner_handle.h"
 #include "chrome/browser/browser_process.h"
+#if BUILDFLAG(ENABLE_MEDIA_REMOTING)
 #include "chrome/browser/media/cast_remoting_connector.h"
+#endif
 #include "chrome/browser/media/webrtc/media_capture_devices_dispatcher.h"
 #include "chrome/browser/media/webrtc/media_stream_capture_indicator.h"
 #include "chrome/browser/net/system_network_context_manager.h"
@@ -321,6 +323,7 @@ void CastMirroringServiceHost::CreateAudioStream(
 void CastMirroringServiceHost::ConnectToRemotingSource(
     mojo::PendingRemote<media::mojom::Remoter> remoter,
     mojo::PendingReceiver<media::mojom::RemotingSource> receiver) {
+#if BUILDFLAG(ENABLE_MEDIA_REMOTING)
   if (source_media_id_.type == content::DesktopMediaID::TYPE_WEB_CONTENTS) {
     content::WebContents* source_contents = web_contents();
     if (source_contents) {
@@ -328,6 +331,7 @@ void CastMirroringServiceHost::ConnectToRemotingSource(
           ->ConnectWithMediaRemoter(std::move(remoter), std::move(receiver));
     }
   }
+#endif
 }
 
 void CastMirroringServiceHost::WebContentsDestroyed() {
