diff --git a/chrome/browser/ui/autofill/payments/save_card_bubble_controller_impl.cc b/chrome/browser/ui/autofill/payments/save_card_bubble_controller_impl.cc
index e918a8142dfbb..992d67ec2ca48 100644
--- a/chrome/browser/ui/autofill/payments/save_card_bubble_controller_impl.cc
+++ b/chrome/browser/ui/autofill/payments/save_card_bubble_controller_impl.cc
@@ -29,7 +29,6 @@
 #include "chrome/common/url_constants.h"
 #include "chrome/grit/generated_resources.h"
 #include "components/autofill/core/browser/autofill_experiments.h"
-#include "components/autofill/core/browser/autofill_metrics.h"
 #include "components/autofill/core/browser/personal_data_manager.h"
 #include "components/autofill/core/common/autofill_clock.h"
 #include "components/autofill/core/common/autofill_constants.h"
@@ -272,11 +271,6 @@ void SaveCardBubbleControllerImpl::OnSaveButton(
 
       std::u16string name_provided_by_user;
       if (!user_provided_card_details.cardholder_name.empty()) {
-        // Log whether the name was changed by the user or simply accepted
-        // without edits.
-        AutofillMetrics::LogSaveCardCardholderNameWasEdited(
-            user_provided_card_details.cardholder_name !=
-            base::UTF8ToUTF16(account_info_.full_name));
         // Trim the cardholder name provided by the user and send it in the
         // callback so it can be included in the final request.
         DCHECK(ShouldRequestNameFromUser());
@@ -295,8 +289,6 @@ void SaveCardBubbleControllerImpl::OnSaveButton(
       std::move(local_save_card_prompt_callback_).Run(AutofillClient::ACCEPTED);
       break;
     case BubbleType::MANAGE_CARDS:
-      AutofillMetrics::LogManageCardsPromptMetric(
-          AutofillMetrics::MANAGE_CARDS_DONE, is_upload_save_);
       return;
     case BubbleType::UPLOAD_IN_PROGRESS:
     case BubbleType::FAILURE:
@@ -316,15 +308,11 @@ void SaveCardBubbleControllerImpl::OnCancelButton() {
 
 void SaveCardBubbleControllerImpl::OnLegalMessageLinkClicked(const GURL& url) {
   OpenUrl(url);
-  AutofillMetrics::LogCreditCardUploadLegalMessageLinkClicked();
 }
 
 void SaveCardBubbleControllerImpl::OnManageCardsClicked() {
   DCHECK(current_bubble_type_ == BubbleType::MANAGE_CARDS);
 
-  AutofillMetrics::LogManageCardsPromptMetric(
-      AutofillMetrics::MANAGE_CARDS_MANAGE_CARDS, is_upload_save_);
-
   ShowPaymentsSettingsPage();
 }
 
@@ -338,43 +326,6 @@ void SaveCardBubbleControllerImpl::OnBubbleClosed(
     PaymentsBubbleClosedReason closed_reason) {
   set_bubble_view(nullptr);
 
-  // Log save card prompt result according to the closed reason.
-  if ((current_bubble_type_ == BubbleType::LOCAL_SAVE ||
-       current_bubble_type_ == BubbleType::UPLOAD_SAVE)) {
-    AutofillMetrics::SaveCardPromptResultMetric metric;
-    switch (closed_reason) {
-      case PaymentsBubbleClosedReason::kAccepted:
-        metric = AutofillMetrics::SAVE_CARD_PROMPT_ACCEPTED;
-        pref_service_->SetInteger(
-            prefs::kAutofillAcceptSaveCreditCardPromptState,
-            prefs::PREVIOUS_SAVE_CREDIT_CARD_PROMPT_USER_DECISION_ACCEPTED);
-        break;
-      case PaymentsBubbleClosedReason::kCancelled:
-        metric = AutofillMetrics::SAVE_CARD_PROMPT_CANCELLED;
-        pref_service_->SetInteger(
-            prefs::kAutofillAcceptSaveCreditCardPromptState,
-            prefs::PREVIOUS_SAVE_CREDIT_CARD_PROMPT_USER_DECISION_DENIED);
-        break;
-      case PaymentsBubbleClosedReason::kClosed:
-        metric = AutofillMetrics::SAVE_CARD_PROMPT_CLOSED;
-        break;
-      case PaymentsBubbleClosedReason::kNotInteracted:
-        metric = AutofillMetrics::SAVE_CARD_PROMPT_NOT_INTERACTED;
-        break;
-      case PaymentsBubbleClosedReason::kLostFocus:
-        metric = AutofillMetrics::SAVE_CARD_PROMPT_LOST_FOCUS;
-        break;
-      case PaymentsBubbleClosedReason::kUnknown:
-        metric = AutofillMetrics::SAVE_CARD_PROMPT_RESULT_UNKNOWN;
-        break;
-    }
-    AutofillMetrics::LogSaveCardPromptResultMetric(
-        metric, is_upload_save_, is_reshow_, options_,
-        pref_service_->GetInteger(
-            prefs::kAutofillAcceptSaveCreditCardPromptState),
-        GetSecurityLevel(), GetSyncState());
-  }
-
   // Handles |current_bubble_type_| change according to its current type and the
   // |closed_reason|.
   if (closed_reason == PaymentsBubbleClosedReason::kAccepted) {
@@ -387,14 +338,6 @@ void SaveCardBubbleControllerImpl::OnBubbleClosed(
       if (base::FeatureList::IsEnabled(
               features::kAutofillCreditCardUploadFeedback)) {
         current_bubble_type_ = BubbleType::UPLOAD_IN_PROGRESS;
-
-        // Log this metric here since for each bubble, the bubble state will
-        // only be changed to UPLOAD_IN_PROGRESS once.
-        // SavePaymentIconView::Update is not guaranteed to be called only once
-        // so logging in any functions related to it is not reliable.
-        AutofillMetrics::LogCreditCardUploadFeedbackMetric(
-            AutofillMetrics::
-                CREDIT_CARD_UPLOAD_FEEDBACK_LOADING_ANIMATION_SHOWN);
       } else {
         current_bubble_type_ = BubbleType::INACTIVE;
       }
@@ -496,20 +439,10 @@ void SaveCardBubbleControllerImpl::DoShowBubble() {
   switch (current_bubble_type_) {
     case BubbleType::UPLOAD_SAVE:
     case BubbleType::LOCAL_SAVE:
-      AutofillMetrics::LogSaveCardPromptOfferMetric(
-          AutofillMetrics::SAVE_CARD_PROMPT_SHOWN, is_upload_save_, is_reshow_,
-          options_,
-          pref_service_->GetInteger(
-              prefs::kAutofillAcceptSaveCreditCardPromptState),
-          GetSecurityLevel(), GetSyncState());
       break;
     case BubbleType::MANAGE_CARDS:
-      AutofillMetrics::LogManageCardsPromptMetric(
-          AutofillMetrics::MANAGE_CARDS_SHOWN, is_upload_save_);
       break;
     case BubbleType::FAILURE:
-      AutofillMetrics::LogCreditCardUploadFeedbackMetric(
-          AutofillMetrics::CREDIT_CARD_UPLOAD_FEEDBACK_FAILURE_BUBBLE_SHOWN);
       break;
     case BubbleType::UPLOAD_IN_PROGRESS:
     case BubbleType::INACTIVE:
@@ -567,16 +500,8 @@ void SaveCardBubbleControllerImpl::ShowIconOnly() {
   switch (current_bubble_type_) {
     case BubbleType::UPLOAD_SAVE:
     case BubbleType::LOCAL_SAVE:
-      AutofillMetrics::LogSaveCardPromptOfferMetric(
-          AutofillMetrics::SAVE_CARD_PROMPT_NOT_SHOWN_MAX_STRIKES_REACHED,
-          is_upload_save_, is_reshow_, options_,
-          pref_service_->GetInteger(
-              prefs::kAutofillAcceptSaveCreditCardPromptState),
-          GetSecurityLevel(), GetSyncState());
       break;
     case BubbleType::FAILURE:
-      AutofillMetrics::LogCreditCardUploadFeedbackMetric(
-          AutofillMetrics::CREDIT_CARD_UPLOAD_FEEDBACK_FAILURE_ICON_SHOWN);
       break;
     case BubbleType::UPLOAD_IN_PROGRESS:
     case BubbleType::MANAGE_CARDS:
