diff --git a/chrome/browser/ui/autofill/payments/save_card_bubble_controller_impl.cc b/chrome/browser/ui/autofill/payments/save_card_bubble_controller_impl.cc
index 1a7e0c10e887..e953a75fbf97 100644
--- a/chrome/browser/ui/autofill/payments/save_card_bubble_controller_impl.cc
+++ b/chrome/browser/ui/autofill/payments/save_card_bubble_controller_impl.cc
@@ -30,7 +30,6 @@
 #include "chrome/common/url_constants.h"
 #include "chrome/grit/generated_resources.h"
 #include "components/autofill/core/browser/autofill_experiments.h"
-#include "components/autofill/core/browser/autofill_metrics.h"
 #include "components/autofill/core/browser/personal_data_manager.h"
 #include "components/autofill/core/common/autofill_clock.h"
 #include "components/autofill/core/common/autofill_constants.h"
@@ -105,12 +104,6 @@ void SaveCardBubbleControllerImpl::OfferLocalSave(
 
   if (options.show_prompt) {
     ShowBubble();
-    AutofillMetrics::LogSaveCardPromptMetric(
-        AutofillMetrics::SAVE_CARD_PROMPT_SHOW_REQUESTED, is_upload_save_,
-        is_reshow_, options_,
-        pref_service_->GetInteger(
-            prefs::kAutofillAcceptSaveCreditCardPromptState),
-        GetSecurityLevel(), GetSyncState());
   } else {
     ShowIconOnly();
   }
@@ -135,12 +128,6 @@ void SaveCardBubbleControllerImpl::OfferUploadSave(
   if (options.show_prompt) {
     // Can't move this into the other "if (show_bubble_)" below because an
     // invalid legal message would skip it.
-    AutofillMetrics::LogSaveCardPromptMetric(
-        AutofillMetrics::SAVE_CARD_PROMPT_SHOW_REQUESTED, is_upload_save_,
-        is_reshow_, options_,
-        pref_service_->GetInteger(
-            prefs::kAutofillAcceptSaveCreditCardPromptState),
-        GetSecurityLevel(), GetSyncState());
   }
 
   card_ = card;
@@ -211,12 +198,6 @@ void SaveCardBubbleControllerImpl::ReshowBubble() {
 
   if (current_bubble_type_ == BubbleType::LOCAL_SAVE ||
       current_bubble_type_ == BubbleType::UPLOAD_SAVE) {
-    AutofillMetrics::LogSaveCardPromptMetric(
-        AutofillMetrics::SAVE_CARD_PROMPT_SHOW_REQUESTED, is_upload_save_,
-        is_reshow_, options_,
-        pref_service_->GetInteger(
-            prefs::kAutofillAcceptSaveCreditCardPromptState),
-        GetSecurityLevel(), GetSyncState());
   }
 
   ShowBubble();
@@ -368,11 +349,6 @@ void SaveCardBubbleControllerImpl::OnSaveButton(
 
       base::string16 name_provided_by_user;
       if (!user_provided_card_details.cardholder_name.empty()) {
-        // Log whether the name was changed by the user or simply accepted
-        // without edits.
-        AutofillMetrics::LogSaveCardCardholderNameWasEdited(
-            user_provided_card_details.cardholder_name !=
-            base::UTF8ToUTF16(account_info_.full_name));
         // Trim the cardholder name provided by the user and send it in the
         // callback so it can be included in the final request.
         DCHECK(ShouldRequestNameFromUser());
@@ -391,8 +367,6 @@ void SaveCardBubbleControllerImpl::OnSaveButton(
       std::move(local_save_card_prompt_callback_).Run(AutofillClient::ACCEPTED);
       break;
     case BubbleType::MANAGE_CARDS:
-      AutofillMetrics::LogManageCardsPromptMetric(
-          AutofillMetrics::MANAGE_CARDS_DONE, is_upload_save_);
       return;
     case BubbleType::UPLOAD_IN_PROGRESS:
     case BubbleType::SIGN_IN_PROMO:
@@ -403,12 +377,6 @@ void SaveCardBubbleControllerImpl::OnSaveButton(
 
   if (current_bubble_type_ == BubbleType::LOCAL_SAVE ||
       current_bubble_type_ == BubbleType::UPLOAD_SAVE) {
-    AutofillMetrics::LogSaveCardPromptMetric(
-        AutofillMetrics::SAVE_CARD_PROMPT_END_ACCEPTED, is_upload_save_,
-        is_reshow_, options_,
-        pref_service_->GetInteger(
-            prefs::kAutofillAcceptSaveCreditCardPromptState),
-        GetSecurityLevel(), GetSyncState());
 
     // If the experiment is not enabled, update user's previous decision here.
     // Otherwise since the logging will happen in OnBubbleClosed() which is
@@ -425,12 +393,6 @@ void SaveCardBubbleControllerImpl::OnSaveButton(
 void SaveCardBubbleControllerImpl::OnCancelButton() {
   if (current_bubble_type_ == BubbleType::LOCAL_SAVE ||
       current_bubble_type_ == BubbleType::UPLOAD_SAVE) {
-    AutofillMetrics::LogSaveCardPromptMetric(
-        AutofillMetrics::SAVE_CARD_PROMPT_END_DENIED, is_upload_save_,
-        is_reshow_, options_,
-        pref_service_->GetInteger(
-            prefs::kAutofillAcceptSaveCreditCardPromptState),
-        GetSecurityLevel(), GetSyncState());
 
     // If the experiment is not enabled, update user's previous decision here.
     // Otherwise since the logging will happen in OnBubbleClosed() which is
@@ -454,25 +416,12 @@ void SaveCardBubbleControllerImpl::OnCancelButton() {
 
 void SaveCardBubbleControllerImpl::OnLegalMessageLinkClicked(const GURL& url) {
   OpenUrl(url);
-  AutofillMetrics::LogSaveCardPromptMetric(
-      AutofillMetrics::SAVE_CARD_PROMPT_DISMISS_CLICK_LEGAL_MESSAGE,
-      is_upload_save_, is_reshow_, options_,
-      pref_service_->GetInteger(
-          prefs::kAutofillAcceptSaveCreditCardPromptState),
-      GetSecurityLevel(), GetSyncState());
 
-  if (base::FeatureList::IsEnabled(
-          features::kAutofillEnableFixedPaymentsBubbleLogging)) {
-    AutofillMetrics::LogCreditCardUploadLegalMessageLinkClicked();
-  }
 }
 
 void SaveCardBubbleControllerImpl::OnManageCardsClicked() {
   DCHECK(current_bubble_type_ == BubbleType::MANAGE_CARDS);
 
-  AutofillMetrics::LogManageCardsPromptMetric(
-      AutofillMetrics::MANAGE_CARDS_MANAGE_CARDS, is_upload_save_);
-
   ShowPaymentsSettingsPage();
 }
 
@@ -486,45 +435,6 @@ void SaveCardBubbleControllerImpl::OnBubbleClosed(
     PaymentsBubbleClosedReason closed_reason) {
   save_card_bubble_view_ = nullptr;
 
-  // Log save card prompt result according to the closed reason.
-  if (base::FeatureList::IsEnabled(
-          features::kAutofillEnableFixedPaymentsBubbleLogging) &&
-      (current_bubble_type_ == BubbleType::LOCAL_SAVE ||
-       current_bubble_type_ == BubbleType::UPLOAD_SAVE)) {
-    AutofillMetrics::SaveCardPromptResultMetric metric;
-    switch (closed_reason) {
-      case PaymentsBubbleClosedReason::kAccepted:
-        metric = AutofillMetrics::SAVE_CARD_PROMPT_ACCEPTED;
-        pref_service_->SetInteger(
-            prefs::kAutofillAcceptSaveCreditCardPromptState,
-            prefs::PREVIOUS_SAVE_CREDIT_CARD_PROMPT_USER_DECISION_ACCEPTED);
-        break;
-      case PaymentsBubbleClosedReason::kCancelled:
-        metric = AutofillMetrics::SAVE_CARD_PROMPT_CANCELLED;
-        pref_service_->SetInteger(
-            prefs::kAutofillAcceptSaveCreditCardPromptState,
-            prefs::PREVIOUS_SAVE_CREDIT_CARD_PROMPT_USER_DECISION_DENIED);
-        break;
-      case PaymentsBubbleClosedReason::kClosed:
-        metric = AutofillMetrics::SAVE_CARD_PROMPT_CLOSED;
-        break;
-      case PaymentsBubbleClosedReason::kNotInteracted:
-        metric = AutofillMetrics::SAVE_CARD_PROMPT_NOT_INTERACTED;
-        break;
-      case PaymentsBubbleClosedReason::kLostFocus:
-        metric = AutofillMetrics::SAVE_CARD_PROMPT_LOST_FOCUS;
-        break;
-      case PaymentsBubbleClosedReason::kUnknown:
-        NOTREACHED();
-        return;
-    }
-    AutofillMetrics::LogSaveCardPromptResultMetric(
-        metric, is_upload_save_, is_reshow_, options_,
-        pref_service_->GetInteger(
-            prefs::kAutofillAcceptSaveCreditCardPromptState),
-        GetSecurityLevel(), GetSyncState());
-  }
-
   // Handles |current_bubble_type_| change according to its current type and the
   // |closed_reason|.
   if (closed_reason == PaymentsBubbleClosedReason::kAccepted) {
@@ -537,14 +447,6 @@ void SaveCardBubbleControllerImpl::OnBubbleClosed(
       if (base::FeatureList::IsEnabled(
               features::kAutofillCreditCardUploadFeedback)) {
         current_bubble_type_ = BubbleType::UPLOAD_IN_PROGRESS;
-
-        // Log this metric here since for each bubble, the bubble state will
-        // only be changed to UPLOAD_IN_PROGRESS once.
-        // SavePaymentIconView::Update is not guaranteed to be called only once
-        // so logging in any functions related to it is not reliable.
-        AutofillMetrics::LogCreditCardUploadFeedbackMetric(
-            AutofillMetrics::
-                CREDIT_CARD_UPLOAD_FEEDBACK_LOADING_ANIMATION_SHOWN);
       } else {
         current_bubble_type_ = BubbleType::INACTIVE;
       }
@@ -689,14 +591,6 @@ void SaveCardBubbleControllerImpl::DidFinishNavigation(
 
   if (current_bubble_type_ == BubbleType::LOCAL_SAVE ||
       current_bubble_type_ == BubbleType::UPLOAD_SAVE) {
-    AutofillMetrics::LogSaveCardPromptMetric(
-        bubble_was_visible
-            ? AutofillMetrics::SAVE_CARD_PROMPT_END_NAVIGATION_SHOWING
-            : AutofillMetrics::SAVE_CARD_PROMPT_END_NAVIGATION_HIDDEN,
-        is_upload_save_, is_reshow_, options_,
-        pref_service_->GetInteger(
-            prefs::kAutofillAcceptSaveCreditCardPromptState),
-        GetSecurityLevel(), GetSyncState());
 
     if (current_bubble_type_ == BubbleType::LOCAL_SAVE) {
       DCHECK(!local_save_card_prompt_callback_.is_null());
@@ -785,31 +679,12 @@ void SaveCardBubbleControllerImpl::ShowBubble() {
   switch (current_bubble_type_) {
     case BubbleType::UPLOAD_SAVE:
     case BubbleType::LOCAL_SAVE:
-      AutofillMetrics::LogSaveCardPromptMetric(
-          AutofillMetrics::SAVE_CARD_PROMPT_SHOWN_DEPRECATED, is_upload_save_,
-          is_reshow_, options_,
-          pref_service_->GetInteger(
-              prefs::kAutofillAcceptSaveCreditCardPromptState),
-          GetSecurityLevel(), GetSyncState());
-      if (base::FeatureList::IsEnabled(
-              features::kAutofillEnableFixedPaymentsBubbleLogging)) {
-        AutofillMetrics::LogSaveCardPromptOfferMetric(
-            AutofillMetrics::SAVE_CARD_PROMPT_SHOWN, is_upload_save_,
-            is_reshow_, options_,
-            pref_service_->GetInteger(
-                prefs::kAutofillAcceptSaveCreditCardPromptState),
-            GetSecurityLevel(), GetSyncState());
-      }
       break;
     case BubbleType::MANAGE_CARDS:
-      AutofillMetrics::LogManageCardsPromptMetric(
-          AutofillMetrics::MANAGE_CARDS_SHOWN, is_upload_save_);
       break;
     case BubbleType::SIGN_IN_PROMO:
       break;
     case BubbleType::FAILURE:
-      AutofillMetrics::LogCreditCardUploadFeedbackMetric(
-          AutofillMetrics::CREDIT_CARD_UPLOAD_FEEDBACK_FAILURE_BUBBLE_SHOWN);
       break;
     case BubbleType::UPLOAD_IN_PROGRESS:
     case BubbleType::INACTIVE:
@@ -840,25 +715,11 @@ void SaveCardBubbleControllerImpl::ShowIconOnly() {
   switch (current_bubble_type_) {
     case BubbleType::UPLOAD_SAVE:
     case BubbleType::LOCAL_SAVE:
-      AutofillMetrics::LogSaveCardPromptMetric(
-          AutofillMetrics::SAVE_CARD_ICON_SHOWN_WITHOUT_PROMPT, is_upload_save_,
-          is_reshow_, options_,
-          pref_service_->GetInteger(
-              prefs::kAutofillAcceptSaveCreditCardPromptState),
-          GetSecurityLevel(), GetSyncState());
       if (base::FeatureList::IsEnabled(
               features::kAutofillEnableFixedPaymentsBubbleLogging)) {
-        AutofillMetrics::LogSaveCardPromptOfferMetric(
-            AutofillMetrics::SAVE_CARD_PROMPT_NOT_SHOWN_MAX_STRIKES_REACHED,
-            is_upload_save_, is_reshow_, options_,
-            pref_service_->GetInteger(
-                prefs::kAutofillAcceptSaveCreditCardPromptState),
-            GetSecurityLevel(), GetSyncState());
       }
       break;
     case BubbleType::FAILURE:
-      AutofillMetrics::LogCreditCardUploadFeedbackMetric(
-          AutofillMetrics::CREDIT_CARD_UPLOAD_FEEDBACK_FAILURE_ICON_SHOWN);
       break;
     case BubbleType::UPLOAD_IN_PROGRESS:
     case BubbleType::MANAGE_CARDS:
