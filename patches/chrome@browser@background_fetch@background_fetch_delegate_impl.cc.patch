diff --git a/chrome/browser/background_fetch/background_fetch_delegate_impl.cc b/chrome/browser/background_fetch/background_fetch_delegate_impl.cc
index 40ca2cbbe05a..93816b6fcbea 100644
--- a/chrome/browser/background_fetch/background_fetch_delegate_impl.cc
+++ b/chrome/browser/background_fetch/background_fetch_delegate_impl.cc
@@ -20,7 +20,6 @@
 #include "chrome/browser/content_settings/host_content_settings_map_factory.h"
 #include "chrome/browser/download/download_request_limiter.h"
 #include "chrome/browser/download/download_service_factory.h"
-#include "chrome/browser/metrics/ukm_background_recorder_service.h"
 #include "chrome/browser/offline_items_collection/offline_content_aggregator_factory.h"
 #include "chrome/browser/profiles/profile.h"
 #include "chrome/browser/profiles/profile_key.h"
@@ -37,8 +36,6 @@
 #include "content/public/browser/web_contents.h"
 #include "mojo/public/cpp/bindings/pending_remote.h"
 #include "mojo/public/cpp/bindings/remote.h"
-#include "services/metrics/public/cpp/ukm_builders.h"
-#include "services/metrics/public/cpp/ukm_recorder.h"
 #include "services/network/public/mojom/data_pipe_getter.mojom.h"
 #include "third_party/blink/public/mojom/background_fetch/background_fetch.mojom.h"
 #include "third_party/skia/include/core/SkBitmap.h"
@@ -404,30 +401,6 @@ void BackgroundFetchDelegateImpl::Abort(const std::string& job_unique_id) {
   UpdateOfflineItemAndUpdateObservers(&job_details);
 }
 
-void BackgroundFetchDelegateImpl::
-    RecordBackgroundFetchDeletingRegistrationUkmEvent(
-        const url::Origin& origin,
-        bool user_initiated_abort) {
-  auto* ukm_background_service =
-      ukm::UkmBackgroundRecorderFactory::GetForProfile(profile_);
-  ukm_background_service->GetBackgroundSourceIdIfAllowed(
-      origin,
-      base::BindOnce(&BackgroundFetchDelegateImpl::DidGetBackgroundSourceId,
-                     weak_ptr_factory_.GetWeakPtr(), user_initiated_abort));
-}
-
-void BackgroundFetchDelegateImpl::DidGetBackgroundSourceId(
-    bool user_initiated_abort,
-    base::Optional<ukm::SourceId> source_id) {
-  // This background event did not meet the requirements for the UKM service.
-  if (!source_id)
-    return;
-
-  ukm::builders::BackgroundFetchDeletingRegistration(*source_id)
-      .SetUserInitiatedAbort(user_initiated_abort)
-      .Record(ukm::UkmRecorder::Get());
-}
-
 void BackgroundFetchDelegateImpl::MarkJobComplete(
     const std::string& job_unique_id) {
   auto job_details_iter = job_details_map_.find(job_unique_id);
@@ -436,9 +409,6 @@ void BackgroundFetchDelegateImpl::MarkJobComplete(
   JobDetails& job_details = job_details_iter->second;
   job_details.job_state = JobDetails::State::kJobComplete;
 
-  RecordBackgroundFetchDeletingRegistrationUkmEvent(
-      job_details.fetch_description->origin, job_details.cancelled_from_ui);
-
   // Clear the |job_details| internals that are no longer needed.
   job_details.current_fetch_guids.clear();
   job_details.fetch_description.reset();
