diff --git a/chrome/browser/ui/webui/new_tab_page/new_tab_page_handler.cc b/chrome/browser/ui/webui/new_tab_page/new_tab_page_handler.cc
index f030459f5012..bdfcf3dcefd8 100644
--- a/chrome/browser/ui/webui/new_tab_page/new_tab_page_handler.cc
+++ b/chrome/browser/ui/webui/new_tab_page/new_tab_page_handler.cc
@@ -37,7 +37,6 @@
 #include "chrome/browser/search/chrome_colors/chrome_colors_service.h"
 #include "chrome/browser/search/instant_service.h"
 #include "chrome/browser/search/one_google_bar/one_google_bar_service_factory.h"
-#include "chrome/browser/search/promos/promo_service_factory.h"
 #include "chrome/browser/search_engines/template_url_service_factory.h"
 #include "chrome/browser/search_provider_logos/logo_service_factory.h"
 #include "chrome/browser/ui/bookmarks/bookmark_stats.h"
@@ -291,6 +290,7 @@ new_tab_page::mojom::ImageDoodlePtr MakeImageDoodle(
   return doodle;
 }
 
+#if 0
 new_tab_page::mojom::PromoPtr MakePromo(const PromoData& data) {
   // |data.middle_slot_json| is safe to be decoded here. The JSON string is part
   // of a larger JSON initially decoded using the data decoder utility in the
@@ -360,6 +360,7 @@ new_tab_page::mojom::PromoPtr MakePromo(const PromoData& data) {
   promo->log_url = data.promo_log_url;
   return promo;
 }
+#endif
 
 }  // namespace
 
@@ -392,14 +393,12 @@ NewTabPageHandler::NewTabPageHandler(
       web_contents_(web_contents),
       ntp_navigation_start_time_(ntp_navigation_start_time),
       logger_(logger),
-      promo_service_(PromoServiceFactory::GetForProfile(profile)),
       page_{std::move(pending_page)},
       receiver_{this, std::move(pending_page_handler)} {
   CHECK(instant_service_);
   CHECK(ntp_background_service_);
   CHECK(logo_service_);
   CHECK(one_google_bar_service_);
-  CHECK(promo_service_);
   CHECK(web_contents_);
   CHECK(logger_);
   instant_service_->AddObserver(this);
@@ -407,7 +406,6 @@ NewTabPageHandler::NewTabPageHandler(
   instant_service_->UpdateNtpTheme();
   OmniboxTabHelper::CreateForWebContents(web_contents);
   OmniboxTabHelper::FromWebContents(web_contents_)->AddObserver(this);
-  promo_service_observer_.Add(promo_service_);
   one_google_bar_service_observer_.Add(one_google_bar_service_);
 }
 
@@ -688,6 +686,7 @@ void NewTabPageHandler::GetOneGoogleBarParts(
 }
 
 void NewTabPageHandler::GetPromo(GetPromoCallback callback) {
+#if 0
   // Replace the promo URL with "command:<id>" if such a command ID is set
   // via the feature params.
   const std::string command_id = base::GetFieldTrialParamValueByFeature(
@@ -720,9 +719,11 @@ void NewTabPageHandler::GetPromo(GetPromoCallback callback) {
   }
   promo_load_start_time_ = base::TimeTicks::Now();
   promo_service_->Refresh();
+#endif
 }
 
 void NewTabPageHandler::OnPromoDataUpdated() {
+#if 0
   if (promo_load_start_time_.has_value()) {
     base::TimeDelta duration = base::TimeTicks::Now() - *promo_load_start_time_;
     UMA_HISTOGRAM_MEDIUM_TIMES("NewTabPage.Promos.RequestLatency2", duration);
@@ -753,11 +754,10 @@ void NewTabPageHandler::OnPromoDataUpdated() {
     }
   }
   promo_callbacks_.clear();
+#endif
 }
 
 void NewTabPageHandler::OnPromoServiceShuttingDown() {
-  promo_service_observer_.RemoveAll();
-  promo_service_ = nullptr;
 }
 
 void NewTabPageHandler::OnMostVisitedTilesRendered(
