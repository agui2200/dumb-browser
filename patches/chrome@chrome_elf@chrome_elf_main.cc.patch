diff --git a/chrome/chrome_elf/chrome_elf_main.cc b/chrome/chrome_elf/chrome_elf_main.cc
index f1ca45aa2459..4d90683b558c 100644
--- a/chrome/chrome_elf/chrome_elf_main.cc
+++ b/chrome/chrome_elf/chrome_elf_main.cc
@@ -7,7 +7,6 @@
 #include <assert.h>
 #include <windows.h>
 
-#include "chrome/chrome_elf/crash/crash_helper.h"
 #include "chrome/chrome_elf/third_party_dlls/beacon.h"
 #include "chrome/chrome_elf/third_party_dlls/main.h"
 #include "chrome/install_static/install_details.h"
@@ -15,18 +14,6 @@
 #include "chrome/install_static/product_install_details.h"
 #include "chrome/install_static/user_data_dir.h"
 
-// This function is exported from the DLL so that it can be called by WinMain
-// after startup has completed in the browser process. For non-browser processes
-// it will be called inside the DLL loader lock so it should do as little as
-// possible to prevent deadlocks.
-void SignalInitializeCrashReporting() {
-  if (!elf_crash::InitializeCrashReporting()) {
-#ifdef _DEBUG
-    assert(false);
-#endif  // _DEBUG
-  }
-}
-
 void SignalChromeElf() {
   third_party_dlls::ResetBeacon();
 }
@@ -68,25 +55,15 @@ BOOL APIENTRY DllMain(HMODULE module, DWORD reason, LPVOID reserved) {
         // the safety beacon succeeds.
         if (third_party_dlls::LeaveSetupBeacon())
           third_party_dlls::Init();
-      } __except (elf_crash::GenerateCrashDump(GetExceptionInformation())) {
+      } __except (EXCEPTION_CONTINUE_SEARCH) {
       }
-    } else if (!install_static::IsCrashpadHandlerProcess()) {
-      SignalInitializeCrashReporting();
-      // CRT on initialization installs an exception filter which calls
-      // TerminateProcess. We need to hook CRT's attempt to set an exception.
-      elf_crash::DisableSetUnhandledExceptionFilter();
     }
-
-  } else if (reason == DLL_PROCESS_DETACH) {
-    elf_crash::ShutdownCrashReporting();
   }
   return TRUE;
 }
 
 void DumpProcessWithoutCrash() {
-  elf_crash::DumpWithoutCrashing();
 }
 
 void SetMetricsClientId(const char* client_id) {
-  elf_crash::SetMetricsClientIdImpl(client_id);
 }
