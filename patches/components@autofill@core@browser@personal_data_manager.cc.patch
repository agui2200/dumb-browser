diff --git a/components/autofill/core/browser/personal_data_manager.cc b/components/autofill/core/browser/personal_data_manager.cc
index 0a6960bbd434..e78975ad4ea0 100644
--- a/components/autofill/core/browser/personal_data_manager.cc
+++ b/components/autofill/core/browser/personal_data_manager.cc
@@ -30,7 +30,6 @@
 #include "components/autofill/core/browser/autofill_download_manager.h"
 #include "components/autofill/core/browser/autofill_experiments.h"
 #include "components/autofill/core/browser/autofill_field.h"
-#include "components/autofill/core/browser/autofill_metrics.h"
 #include "components/autofill/core/browser/data_model/autofill_profile_comparator.h"
 #include "components/autofill/core/browser/data_model/phone_number.h"
 #include "components/autofill/core/browser/form_structure.h"
@@ -303,14 +302,6 @@ void PersonalDataManager::Init(
 
   is_off_the_record_ = is_off_the_record;
 
-  if (!is_off_the_record_) {
-    AutofillMetrics::LogIsAutofillEnabledAtStartup(IsAutofillEnabled());
-    AutofillMetrics::LogIsAutofillProfileEnabledAtStartup(
-        IsAutofillProfileEnabled());
-    AutofillMetrics::LogIsAutofillCreditCardEnabledAtStartup(
-        IsAutofillCreditCardEnabled());
-  }
-
   client_profile_validator_ = client_profile_validator;
 
   // WebDataService may not be available in tests.
@@ -1279,11 +1270,6 @@ std::vector<Suggestion> PersonalDataManager::GetProfileSuggestions(
                                           app_locale_, &labels);
   }
 
-  if (use_formatter && !unique_suggestions.empty()) {
-    AutofillMetrics::LogProfileSuggestionsMadeWithFormatter(formatter !=
-                                                            nullptr);
-  }
-
   suggestion_selection::PrepareSuggestions(labels, &unique_suggestions,
                                            comparator);
 
@@ -1333,7 +1319,6 @@ void PersonalDataManager::RemoveExpiredCreditCardsNotUsedSinceTimestamp(
     base::Time comparison_time,
     base::Time min_last_used,
     std::vector<CreditCard*>* cards) {
-  const size_t original_size = cards->size();
   // Split the vector into [unexpired-or-expired-but-after-timestamp,
   // expired-and-before-timestamp], then delete the latter.
   cards->erase(std::stable_partition(
@@ -1343,9 +1328,6 @@ void PersonalDataManager::RemoveExpiredCreditCardsNotUsedSinceTimestamp(
                             c->use_date() > min_last_used;
                    }),
                cards->end());
-  const size_t num_cards_supressed = original_size - cards->size();
-  AutofillMetrics::LogNumberOfCreditCardsSuppressedForDisuse(
-      num_cards_supressed);
 }
 
 std::vector<Suggestion> PersonalDataManager::GetCreditCardSuggestions(
@@ -1831,9 +1813,6 @@ std::string PersonalDataManager::SaveImportedCreditCard(
 
 void PersonalDataManager::LogStoredProfileMetrics() const {
   if (!has_logged_stored_profile_metrics_) {
-    // Update the histogram of how many addresses the user has stored.
-    AutofillMetrics::LogStoredProfileCount(web_profiles_.size());
-
     // If the user has stored addresses, log the distribution of days since
     // their last use and how many would be considered disused.
     if (!web_profiles_.empty()) {
@@ -1841,12 +1820,9 @@ void PersonalDataManager::LogStoredProfileMetrics() const {
       const base::Time now = AutofillClock::Now();
       for (const std::unique_ptr<AutofillProfile>& profile : web_profiles_) {
         const base::TimeDelta time_since_last_use = now - profile->use_date();
-        AutofillMetrics::LogStoredProfileDaysSinceLastUse(
-            time_since_last_use.InDays());
         if (time_since_last_use > kDisusedDataModelTimeDelta)
           ++num_disused_profiles;
       }
-      AutofillMetrics::LogStoredProfileDisusedCount(num_disused_profiles);
     }
 
     // Only log this info once per chrome user profile load.
@@ -1856,9 +1832,6 @@ void PersonalDataManager::LogStoredProfileMetrics() const {
 
 void PersonalDataManager::LogStoredCreditCardMetrics() const {
   if (!has_logged_stored_credit_card_metrics_) {
-    AutofillMetrics::LogStoredCreditCardMetrics(
-        local_credit_cards_, server_credit_cards_, kDisusedDataModelTimeDelta);
-
     // Only log this info once per chrome user profile load.
     has_logged_stored_credit_card_metrics_ = true;
   }
@@ -1866,7 +1839,6 @@ void PersonalDataManager::LogStoredCreditCardMetrics() const {
 
 void PersonalDataManager::LogStoredOfferMetrics() const {
   if (!has_logged_stored_offer_metrics_) {
-    AutofillMetrics::LogStoredOfferMetrics(autofill_offer_data_);
     // Only log this info once per chrome user profile load.
     has_logged_stored_offer_metrics_ = true;
   }
@@ -1978,8 +1950,6 @@ bool PersonalDataManager::ShouldShowCardsFromAccountOption() const {
   bool is_opted_in = prefs::IsUserOptedInWalletSyncTransport(
       pref_service_, sync_service_->GetAuthenticatedAccountInfo().account_id);
 
-  AutofillMetrics::LogWalletSyncTransportCardsOptIn(is_opted_in);
-
   // The option should only be shown if the user has not already opted-in.
   return !is_opted_in;
 #else
@@ -2038,10 +2008,6 @@ void PersonalDataManager::OnAutofillProfileChanged(
   OnProfileChangeDone(guid);
 }
 
-void PersonalDataManager::LogServerCardLinkClicked() const {
-  AutofillMetrics::LogServerCardLinkClicked(GetSyncSigninState());
-}
-
 void PersonalDataManager::OnUserAcceptedUpstreamOffer() {
   // If the user is in sync transport mode for Wallet, record an opt-in.
   if (GetSyncSigninState() ==
@@ -2242,8 +2208,6 @@ void PersonalDataManager::DedupeProfiles(
     std::vector<std::unique_ptr<AutofillProfile>>* existing_profiles,
     std::unordered_set<std::string>* profiles_to_delete,
     std::unordered_map<std::string, std::string>* guids_merge_map) const {
-  AutofillMetrics::LogNumberOfProfilesConsideredForDedupe(
-      existing_profiles->size());
 
   // Sort the profiles by frecency with all the verified profiles at the end.
   // That way the most relevant profiles will get merged into the less relevant
@@ -2315,8 +2279,6 @@ void PersonalDataManager::DedupeProfiles(
       }
     }
   }
-  AutofillMetrics::LogNumberOfProfilesRemovedDuringDedupe(
-      profiles_to_delete->size());
 }
 
 void PersonalDataManager::UpdateCardsBillingAddressReference(
@@ -2410,8 +2372,6 @@ bool PersonalDataManager::DeleteDisusedCreditCards() {
     Refresh();
   }
 
-  AutofillMetrics::LogNumberOfCreditCardsDeletedForDisuse(num_deleted_cards);
-
   return true;
 }
 
@@ -2449,8 +2409,6 @@ bool PersonalDataManager::DeleteDisusedAddresses() {
     Refresh();
   }
 
-  AutofillMetrics::LogNumberOfAddressesDeletedForDisuse(num_deleted_addresses);
-
   return true;
 }
 
