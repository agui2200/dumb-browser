diff --git a/third_party/blink/renderer/core/intersection_observer/intersection_observer_controller.cc b/third_party/blink/renderer/core/intersection_observer/intersection_observer_controller.cc
index eebd60c431dc6..a03b6d27025a9 100644
--- a/third_party/blink/renderer/core/intersection_observer/intersection_observer_controller.cc
+++ b/third_party/blink/renderer/core/intersection_observer/intersection_observer_controller.cc
@@ -61,8 +61,7 @@ void IntersectionObserverController::DeliverNotifications(
 }
 
 bool IntersectionObserverController::ComputeIntersections(
-    unsigned flags,
-    LocalFrameUkmAggregator& ukm_aggregator) {
+    unsigned flags) {
   needs_occlusion_tracking_ = false;
   if (GetExecutionContext()) {
     TRACE_EVENT0("blink,devtools.timeline",
@@ -72,7 +71,6 @@ bool IntersectionObserverController::ComputeIntersections(
     CopyToVector(tracked_explicit_root_observers_, observers_to_process);
     for (auto& observer : observers_to_process) {
       if (observer->HasObservations()) {
-        SCOPED_UMA_AND_UKM_TIMER(ukm_aggregator, observer->GetUkmMetricId());
         needs_occlusion_tracking_ |= observer->ComputeIntersections(flags);
       } else {
         tracked_explicit_root_observers_.erase(observer);
@@ -81,8 +79,6 @@ bool IntersectionObserverController::ComputeIntersections(
     HeapVector<Member<IntersectionObservation>> observations_to_process;
     CopyToVector(tracked_implicit_root_observations_, observations_to_process);
     for (auto& observation : observations_to_process) {
-      SCOPED_UMA_AND_UKM_TIMER(ukm_aggregator,
-                               observation->Observer()->GetUkmMetricId());
       observation->ComputeIntersection(flags);
       needs_occlusion_tracking_ |= observation->Observer()->trackVisibility();
     }
