diff --git a/extensions/browser/api/web_request/web_request_proxying_url_loader_factory.cc b/extensions/browser/api/web_request/web_request_proxying_url_loader_factory.cc
index dd980437c1b2..a83756e08d45 100644
--- a/extensions/browser/api/web_request/web_request_proxying_url_loader_factory.cc
+++ b/extensions/browser/api/web_request/web_request_proxying_url_loader_factory.cc
@@ -14,7 +14,6 @@
 #include "base/strings/stringprintf.h"
 #include "base/task/post_task.h"
 #include "components/keyed_service/content/browser_context_keyed_service_shutdown_notifier_factory.h"
-#include "components/ukm/content/source_url_recorder.h"
 #include "content/public/browser/browser_context.h"
 #include "content/public/browser/browser_task_traits.h"
 #include "content/public/browser/browser_thread.h"
@@ -32,9 +31,6 @@
 #include "net/http/http_util.h"
 #include "net/url_request/redirect_info.h"
 #include "net/url_request/redirect_util.h"
-#include "services/metrics/public/cpp/ukm_builders.h"
-#include "services/metrics/public/cpp/ukm_recorder.h"
-#include "services/metrics/public/cpp/ukm_source_id.h"
 #include "services/network/public/cpp/features.h"
 #include "third_party/blink/public/common/loader/throttling_url_loader.h"
 #include "third_party/blink/public/platform/resource_request_blocked_reason.h"
@@ -99,7 +95,6 @@ WebRequestProxyingURLLoaderFactory::InProgressRequest::InProgressRequest(
     int32_t network_service_request_id,
     int32_t routing_id,
     uint32_t options,
-    ukm::SourceId ukm_source_id,
     const network::ResourceRequest& request,
     const net::MutableNetworkTrafficAnnotationTag& traffic_annotation,
     mojo::PendingReceiver<network::mojom::URLLoader> loader_receiver,
@@ -111,7 +106,6 @@ WebRequestProxyingURLLoaderFactory::InProgressRequest::InProgressRequest(
       network_service_request_id_(network_service_request_id),
       routing_id_(routing_id),
       options_(options),
-      ukm_source_id_(ukm_source_id),
       traffic_annotation_(traffic_annotation),
       proxied_loader_receiver_(this, std::move(loader_receiver)),
       target_client_(std::move(client)),
@@ -139,7 +133,6 @@ WebRequestProxyingURLLoaderFactory::InProgressRequest::InProgressRequest(
       request_(request),
       original_initiator_(request.request_initiator),
       request_id_(request_id),
-      ukm_source_id_(ukm::kInvalidSourceId),
       proxied_loader_receiver_(this),
       for_cors_preflight_(true),
       has_any_extra_headers_listeners_(
@@ -151,13 +144,6 @@ WebRequestProxyingURLLoaderFactory::InProgressRequest::~InProgressRequest() {
   if (request_.keepalive && !for_cors_preflight_) {
     UMA_HISTOGRAM_ENUMERATION("Extensions.WebRequest.KeepaliveRequestState",
                               state_);
-    if (base::FeatureList::IsEnabled(
-            extensions_features::kReportKeepaliveUkm)) {
-      ukm::builders::Extensions_WebRequest_KeepaliveRequestFinished(
-          ukm_source_id_)
-          .SetState(state_)
-          .Record(ukm::UkmRecorder::Get());
-    }
   }
   // This is important to ensure that no outstanding blocking requests continue
   // to reference state owned by this object.
@@ -1091,7 +1077,6 @@ WebRequestProxyingURLLoaderFactory::WebRequestProxyingURLLoaderFactory(
     content::ContentBrowserClient::URLLoaderFactoryType loader_factory_type)
     : browser_context_(browser_context),
       render_process_id_(render_process_id),
-      frame_id_(frame_id),
       request_id_generator_(request_id_generator),
       navigation_ui_data_(std::move(navigation_ui_data)),
       navigation_id_(std::move(navigation_id)),
@@ -1154,19 +1139,6 @@ void WebRequestProxyingURLLoaderFactory::CreateLoaderAndStart(
     const net::MutableNetworkTrafficAnnotationTag& traffic_annotation) {
   DCHECK_CURRENTLY_ON(content::BrowserThread::UI);
 
-  if (!ukm_source_id_) {
-    auto* frame =
-        content::RenderFrameHost::FromID(render_process_id_, frame_id_);
-    using FactoryType = content::ContentBrowserClient::URLLoaderFactoryType;
-    if (loader_factory_type_ == FactoryType::kDocumentSubResource ||
-        loader_factory_type_ == FactoryType::kWorkerSubResource) {
-      ukm_source_id_ =
-          frame ? frame->GetPageUkmSourceId() : ukm::kInvalidSourceId;
-    } else {
-      ukm_source_id_ = ukm::kInvalidSourceId;
-    }
-  }
-
   // Make sure we are not proxying a browser initiated non-navigation
   // request except for loading service worker scripts.
   DCHECK(render_process_id_ != -1 || navigation_ui_data_ ||
@@ -1195,7 +1167,7 @@ void WebRequestProxyingURLLoaderFactory::CreateLoaderAndStart(
   auto result = requests_.emplace(
       web_request_id, std::make_unique<InProgressRequest>(
                           this, web_request_id, request_id, routing_id, options,
-                          *ukm_source_id_, request, traffic_annotation,
+                          request, traffic_annotation,
                           std::move(loader_receiver), std::move(client)));
   result.first->second->Restart();
 }
