diff --git a/chrome/browser/badging/badge_manager.cc b/chrome/browser/badging/badge_manager.cc
index efde619011b38..9ca428a8a3ef7 100644
--- a/chrome/browser/badging/badge_manager.cc
+++ b/chrome/browser/badging/badge_manager.cc
@@ -199,22 +199,8 @@ void BadgeManager::SetBadge(blink::mojom::BadgeValuePtr mojo_value) {
                          ? base::nullopt
                          : base::make_optional(mojo_value->get_number());
 
-  // ukm::SourceId source_id = ukm::UkmRecorder::GetNewSourceID();
-  ukm::UkmRecorder* recorder = ukm::UkmRecorder::Get();
   for (const auto& app : app_ids_and_urls) {
     GURL url = std::get<1>(app);
-    // The app's start_url is used to identify the app
-    // for recording badging usage per app.
-    ukm::SourceId source_id = ukm::AppSourceUrlRecorder::GetSourceIdForPWA(url);
-    if (value == base::nullopt) {
-      ukm::builders::Badging(source_id)
-          .SetUpdateAppBadge(kSetFlagBadge)
-          .Record(recorder);
-    } else {
-      ukm::builders::Badging(source_id)
-          .SetUpdateAppBadge(kSetNumericBadge)
-          .Record(recorder);
-    }
 
     UpdateBadge(/*app_id=*/std::get<0>(app), base::make_optional(value));
   }
@@ -224,15 +210,9 @@ void BadgeManager::ClearBadge() {
   const std::vector<std::tuple<web_app::AppId, GURL>> app_ids_and_urls =
       receivers_.current_context()->GetAppIdsAndUrlsForBadging();
 
-  ukm::UkmRecorder* recorder = ukm::UkmRecorder::Get();
   for (const auto& app : app_ids_and_urls) {
     // The app's start_url is used to identify the app
     // for recording badging usage per app.
-    GURL url = std::get<1>(app);
-    ukm::SourceId source_id = ukm::AppSourceUrlRecorder::GetSourceIdForPWA(url);
-    ukm::builders::Badging(source_id)
-        .SetUpdateAppBadge(kClearBadge)
-        .Record(recorder);
     UpdateBadge(/*app_id=*/std::get<0>(app), base::nullopt);
   }
 }
