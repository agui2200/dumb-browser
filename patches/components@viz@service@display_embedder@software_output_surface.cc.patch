diff --git a/components/viz/service/display_embedder/software_output_surface.cc b/components/viz/service/display_embedder/software_output_surface.cc
index a00ed94229e4..d763f695a4f9 100644
--- a/components/viz/service/display_embedder/software_output_surface.cc
+++ b/components/viz/service/display_embedder/software_output_surface.cc
@@ -18,7 +18,6 @@
 #include "ui/gfx/presentation_feedback.h"
 #include "ui/gfx/swap_result.h"
 #include "ui/gfx/vsync_provider.h"
-#include "ui/latency/latency_info.h"
 
 namespace viz {
 
@@ -60,14 +59,6 @@ void SoftwareOutputSurface::Reshape(const gfx::Size& size,
 void SoftwareOutputSurface::SwapBuffers(OutputSurfaceFrame frame) {
   DCHECK(client_);
   base::TimeTicks swap_time = base::TimeTicks::Now();
-  for (auto& latency : frame.latency_info) {
-    latency.AddLatencyNumberWithTimestamp(
-        ui::INPUT_EVENT_GPU_SWAP_BUFFER_COMPONENT, swap_time);
-    latency.AddLatencyNumberWithTimestamp(
-        ui::INPUT_EVENT_LATENCY_FRAME_SWAP_COMPONENT, swap_time);
-  }
-
-  stored_latency_info_.emplace(std::move(frame.latency_info));
 
   software_device()->OnSwapBuffers(
       base::BindOnce(&SoftwareOutputSurface::SwapBuffersCallback,
@@ -103,12 +94,6 @@ uint32_t SoftwareOutputSurface::GetFramebufferCopyTextureFormat() {
 
 void SoftwareOutputSurface::SwapBuffersCallback(base::TimeTicks swap_time,
                                                 const gfx::Size& pixel_size) {
-  auto& latency_info = stored_latency_info_.front();
-  latency_tracker_.OnGpuSwapBuffersCompleted(latency_info);
-  std::vector<ui::LatencyInfo>().swap(latency_info);
-  client_->DidReceiveSwapBuffersAck({swap_time, swap_time});
-  stored_latency_info_.pop();
-
   base::TimeTicks now = base::TimeTicks::Now();
   base::TimeDelta interval_to_next_refresh =
       now.SnappedToNextTick(refresh_timebase_, refresh_interval_) - now;
