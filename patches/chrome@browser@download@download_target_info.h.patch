diff --git a/chrome/browser/download/download_target_info.h b/chrome/browser/download/download_target_info.h
index 87a5cf3b8de4..becc7f505a51 100644
--- a/chrome/browser/download/download_target_info.h
+++ b/chrome/browser/download/download_target_info.h
@@ -13,7 +13,6 @@
 #include "components/download/public/common/download_interrupt_reasons.h"
 #include "components/download/public/common/download_item.h"
 #include "components/download/public/common/download_schedule.h"
-#include "components/safe_browsing/core/proto/download_file_types.pb.h"
 
 struct DownloadTargetInfo {
   DownloadTargetInfo();
@@ -34,32 +33,6 @@ struct DownloadTargetInfo {
   // Danger type of the download.
   download::DownloadDangerType danger_type;
 
-  // The danger type of the download could be set to MAYBE_DANGEROUS_CONTENT if
-  // the file type is handled by SafeBrowsing. However, if the SafeBrowsing
-  // service is unable to verify whether the file is safe or not, we are on our
-  // own. The value of |danger_level| indicates whether the download should be
-  // considered dangerous if SafeBrowsing returns an unknown verdict.
-  //
-  // Note that some downloads (e.g. "Save link as" on a link to a binary) would
-  // not be considered 'Dangerous' even if SafeBrowsing came back with an
-  // unknown verdict. So we can't always show a warning when SafeBrowsing fails.
-  //
-  // The value of |danger_level| should be interpreted as follows:
-  //
-  //   NOT_DANGEROUS : Unless flagged by SafeBrowsing, the file should be
-  //       considered safe.
-  //
-  //   ALLOW_ON_USER_GESTURE : If SafeBrowsing claims the file is safe, then the
-  //       file is safe. An UNKOWN verdict results in the file being marked as
-  //       DANGEROUS_FILE.
-  //
-  //   DANGEROUS : This type of file shouldn't be allowed to download witout any
-  //       user action. Hence, if SafeBrowsing marks the file as SAFE, or
-  //       UNKONWN, the file will still be conisdered a DANGEROUS_FILE. However,
-  //       SafeBrowsing may flag the file as being malicious, in which case the
-  //       malicious classification should take precedence.
-  safe_browsing::DownloadFileType::DangerLevel danger_level;
-
   // Suggested intermediate path. The downloaded bytes should be written to this
   // path until all the bytes are available and the user has accepted a
   // dangerous download. At that point, the download can be renamed to
