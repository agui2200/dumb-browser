diff --git a/chrome/browser/tracing/background_tracing_field_trial.cc b/chrome/browser/tracing/background_tracing_field_trial.cc
index 31a72d5d4647..599be5547105 100644
--- a/chrome/browser/tracing/background_tracing_field_trial.cc
+++ b/chrome/browser/tracing/background_tracing_field_trial.cc
@@ -16,7 +16,6 @@
 #include "base/trace_event/trace_log.h"
 #include "build/build_config.h"
 #include "chrome/browser/browser_process.h"
-#include "chrome/browser/tracing/crash_service_uploader.h"
 #include "chrome/common/chrome_switches.h"
 #include "components/tracing/common/tracing_switches.h"
 #include "content/public/browser/background_tracing_config.h"
@@ -33,42 +32,10 @@ namespace {
 
 const char kBackgroundTracingFieldTrial[] = "BackgroundTracing";
 
-void OnBackgroundTracingUploadComplete(
-    TraceCrashServiceUploader* uploader,
-    content::BackgroundTracingManager::FinishedProcessingCallback done_callback,
-    bool success,
-    const std::string& feedback) {
-  DCHECK_CURRENTLY_ON(content::BrowserThread::UI);
-  std::move(done_callback).Run(success);
-}
-
 void BackgroundTracingUploadCallback(
     const std::string& upload_url,
     std::unique_ptr<std::string> file_contents,
     content::BackgroundTracingManager::FinishedProcessingCallback callback) {
-  TraceCrashServiceUploader* uploader = new TraceCrashServiceUploader(
-      g_browser_process->shared_url_loader_factory());
-
-  if (GURL(upload_url).is_valid())
-    uploader->SetUploadURL(upload_url);
-
-#if defined(OS_ANDROID)
-  auto connection_type = net::NetworkChangeNotifier::GetConnectionType();
-  if (connection_type != net::NetworkChangeNotifier::CONNECTION_WIFI &&
-      connection_type != net::NetworkChangeNotifier::CONNECTION_ETHERNET &&
-      connection_type != net::NetworkChangeNotifier::CONNECTION_BLUETOOTH) {
-    // Allow only 100KiB for uploads over data.
-    uploader->SetMaxUploadBytes(100 * 1024);
-  }
-#endif
-  std::unique_ptr<base::DictionaryValue> metadata =
-      TraceEventMetadataSource::GetInstance()->GenerateLegacyMetadataDict();
-
-  uploader->DoUpload(
-      *file_contents, content::TraceUploader::UNCOMPRESSED_UPLOAD,
-      std::move(metadata), content::TraceUploader::UploadProgressCallback(),
-      base::BindOnce(&OnBackgroundTracingUploadComplete, base::Owned(uploader),
-                     std::move(callback)));
 }
 
 void SetupBackgroundTracingFromConfigFile(const base::FilePath& config_file,
