diff --git a/chrome/browser/download/download_target_determiner.h b/chrome/browser/download/download_target_determiner.h
index a0e623c70da3f..b39d4d3fed831 100644
--- a/chrome/browser/download/download_target_determiner.h
+++ b/chrome/browser/download/download_target_determiner.h
@@ -19,7 +19,6 @@
 #include "components/download/public/common/download_danger_type.h"
 #include "components/download/public/common/download_item.h"
 #include "components/download/public/common/download_path_reservation_tracker.h"
-#include "components/safe_browsing/core/proto/download_file_types.pb.h"
 #include "content/public/browser/download_manager_delegate.h"
 #include "ppapi/buildflags/buildflags.h"
 
@@ -316,16 +315,6 @@ class DownloadTargetDeterminer : public download::DownloadItem::Observer {
   // operation.
   bool HasPromptedForPath() const;
 
-  // Returns true if this download should show the "dangerous file" warning.
-  // Various factors are considered, such as the type of the file, whether a
-  // user action initiated the download, and whether the user has explicitly
-  // marked the file type as "auto open". Protected virtual for testing.
-  //
-  // If |require_explicit_consent| is non-null then the pointed bool will be set
-  // to true if the download requires explicit user consent.
-  safe_browsing::DownloadFileType::DangerLevel GetDangerLevel(
-      PriorVisitsToReferrer visits) const;
-
   // Generates the download file name based on information from URL, response
   // headers and sniffed mime type.
   base::FilePath GenerateFileName() const;
@@ -341,7 +330,6 @@ class DownloadTargetDeterminer : public download::DownloadItem::Observer {
   download::DownloadPathReservationTracker::FilenameConflictAction
       conflict_action_;
   download::DownloadDangerType danger_type_;
-  safe_browsing::DownloadFileType::DangerLevel danger_level_;
   base::FilePath virtual_path_;
   base::FilePath local_path_;
   base::FilePath intermediate_path_;
