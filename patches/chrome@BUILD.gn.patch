diff --git a/chrome/BUILD.gn b/chrome/BUILD.gn
index e561fed130ff..8d4cee3a5aca 100644
--- a/chrome/BUILD.gn
+++ b/chrome/BUILD.gn
@@ -107,7 +107,7 @@ if (!is_android && !is_mac) {
     public_deps = [ ":chrome_initial" ]
     data_deps = [ ":chrome_initial" ]
     if (is_win) {
-      public_deps += [ ":reorder_imports" ]
+      public_deps += [ ":reorder_imports", "//dumb/build/win:copy_exe_and_pdb" ]
       data_deps += [ ":reorder_imports" ]
     }
     if (is_chromeos) {
@@ -163,8 +163,6 @@ if (!is_android && !is_mac) {
         "//chrome/installer/util:constants",
         "//chrome/installer/util:did_run_support",
         "//components/browser_watcher:browser_watcher_client",
-        "//components/crash/core/app:run_as_crashpad_handler",
-        "//components/crash/core/common",
         "//components/flags_ui:switches",
         "//content:sandbox_helper_win",
         "//content/public/common:static_switches",
@@ -173,7 +171,6 @@ if (!is_android && !is_mac) {
         "//sandbox/policy",
         "//third_party/breakpad:breakpad_handler",
         "//third_party/breakpad:breakpad_sender",
-        "//third_party/crashpad/crashpad/util",
       ]
       data_deps = [
         "//chrome/app/version_assembly:version_assembly_manifest",
@@ -323,7 +320,6 @@ if (is_win) {
       "//chrome/install_static:install_static_util",
       "//chrome/install_static:secondary_module",
       "//components/browser_watcher:stability_client",
-      "//components/crash/core/app",
       "//components/policy:generated",
       "//content/app/resources",
       "//content/public/common:service_names",
@@ -696,14 +692,12 @@ if (is_win) {
   bundle_data("chrome_framework_helpers") {
     sources = [
       "$root_out_dir/app_mode_loader",
-      "$root_out_dir/chrome_crashpad_handler",
     ]
 
     outputs = [ "{{bundle_contents_dir}}/Helpers/{{source_file_part}}" ]
 
     public_deps = [
       "//chrome/app_shim:app_mode_loader",
-      "//components/crash/core/app:chrome_crashpad_handler",
     ]
 
     foreach(helper_params, content_mac_helpers) {
@@ -935,7 +929,6 @@ if (is_win) {
       "//chrome/app:command_ids",
       "//chrome/common:buildflags",
       "//chrome/common/profiler",
-      "//components/crash/core/app",
       "//components/policy:generated",
       "//content/public/app",
       "//content/public/common:service_names",
@@ -1068,7 +1061,6 @@ if (is_win) {
     _chrome_symbols_sources = [
       "$root_out_dir/$chrome_product_full_name.app/Contents/MacOS/$chrome_product_full_name",
       "$root_out_dir/AlertNotificationService.xpc/Contents/MacOS/AlertNotificationService",
-      "$root_out_dir/chrome_crashpad_handler",
       "$root_out_dir/libswiftshader_libEGL.dylib",
       "$root_out_dir/libswiftshader_libGLESv2.dylib",
       _framework_binary_path,
@@ -1100,7 +1092,6 @@ if (is_win) {
         ":chrome_app",
         ":chrome_framework",
         "//chrome/browser/ui/cocoa/notifications:alert_notification_xpc_service",
-        "//components/crash/core/app:chrome_crashpad_handler",
         "//third_party/breakpad:dump_syms",
         "//third_party/swiftshader/src/OpenGL/libEGL:swiftshader_libEGL",
         "//third_party/swiftshader/src/OpenGL/libGLESv2:swiftshader_libGLESv2",
@@ -1122,7 +1113,6 @@ if (is_win) {
         "$root_out_dir/AlertNotificationService.dSYM",
         "$root_out_dir/$chrome_framework_name.dSYM",
         "$root_out_dir/$chrome_product_full_name.dSYM",
-        "$root_out_dir/chrome_crashpad_handler.dSYM",
         "$root_out_dir/libswiftshader_libEGL.dylib.dSYM",
         "$root_out_dir/libswiftshader_libGLESv2.dylib.dSYM",
       ]
@@ -1131,7 +1121,6 @@ if (is_win) {
         ":chrome_app",
         ":chrome_framework",
         "//chrome/browser/ui/cocoa/notifications:alert_notification_xpc_service",
-        "//components/crash/core/app:chrome_crashpad_handler",
         "//third_party/swiftshader/src/OpenGL/libEGL:swiftshader_libEGL",
         "//third_party/swiftshader/src/OpenGL/libGLESv2:swiftshader_libGLESv2",
       ]
@@ -1241,7 +1230,7 @@ group("child_dependencies") {
 
 if (is_win) {
   process_version_rc_template("chrome_exe_version") {
-    sources = [ "app/chrome_exe.ver" ]
+    sources = [ "app/dumb_exe.ver" ]
     output = "$target_gen_dir/chrome_exe_version.rc"
   }
 
@@ -1502,7 +1491,6 @@ if (is_android) {
       "//components/heap_profiling/in_process",
       "//components/minidump_uploader",
       "//components/safe_browsing:buildflags",
-      "//components/safe_browsing/android:safe_browsing_mobile",
       "//components/services/heap_profiling",
       "//content/public/app",
       "//content/public/common:service_names",
@@ -1550,7 +1538,6 @@ if (is_linux || is_chromeos) {
         ":angle_egl_symbols",
         ":angle_gles_symbols",
         ":chrome_symbols",
-        ":crashpad_symbols",
         ":swiftshader_egl_symbols",
         ":swiftshader_gles_symbols",
       ]
@@ -1567,18 +1554,6 @@ if (is_linux || is_chromeos) {
 
       deps = [ ":chrome" ]
     }
-    extract_symbols("crashpad_symbols") {
-      binary = "$root_out_dir/crashpad_handler"
-
-      if (current_cpu == "x86") {
-        # GYP used "ia32" so keep that naming for back-compat.
-        symbol_file = "$root_out_dir/crashpad.breakpad.ia32"
-      } else {
-        symbol_file = "$root_out_dir/crashpad.breakpad.$current_cpu"
-      }
-
-      deps = [ "//third_party/crashpad/crashpad/handler:crashpad_handler" ]
-    }
     extract_symbols("swiftshader_egl_symbols") {
       binary = "$root_out_dir/swiftshader/libEGL.so"
 
