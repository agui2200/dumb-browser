diff --git a/components/password_manager/core/browser/password_manager.cc b/components/password_manager/core/browser/password_manager.cc
index 75fd737fef68..79724a5146e0 100644
--- a/components/password_manager/core/browser/password_manager.cc
+++ b/components/password_manager/core/browser/password_manager.cc
@@ -117,21 +117,6 @@ bool IsThereVisiblePasswordField(const FormData& form) {
   return false;
 }
 
-#if !defined(OS_IOS)
-// Finds the matched form manager with id |form_renderer_id| in
-// |form_managers|.
-PasswordFormManager* FindMatchedManagerByRendererId(
-    autofill::FormRendererId form_renderer_id,
-    const std::vector<std::unique_ptr<PasswordFormManager>>& form_managers,
-    const PasswordManagerDriver* driver) {
-  for (const auto& form_manager : form_managers) {
-    if (form_manager->DoesManageAccordingToRendererId(form_renderer_id, driver))
-      return form_manager.get();
-  }
-  return nullptr;
-}
-#endif  // !defined(OS_IOS)
-
 bool HasSingleUsernameVote(const FormPredictions& form) {
   if (!base::FeatureList::IsEnabled(
           password_manager::features::kUsernameFirstFlow)) {
@@ -486,18 +471,6 @@ void PasswordManager::OnInformAboutUserInput(PasswordManagerDriver* driver,
                                              const FormData& form_data) {
   PasswordFormManager* manager = ProvisionallySaveForm(form_data, driver, true);
 
-  if (manager && form_data.is_gaia_with_skip_save_password_form) {
-    manager->GetMetricsRecorder()
-        ->set_user_typed_password_on_chrome_sign_in_page();
-  }
-
-  auto availability =
-      manager ? PasswordManagerMetricsRecorder::FormManagerAvailable::kSuccess
-              : PasswordManagerMetricsRecorder::FormManagerAvailable::
-                    kMissingManual;
-  if (client_ && client_->GetMetricsRecorder())
-    client_->GetMetricsRecorder()->RecordFormManagerAvailable(availability);
-
   ShowManualFallbackForSaving(manager, form_data);
 }
 
@@ -593,8 +566,7 @@ PasswordFormManager* PasswordManager::CreateFormManager(
       client_,
       driver ? driver->AsWeakPtr() : base::WeakPtr<PasswordManagerDriver>(),
       form, nullptr,
-      PasswordSaveManagerImpl::CreatePasswordSaveManagerImpl(client_),
-      nullptr));
+      PasswordSaveManagerImpl::CreatePasswordSaveManagerImpl(client_)));
   form_managers_.back()->ProcessServerPredictions(predictions_);
   return form_managers_.back().get();
 }
@@ -610,9 +582,6 @@ PasswordFormManager* PasswordManager::ProvisionallySaveForm(
     logger->LogMessage(Logger::STRING_PROVISIONALLY_SAVE_FORM_METHOD);
   }
   if (!client_->IsSavingAndFillingEnabled(submitted_form.url)) {
-    RecordProvisionalSaveFailure(
-        PasswordManagerMetricsRecorder::SAVING_DISABLED, submitted_form.url,
-        logger.get());
     return nullptr;
   }
 
@@ -621,27 +590,13 @@ PasswordFormManager* PasswordManager::ProvisionallySaveForm(
 
   const GURL& submitted_url = submitted_form.url;
   if (ShouldBlockPasswordForSameOriginButDifferentScheme(submitted_url)) {
-    RecordProvisionalSaveFailure(
-        PasswordManagerMetricsRecorder::SAVING_ON_HTTP_AFTER_HTTPS,
-        submitted_url, logger.get());
     return nullptr;
   }
 
   PasswordFormManager* matched_manager =
       GetMatchedManager(driver, submitted_form);
 
-  auto availability =
-      matched_manager
-          ? PasswordManagerMetricsRecorder::FormManagerAvailable::kSuccess
-          : PasswordManagerMetricsRecorder::FormManagerAvailable::
-                kMissingProvisionallySave;
-  if (client_ && client_->GetMetricsRecorder())
-    client_->GetMetricsRecorder()->RecordFormManagerAvailable(availability);
-
   if (!matched_manager) {
-    RecordProvisionalSaveFailure(
-        PasswordManagerMetricsRecorder::NO_MATCHING_FORM, submitted_form.url,
-        logger.get());
     matched_manager = CreateFormManager(driver, submitted_form);
   }
 
@@ -674,19 +629,6 @@ PasswordFormManager* PasswordManager::ProvisionallySaveForm(
   return matched_manager;
 }
 
-#if !defined(OS_IOS)
-void PasswordManager::LogFirstFillingResult(
-    PasswordManagerDriver* driver,
-    autofill::FormRendererId form_renderer_id,
-    int32_t result) {
-  PasswordFormManager* matching_manager =
-      FindMatchedManagerByRendererId(form_renderer_id, form_managers_, driver);
-  if (!matching_manager)
-    return;
-  matching_manager->GetMetricsRecorder()->RecordFirstFillingResult(result);
-}
-#endif  // !defined(OS_IOS)
-
 void PasswordManager::NotifyStorePasswordCalled() {
   store_password_called_ = true;
   DropFormManagers();
@@ -783,11 +725,6 @@ bool PasswordManager::IsAutomaticSavePromptAvailable() {
 
   if (submitted_manager->GetFormFetcher()->GetState() ==
       FormFetcher::State::WAITING) {
-    // We have a provisional save manager, but it didn't finish matching yet.
-    // We just give up.
-    RecordProvisionalSaveFailure(
-        PasswordManagerMetricsRecorder::MATCHING_NOT_COMPLETE,
-        submitted_manager->GetURL(), logger.get());
     return false;
   }
 
@@ -806,12 +743,6 @@ void PasswordManager::OnPasswordFormsRendered(
     const std::vector<FormData>& visible_forms_data,
     bool did_stop_loading) {
   CreatePendingLoginManagers(driver, visible_forms_data);
-  std::unique_ptr<BrowserSavePasswordProgressLogger> logger;
-  if (password_manager_util::IsLoggingActive(client_)) {
-    logger = std::make_unique<BrowserSavePasswordProgressLogger>(
-        client_->GetLogManager());
-    logger->LogMessage(Logger::STRING_ON_PASSWORD_FORMS_RENDERED_METHOD);
-  }
 
   if (!IsAutomaticSavePromptAvailable())
     return;
@@ -821,18 +752,11 @@ void PasswordManager::OnPasswordFormsRendered(
   // If the server throws an internal error, access denied page, page not
   // found etc. after a login attempt, we do not save the credentials.
   if (client_->WasLastNavigationHTTPError()) {
-    if (logger)
-      logger->LogMessage(Logger::STRING_DECISION_DROP);
-    submitted_manager->GetMetricsRecorder()->LogSubmitFailed();
+
     owned_submitted_form_manager_.reset();
     return;
   }
 
-  if (logger) {
-    logger->LogNumber(Logger::STRING_NUMBER_OF_VISIBLE_FORMS,
-                      visible_forms_data.size());
-  }
-
   // Record all visible forms from the frame.
   visible_forms_data_.insert(visible_forms_data_.end(),
                              visible_forms_data.begin(),
@@ -863,21 +787,13 @@ void PasswordManager::OnPasswordFormsRendered(
             AreAllFieldsEmpty(form_data)) {
           continue;
         }
-        submitted_manager->GetMetricsRecorder()->LogSubmitFailed();
-        if (logger) {
-          logger->LogFormData(Logger::STRING_PASSWORD_FORM_REAPPEARED,
-                              form_data);
-          logger->LogMessage(Logger::STRING_DECISION_DROP);
-        }
+
         owned_submitted_form_manager_.reset();
         // Clear visible_forms_data_ once we found the match.
         visible_forms_data_.clear();
         return;
       }
     }
-  } else {
-    if (logger)
-      logger->LogMessage(Logger::STRING_PROVISIONALLY_SAVED_FORM_IS_NOT_HTML);
   }
   // Clear visible_forms_data_ after checking all the visible forms.
   visible_forms_data_.clear();
@@ -933,15 +849,10 @@ void PasswordManager::OnLoginSuccessful() {
   if (!submitted_manager->IsPasswordUpdate() &&
       !client_->GetStoreResultFilter()->ShouldSave(
           *submitted_manager->GetSubmittedForm())) {
-    RecordProvisionalSaveFailure(
-        PasswordManagerMetricsRecorder::SYNC_CREDENTIAL,
-        submitted_manager->GetURL(), logger.get());
     owned_submitted_form_manager_.reset();
     return;
   }
 
-  submitted_manager->GetMetricsRecorder()->LogSubmitPassed();
-
   UMA_HISTOGRAM_BOOLEAN(
       "PasswordManager.SuccessfulLoginHappened",
       submitted_manager->GetSubmittedForm()->url.SchemeIsCryptographic());
@@ -1000,11 +911,6 @@ void PasswordManager::MaybeSavePasswordHash(
   if (!should_save_enterprise_pw && !should_save_gaia_pw)
     return;
 
-  if (submitted_form->form_data.is_gaia_with_skip_save_password_form) {
-    submitted_manager->GetMetricsRecorder()
-        ->set_password_hash_saved_on_chrome_sing_in_page();
-  }
-
   if (password_manager_util::IsLoggingActive(client_)) {
     BrowserSavePasswordProgressLogger logger(client_->GetLogManager());
     logger.LogMessage(Logger::STRING_SAVE_PASSWORD_HASH);
@@ -1117,16 +1023,6 @@ PasswordManager::MoveOwnedSubmittedManager() {
   return nullptr;
 }
 
-void PasswordManager::RecordProvisionalSaveFailure(
-    PasswordManagerMetricsRecorder::ProvisionalSaveFailure failure,
-    const GURL& form_origin,
-    BrowserSavePasswordProgressLogger* logger) {
-  if (client_ && client_->GetMetricsRecorder()) {
-    client_->GetMetricsRecorder()->RecordProvisionalSaveFailure(
-        failure, submitted_form_url_, form_origin, logger);
-  }
-}
-
 // TODO(https://crbug.com/831123): Implement creating missing
 // PasswordFormManager when PasswordFormManager is gone.
 PasswordFormManager* PasswordManager::GetMatchedManager(
@@ -1214,8 +1110,6 @@ void PasswordManager::ShowManualFallbackForSaving(
   bool has_generated_password = form_manager->HasGeneratedPassword();
   if (ShouldPromptUserToSavePassword(*form_manager) || has_generated_password) {
     bool is_update = form_manager->IsPasswordUpdate();
-    form_manager->GetMetricsRecorder()->RecordShowManualFallbackForSaving(
-        has_generated_password, is_update);
     client_->ShowManualFallbackForSaving(form_manager->Clone(),
                                          has_generated_password, is_update);
   } else {
