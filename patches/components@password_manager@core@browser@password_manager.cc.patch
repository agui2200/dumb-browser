diff --git a/components/password_manager/core/browser/password_manager.cc b/components/password_manager/core/browser/password_manager.cc
index 2bf6af247819..e57304c391d3 100644
--- a/components/password_manager/core/browser/password_manager.cc
+++ b/components/password_manager/core/browser/password_manager.cc
@@ -524,18 +524,6 @@ void PasswordManager::OnInformAboutUserInput(PasswordManagerDriver* driver,
                                              const FormData& form_data) {
   PasswordFormManager* manager = ProvisionallySaveForm(form_data, driver, true);
 
-  if (manager && form_data.is_gaia_with_skip_save_password_form) {
-    manager->GetMetricsRecorder()
-        ->set_user_typed_password_on_chrome_sign_in_page();
-  }
-
-  auto availability =
-      manager ? PasswordManagerMetricsRecorder::FormManagerAvailable::kSuccess
-              : PasswordManagerMetricsRecorder::FormManagerAvailable::
-                    kMissingManual;
-  if (client_ && client_->GetMetricsRecorder())
-    client_->GetMetricsRecorder()->RecordFormManagerAvailable(availability);
-
   ShowManualFallbackForSaving(manager, form_data);
 }
 
@@ -668,14 +656,6 @@ PasswordFormManager* PasswordManager::ProvisionallySaveForm(
   PasswordFormManager* matched_manager =
       GetMatchedManager(driver, submitted_form);
 
-  auto availability =
-      matched_manager
-          ? PasswordManagerMetricsRecorder::FormManagerAvailable::kSuccess
-          : PasswordManagerMetricsRecorder::FormManagerAvailable::
-                kMissingProvisionallySave;
-  if (client_ && client_->GetMetricsRecorder())
-    client_->GetMetricsRecorder()->RecordFormManagerAvailable(availability);
-
   if (!matched_manager) {
     RecordProvisionalSaveFailure(
         PasswordManagerMetricsRecorder::NO_MATCHING_FORM, submitted_form.url,
@@ -721,7 +701,6 @@ void PasswordManager::LogFirstFillingResult(
       FindMatchedManagerByRendererId(form_renderer_id, form_managers_, driver);
   if (!matching_manager)
     return;
-  matching_manager->GetMetricsRecorder()->RecordFirstFillingResult(result);
 }
 #endif  // !defined(OS_IOS)
 
@@ -864,7 +843,6 @@ void PasswordManager::OnPasswordFormsRendered(
   if (client_->WasLastNavigationHTTPError()) {
     if (logger)
       logger->LogMessage(Logger::STRING_DECISION_DROP);
-    submitted_manager->GetMetricsRecorder()->LogSubmitFailed();
     owned_submitted_form_manager_.reset();
     return;
   }
@@ -904,7 +882,6 @@ void PasswordManager::OnPasswordFormsRendered(
             AreAllFieldsEmpty(form_data)) {
           continue;
         }
-        submitted_manager->GetMetricsRecorder()->LogSubmitFailed();
         if (logger) {
           logger->LogFormData(Logger::STRING_PASSWORD_FORM_REAPPEARED,
                               form_data);
@@ -981,8 +958,6 @@ void PasswordManager::OnLoginSuccessful() {
     return;
   }
 
-  submitted_manager->GetMetricsRecorder()->LogSubmitPassed();
-
   UMA_HISTOGRAM_BOOLEAN(
       "PasswordManager.SuccessfulLoginHappened",
       submitted_manager->GetSubmittedForm()->url.SchemeIsCryptographic());
@@ -1044,11 +1019,6 @@ void PasswordManager::MaybeSavePasswordHash(
   if (!should_save_enterprise_pw && !should_save_gaia_pw)
     return;
 
-  if (submitted_form->form_data.is_gaia_with_skip_save_password_form) {
-    submitted_manager->GetMetricsRecorder()
-        ->set_password_hash_saved_on_chrome_sing_in_page();
-  }
-
   if (password_manager_util::IsLoggingActive(client_)) {
     BrowserSavePasswordProgressLogger logger(client_->GetLogManager());
     logger.LogMessage(Logger::STRING_SAVE_PASSWORD_HASH);
@@ -1070,15 +1040,7 @@ void PasswordManager::MaybeSavePasswordHash(
   DCHECK(should_save_gaia_pw);
   bool is_sync_account_email =
       client_->GetStoreResultFilter()->IsSyncAccountEmail(username);
-  GaiaPasswordHashChange event =
-      is_sync_account_email
-          ? (is_password_change
-                 ? GaiaPasswordHashChange::CHANGED_IN_CONTENT_AREA
-                 : GaiaPasswordHashChange::SAVED_IN_CONTENT_AREA)
-          : (is_password_change
-                 ? GaiaPasswordHashChange::NOT_SYNC_PASSWORD_CHANGE
-                 : GaiaPasswordHashChange::SAVED_IN_CONTENT_AREA);
-  store->SaveGaiaPasswordHash(username, password, is_sync_account_email, event);
+  store->SaveGaiaPasswordHash(username, password, is_sync_account_email);
 }
 
 void PasswordManager::ProcessAutofillPredictions(
@@ -1164,10 +1126,6 @@ void PasswordManager::RecordProvisionalSaveFailure(
     PasswordManagerMetricsRecorder::ProvisionalSaveFailure failure,
     const GURL& form_origin,
     BrowserSavePasswordProgressLogger* logger) {
-  if (client_ && client_->GetMetricsRecorder()) {
-    client_->GetMetricsRecorder()->RecordProvisionalSaveFailure(
-        failure, submitted_form_url_, form_origin, logger);
-  }
 }
 
 // TODO(https://crbug.com/831123): Implement creating missing
@@ -1257,8 +1215,6 @@ void PasswordManager::ShowManualFallbackForSaving(
   bool has_generated_password = form_manager->HasGeneratedPassword();
   if (ShouldPromptUserToSavePassword(*form_manager) || has_generated_password) {
     bool is_update = form_manager->IsPasswordUpdate();
-    form_manager->GetMetricsRecorder()->RecordShowManualFallbackForSaving(
-        has_generated_password, is_update);
     client_->ShowManualFallbackForSaving(form_manager->Clone(),
                                          has_generated_password, is_update);
   } else {
