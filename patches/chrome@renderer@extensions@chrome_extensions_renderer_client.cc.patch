diff --git a/chrome/renderer/extensions/chrome_extensions_renderer_client.cc b/chrome/renderer/extensions/chrome_extensions_renderer_client.cc
index c7a01711ef51a..c955eebee09d3 100644
--- a/chrome/renderer/extensions/chrome_extensions_renderer_client.cc
+++ b/chrome/renderer/extensions/chrome_extensions_renderer_client.cc
@@ -42,8 +42,6 @@
 #include "extensions/renderer/script_context.h"
 #include "net/base/registry_controlled_domains/registry_controlled_domain.h"
 #include "net/cookies/site_for_cookies.h"
-#include "services/metrics/public/cpp/mojo_ukm_recorder.h"
-#include "services/metrics/public/cpp/ukm_builders.h"
 #include "third_party/abseil-cpp/absl/types/optional.h"
 #include "third_party/blink/public/common/security/protocol_handler_security_level.h"
 #include "third_party/blink/public/platform/web_url.h"
@@ -266,19 +264,6 @@ void ChromeExtensionsRendererClient::WillSendRequest(
   // TODO(https://crbug.com/588766): Remove metrics after bug is fixed.
   if (url.ProtocolIs(extensions::kExtensionScheme) &&
       request_url.host_piece() == extension_misc::kDocsOfflineExtensionId) {
-    if (!ukm_recorder_) {
-      mojo::PendingRemote<ukm::mojom::UkmRecorderInterface> recorder;
-      content::RenderThread::Get()->BindHostReceiver(
-          recorder.InitWithNewPipeAndPassReceiver());
-      ukm_recorder_ =
-          std::make_unique<ukm::MojoUkmRecorder>(std::move(recorder));
-    }
-
-    const ukm::SourceId source_id = frame->GetDocument().GetUkmSourceId();
-    ukm::builders::GoogleDocsOfflineExtension(source_id)
-        .SetResourceRequested(true)
-        .Record(ukm_recorder_.get());
-
     bool is_available = extensions::RendererExtensionRegistry::Get()->GetByID(
                             extension_misc::kDocsOfflineExtensionId) != nullptr;
     bool is_incognito = IsIncognitoProcess();
