diff --git a/chrome/browser/safe_browsing/safe_browsing_service.cc b/chrome/browser/safe_browsing/safe_browsing_service.cc
index 4e67dfe20cec..091b0a45a686 100644
--- a/chrome/browser/safe_browsing/safe_browsing_service.cc
+++ b/chrome/browser/safe_browsing/safe_browsing_service.cc
@@ -89,7 +89,6 @@ base::FilePath SafeBrowsingService::GetBaseFilename() {
 
 SafeBrowsingService::SafeBrowsingService()
     : services_delegate_(ServicesDelegate::Create(this)),
-      estimated_extended_reporting_by_prefs_(SBER_LEVEL_OFF),
       shutdown_(false),
       enabled_(false),
       enabled_by_prefs_(false) {}
@@ -228,8 +227,6 @@ TriggerManager* SafeBrowsingService::trigger_manager() const {
 
 PasswordProtectionService* SafeBrowsingService::GetPasswordProtectionService(
     Profile* profile) const {
-  if (IsSafeBrowsingEnabled(*profile->GetPrefs()))
-    return services_delegate_->GetPasswordProtectionService(profile);
   return nullptr;
 }
 
@@ -355,9 +352,6 @@ void SafeBrowsingService::OnProfileAdded(Profile* profile) {
   std::unique_ptr<PrefChangeRegistrar> registrar =
       std::make_unique<PrefChangeRegistrar>();
   registrar->Init(pref_service);
-  registrar->Add(
-      prefs::kSafeBrowsingEnabled,
-      base::Bind(&SafeBrowsingService::RefreshState, base::Unretained(this)));
   // ClientSideDetectionService will need to be refresh the models
   // renderers have if extended-reporting changes.
   registrar->Add(
@@ -413,18 +407,6 @@ void SafeBrowsingService::RefreshState() {
   DCHECK_CURRENTLY_ON(BrowserThread::UI);
   // Check if any profile requires the service to be active.
   enabled_by_prefs_ = false;
-  estimated_extended_reporting_by_prefs_ = SBER_LEVEL_OFF;
-  for (const auto& pref : prefs_map_) {
-    if (IsSafeBrowsingEnabled(*pref.first)) {
-      enabled_by_prefs_ = true;
-
-      ExtendedReportingLevel erl =
-          safe_browsing::GetExtendedReportingLevel(*pref.first);
-      if (erl != SBER_LEVEL_OFF) {
-        estimated_extended_reporting_by_prefs_ = erl;
-      }
-    }
-  }
 
   if (enabled_by_prefs_)
     Start();
