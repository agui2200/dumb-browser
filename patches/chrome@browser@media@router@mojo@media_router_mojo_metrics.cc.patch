diff --git a/chrome/browser/media/router/mojo/media_router_mojo_metrics.cc b/chrome/browser/media/router/mojo/media_router_mojo_metrics.cc
index 00c2a63ba40a..27ef49744816 100644
--- a/chrome/browser/media/router/mojo/media_router_mojo_metrics.cc
+++ b/chrome/browser/media/router/mojo/media_router_mojo_metrics.cc
@@ -9,11 +9,8 @@
 #include "base/metrics/histogram_macros.h"
 #include "base/version.h"
 #include "components/media_router/common/providers/cast/cast_media_source.h"
-#include "components/ukm/content/source_url_recorder.h"
 #include "components/version_info/version_info.h"
 #include "extensions/common/extension.h"
-#include "services/metrics/public/cpp/ukm_builders.h"
-#include "services/metrics/public/cpp/ukm_recorder.h"
 
 namespace media_router {
 
@@ -69,32 +66,12 @@ void MediaRouterMojoMetrics::RecordMediaRouteControllerCreationResult(
 // static
 void MediaRouterMojoMetrics::RecordTabMirroringMetrics(
     content::WebContents* web_contents) {
-  ukm::SourceId source_id =
-      ukm::GetSourceIdForWebContentsDocument(web_contents);
-  WebContentsAudioState audio_state = WebContentsAudioState::kWasNeverAudible;
-  if (web_contents->IsCurrentlyAudible()) {
-    audio_state = WebContentsAudioState::kIsCurrentlyAudible;
-  } else if (web_contents->WasEverAudible()) {
-    audio_state = WebContentsAudioState::kWasPreviouslyAudible;
-  }
-
-  ukm::builders::MediaRouter_TabMirroringStarted(source_id)
-      .SetAudioState(static_cast<int>(audio_state))
-      .Record(ukm::UkmRecorder::Get());
 }
 
 // static
 void MediaRouterMojoMetrics::RecordSiteInitiatedMirroringStarted(
     content::WebContents* web_contents,
     const MediaSource& media_source) {
-  ukm::SourceId source_id =
-      ukm::GetSourceIdForWebContentsDocument(web_contents);
-  auto cast_source = CastMediaSource::FromMediaSource(media_source);
-  if (cast_source) {
-    ukm::builders::MediaRouter_SiteInitiatedMirroringStarted(source_id)
-        .SetAllowAudioCapture(cast_source->site_requested_audio_capture())
-        .Record(ukm::UkmRecorder::Get());
-  }
 }
 
 // static
