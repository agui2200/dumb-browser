diff --git a/third_party/blink/renderer/core/frame/dactyloscoper.cc b/third_party/blink/renderer/core/frame/dactyloscoper.cc
index be4cb3fdbfab..f19e0bae4bb5 100644
--- a/third_party/blink/renderer/core/frame/dactyloscoper.cc
+++ b/third_party/blink/renderer/core/frame/dactyloscoper.cc
@@ -4,15 +4,11 @@
 
 #include "third_party/blink/renderer/core/frame/dactyloscoper.h"
 
-#include "third_party/blink/public/common/privacy_budget/identifiability_metric_builder.h"
-#include "third_party/blink/public/common/privacy_budget/identifiability_study_settings.h"
-#include "third_party/blink/public/common/privacy_budget/identifiable_token_builder.h"
 #include "third_party/blink/renderer/core/dom/document.h"
 #include "third_party/blink/renderer/core/frame/local_dom_window.h"
 #include "third_party/blink/renderer/core/frame/local_frame.h"
 #include "third_party/blink/renderer/core/loader/document_loader.h"
 #include "third_party/blink/renderer/core/svg/svg_string_list_tear_off.h"
-#include "third_party/blink/renderer/platform/privacy_budget/identifiability_digest_helpers.h"
 
 namespace blink {
 
@@ -26,22 +22,13 @@ void Dactyloscoper::Record(WebFeature feature) {
 namespace {
 
 bool ShouldSample(WebFeature feature) {
-  return IdentifiabilityStudySettings::Get()->ShouldSample(
-      IdentifiableSurface::FromTypeAndToken(
-          IdentifiableSurface::Type::kWebFeature, feature));
+  return false;
 }
 
 }  // namespace
 
 // static
 void Dactyloscoper::Record(ExecutionContext* context, WebFeature feature) {
-  // TODO: Workers.
-  if (!context)
-    return;
-  if (auto* window = DynamicTo<LocalDOMWindow>(context)) {
-    if (auto* frame = window->GetFrame())
-      frame->Loader().GetDocumentLoader()->GetDactyloscoper().Record(feature);
-  }
 }
 
 // static
@@ -53,10 +40,6 @@ void Dactyloscoper::RecordDirectSurface(ExecutionContext* context,
   auto* window = DynamicTo<LocalDOMWindow>(context);
   if (!window)
     return;
-  Document* document = window->document();
-  IdentifiabilityMetricBuilder(document->UkmSourceID())
-      .SetWebfeature(feature, value)
-      .Record(document->UkmRecorder());
 }
 
 // static
@@ -67,8 +50,6 @@ void Dactyloscoper::RecordDirectSurface(ExecutionContext* context,
     return;
   if (str.IsEmpty())
     return;
-  Dactyloscoper::RecordDirectSurface(context, feature,
-                                     IdentifiabilitySensitiveStringToken(str));
 }
 
 // static
@@ -79,11 +60,6 @@ void Dactyloscoper::RecordDirectSurface(ExecutionContext* context,
     return;
   if (strs.IsEmpty())
     return;
-  IdentifiableTokenBuilder builder;
-  for (const auto& str : strs) {
-    builder.AddToken(IdentifiabilitySensitiveStringToken(str));
-  }
-  Dactyloscoper::RecordDirectSurface(context, feature, builder.GetToken());
 }
 
 // static
@@ -94,16 +70,12 @@ void Dactyloscoper::RecordDirectSurface(ExecutionContext* context,
     return;
   if (!buffer || buffer->byteLength() == 0)
     return;
-  IdentifiableTokenBuilder builder(base::make_span(
-      static_cast<uint8_t*>(buffer->BaseAddress()), buffer->byteLength()));
-  Dactyloscoper::RecordDirectSurface(context, feature, builder.GetToken());
 }
 
 // static
 void Dactyloscoper::RecordDirectSurface(ExecutionContext* context,
                                         WebFeature feature,
                                         SVGStringListTearOff* strings) {
-  RecordDirectSurface(context, feature, strings->Values());
 }
 
 }  // namespace blink
