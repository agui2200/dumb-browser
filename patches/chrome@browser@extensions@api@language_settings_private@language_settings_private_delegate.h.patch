diff --git a/chrome/browser/extensions/api/language_settings_private/language_settings_private_delegate.h b/chrome/browser/extensions/api/language_settings_private/language_settings_private_delegate.h
index 17098f43ce8d..895839393c1e 100644
--- a/chrome/browser/extensions/api/language_settings_private/language_settings_private_delegate.h
+++ b/chrome/browser/extensions/api/language_settings_private/language_settings_private_delegate.h
@@ -10,8 +10,6 @@
 
 #include "base/macros.h"
 #include "base/memory/weak_ptr.h"
-#include "chrome/browser/spellchecker/spellcheck_custom_dictionary.h"
-#include "chrome/browser/spellchecker/spellcheck_hunspell_dictionary.h"
 #include "chrome/common/extensions/api/language_settings_private.h"
 #include "components/keyed_service/core/keyed_service.h"
 #include "components/prefs/pref_change_registrar.h"
@@ -34,25 +32,16 @@ namespace extensions {
 class LanguageSettingsPrivateDelegate
     : public KeyedService,
       public EventRouter::Observer,
-      public content::NotificationObserver,
+      public content::NotificationObserver
 #if defined(OS_CHROMEOS)
-      public chromeos::input_method::InputMethodManager::Observer,
+      ,public chromeos::input_method::InputMethodManager::Observer
 #endif  // defined(OS_CHROMEOS)
-      public SpellcheckHunspellDictionary::Observer,
-      public SpellcheckCustomDictionary::Observer {
+      {
  public:
   static LanguageSettingsPrivateDelegate* Create(
       content::BrowserContext* browser_context);
   ~LanguageSettingsPrivateDelegate() override;
 
-  // Returns the languages and statuses of the enabled spellcheck dictionaries.
-  virtual std::vector<
-      api::language_settings_private::SpellcheckDictionaryStatus>
-  GetHunspellDictionaryStatuses();
-
-  // Retry downloading the spellcheck dictionary.
-  virtual void RetryDownloadHunspellDictionary(const std::string& language);
-
   // content::NotificationObserver implementation.
   void Observe(int type,
                const content::NotificationSource& source,
@@ -77,33 +66,7 @@ class LanguageSettingsPrivateDelegate
   void OnInputMethodExtensionRemoved(const std::string& extension_id) override;
 #endif  // defined(OS_CHROMEOS)
 
-  // SpellcheckHunspellDictionary::Observer implementation.
-  void OnHunspellDictionaryInitialized(const std::string& language) override;
-  void OnHunspellDictionaryDownloadBegin(const std::string& language) override;
-  void OnHunspellDictionaryDownloadSuccess(
-      const std::string& language) override;
-  void OnHunspellDictionaryDownloadFailure(
-      const std::string& language) override;
-
-  // SpellcheckCustomDictionary::Observer implementation.
-  void OnCustomDictionaryLoaded() override;
-  void OnCustomDictionaryChanged(
-      const SpellcheckCustomDictionary::Change& dictionary_change) override;
-
  private:
-  typedef std::vector<base::WeakPtr<SpellcheckHunspellDictionary>>
-      WeakDictionaries;
-
-  // Updates the dictionaries that are used for spellchecking.
-  void RefreshDictionaries(bool was_listening, bool should_listen);
-
-  // Returns the hunspell dictionaries that are used for spellchecking.
-  const WeakDictionaries& GetHunspellDictionaries();
-
-  // If there are any JavaScript listeners registered for spellcheck events,
-  // ensures we are registered for change notifications. Otherwise, unregisters
-  // any observers.
-  void StartOrStopListeningForSpellcheckChanges();
 
 #if defined(OS_CHROMEOS)
   // If there are any JavaScript listeners registered for input method events,
@@ -112,28 +75,8 @@ class LanguageSettingsPrivateDelegate
   void StartOrStopListeningForInputMethodChanges();
 #endif  // defined(OS_CHROMEOS)
 
-  // Handles the preference for which languages should be used for spellcheck
-  // by resetting the dictionaries and broadcasting an event.
-  void OnSpellcheckDictionariesChanged();
-
-  // Broadcasts an event with the list of spellcheck dictionary statuses.
-  void BroadcastDictionariesChangedEvent();
-
-  // Removes observers from hunspell_dictionaries_.
-  void RemoveDictionaryObservers();
-
-  // The hunspell dictionaries that are used for spellchecking.
-  // TODO(aee): Consider replacing with
-  // |SpellcheckService::GetHunspellDictionaries()|.
-  WeakDictionaries hunspell_dictionaries_;
-
-  // The custom dictionary that is used for spellchecking.
-  SpellcheckCustomDictionary* custom_dictionary_;
-
   content::BrowserContext* context_;
 
-  // True if there are observers listening for spellcheck events.
-  bool listening_spellcheck_;
   // True if there are observers listening for input method events.
   bool listening_input_method_;
 
