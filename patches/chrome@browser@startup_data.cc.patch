diff --git a/chrome/browser/startup_data.cc b/chrome/browser/startup_data.cc
index f55db4474db52..678fb3b092b00 100644
--- a/chrome/browser/startup_data.cc
+++ b/chrome/browser/startup_data.cc
@@ -9,13 +9,6 @@
 #include "chrome/browser/metrics/chrome_feature_list_creator.h"
 #include "chrome/browser/prefs/profile_pref_store_manager.h"
 #include "chrome/common/channel_info.h"
-#include "components/metrics/delegating_provider.h"
-#include "components/metrics/entropy_state_provider.h"
-#include "components/metrics/field_trials_provider.h"
-#include "components/metrics/metrics_log.h"
-#include "components/metrics/persistent_system_profile.h"
-#include "components/metrics/version_utils.h"
-#include "third_party/metrics_proto/system_profile.pb.h"
 
 #if defined(OS_ANDROID)
 #include "base/files/file_util.h"
@@ -48,7 +41,6 @@
 #include "components/sync_preferences/pref_service_syncable.h"
 #include "content/public/browser/network_service_instance.h"
 #include "mojo/public/cpp/bindings/pending_remote.h"
-#include "services/preferences/public/mojom/tracked_preference_validation_delegate.mojom.h"
 
 namespace {
 
@@ -68,6 +60,7 @@ StartupData::StartupData()
 
 StartupData::~StartupData() = default;
 
+#if 0
 void StartupData::RecordCoreSystemProfile() {
   metrics::SystemProfileProto system_profile;
   metrics::MetricsLog::RecordCoreSystemProfile(
@@ -97,6 +90,7 @@ void StartupData::RecordCoreSystemProfile() {
   metrics::GlobalPersistentSystemProfile::GetInstance()->SetSystemProfile(
       system_profile, /* complete */ false);
 }
+#endif
 
 #if defined(OS_ANDROID)
 void StartupData::CreateProfilePrefService() {
@@ -202,15 +196,13 @@ void StartupData::CreateServicesInternal() {
                        chrome_feature_list_creator_->actual_locale(),
                        pref_registry_.get());
 
-  mojo::PendingRemote<prefs::mojom::TrackedPreferenceValidationDelegate>
-      pref_validation_delegate;
   // The preference tracking and protection is not required on Android.
   DCHECK(!ProfilePrefStoreManager::kPlatformSupportsPreferenceTracking);
 
   prefs_ = CreatePrefService(
       pref_registry_, nullptr /* extension_pref_store */,
       profile_policy_connector_->policy_service(), browser_policy_connector,
-      std::move(pref_validation_delegate), io_task_runner, key_.get(), path,
+      io_task_runner, key_.get(), path,
       false /* async_prefs*/);
 }
 #endif
