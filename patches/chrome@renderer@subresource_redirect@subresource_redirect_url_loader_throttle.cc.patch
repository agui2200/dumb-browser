diff --git a/chrome/renderer/subresource_redirect/subresource_redirect_url_loader_throttle.cc b/chrome/renderer/subresource_redirect/subresource_redirect_url_loader_throttle.cc
index 7fdff6c5572b..5e40068c30da 100644
--- a/chrome/renderer/subresource_redirect/subresource_redirect_url_loader_throttle.cc
+++ b/chrome/renderer/subresource_redirect/subresource_redirect_url_loader_throttle.cc
@@ -222,11 +222,6 @@ void SubresourceRedirectURLLoaderThrottle::BeforeWillProcessResponse(
       net::HttpUtil::ParseRetryAfterHeader(retry_after_string,
                                            base::Time::Now(), &retry_after);
     }
-    if (auto* public_resource_decider_agent =
-            GetPublicResourceDeciderAgent(render_frame_id_)) {
-      public_resource_decider_agent->NotifyCompressedResourceFetchFailed(
-          retry_after);
-    }
   }
 
   // Non 2XX responses from the compression server need to have unaltered
@@ -318,11 +313,6 @@ void SubresourceRedirectURLLoaderThrottle::OnRedirectTimeout() {
   DCHECK_EQ(RedirectState::kRedirectAttempted, redirect_state_);
   redirect_state_ = RedirectState::kRedirectFailed;
   delegate_->RestartWithURLResetAndFlagsNow(net::LOAD_NORMAL);
-  if (auto* public_resource_decider_agent =
-          GetPublicResourceDeciderAgent(render_frame_id_)) {
-    public_resource_decider_agent->NotifyCompressedResourceFetchFailed(
-        base::TimeDelta());
-  }
   UMA_HISTOGRAM_BOOLEAN("SubresourceRedirect.CompressionFetchTimeout", true);
 }
 
