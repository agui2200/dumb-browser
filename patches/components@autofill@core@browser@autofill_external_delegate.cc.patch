diff --git a/components/autofill/core/browser/autofill_external_delegate.cc b/components/autofill/core/browser/autofill_external_delegate.cc
index b06b5944a251..f4a4da574a8c 100644
--- a/components/autofill/core/browser/autofill_external_delegate.cc
+++ b/components/autofill/core/browser/autofill_external_delegate.cc
@@ -21,7 +21,6 @@
 #include "components/autofill/core/browser/autocomplete_history_manager.h"
 #include "components/autofill/core/browser/autofill_driver.h"
 #include "components/autofill/core/browser/autofill_manager.h"
-#include "components/autofill/core/browser/autofill_metrics.h"
 #include "components/autofill/core/browser/ui/popup_item_ids.h"
 #include "components/autofill/core/common/autofill_features.h"
 #include "components/autofill/core/common/autofill_payments_features.h"
@@ -209,11 +208,6 @@ void AutofillExternalDelegate::OnPopupShown() {
                                 : mojom::AutofillState::kAutocompleteAvailable);
   manager_->DidShowSuggestions(has_autofill_suggestions_, query_form_,
                                query_field_);
-
-  if (should_show_scan_credit_card_) {
-    AutofillMetrics::LogScanCreditCardPromptMetric(
-        AutofillMetrics::SCAN_CARD_ITEM_SHOWN);
-  }
 }
 
 void AutofillExternalDelegate::OnPopupHidden() {
@@ -243,7 +237,6 @@ void AutofillExternalDelegate::DidAcceptSuggestion(const base::string16& value,
     manager_->ShowAutofillSettings(popup_type_ == PopupType::kCreditCards);
   } else if (identifier == POPUP_ITEM_ID_CLEAR_FORM) {
     // User selected 'Clear form'.
-    AutofillMetrics::LogAutofillFormCleared();
     driver_->RendererShouldClearFilledSection();
   } else if (identifier == POPUP_ITEM_ID_PASSWORD_ENTRY ||
              identifier == POPUP_ITEM_ID_USERNAME_ENTRY ||
@@ -255,7 +248,6 @@ void AutofillExternalDelegate::DidAcceptSuggestion(const base::string16& value,
   } else if (identifier == POPUP_ITEM_ID_AUTOCOMPLETE_ENTRY) {
     // User selected an Autocomplete, so we fill directly.
     driver_->RendererShouldFillFieldWithValue(value);
-    AutofillMetrics::LogAutocompleteSuggestionAcceptedIndex(position);
     manager_->OnAutocompleteEntrySelected(value);
   } else if (identifier == POPUP_ITEM_ID_SCAN_CREDIT_CARD) {
     manager_->client()->ScanCreditCard(base::BindOnce(
@@ -274,20 +266,9 @@ void AutofillExternalDelegate::DidAcceptSuggestion(const base::string16& value,
     NOTREACHED();
 #endif
   } else {
-    if (identifier > 0) {  // Denotes an Autofill suggestion.
-      AutofillMetrics::LogAutofillSuggestionAcceptedIndex(
-          position, popup_type_, driver_->IsIncognito());
-    }
     FillAutofillFormData(identifier, false);
   }
 
-  if (should_show_scan_credit_card_) {
-    AutofillMetrics::LogScanCreditCardPromptMetric(
-        identifier == POPUP_ITEM_ID_SCAN_CREDIT_CARD
-            ? AutofillMetrics::SCAN_CARD_ITEM_SELECTED
-            : AutofillMetrics::SCAN_CARD_OTHER_ITEM_SELECTED);
-  }
-
   if (identifier == POPUP_ITEM_ID_SHOW_ACCOUNT_CARDS) {
     should_show_cards_from_account_option_ = false;
     manager_->RefetchCardsAndUpdatePopup(query_id_, query_form_, query_field_);
