diff --git a/components/password_manager/core/browser/password_form_manager.h b/components/password_manager/core/browser/password_form_manager.h
index 4d237ffb51cd..3c47b438494d 100644
--- a/components/password_manager/core/browser/password_form_manager.h
+++ b/components/password_manager/core/browser/password_form_manager.h
@@ -23,7 +23,6 @@
 #include "components/password_manager/core/browser/form_parsing/form_parser.h"
 #include "components/password_manager/core/browser/form_parsing/password_field_prediction.h"
 #include "components/password_manager/core/browser/password_form_manager_for_ui.h"
-#include "components/password_manager/core/browser/password_form_metrics_recorder.h"
 #include "components/password_manager/core/browser/password_save_manager.h"
 #include "components/password_manager/core/browser/password_store.h"
 #include "components/password_manager/core/browser/votes_uploader.h"
@@ -31,7 +30,6 @@
 
 namespace password_manager {
 
-class PasswordFormMetricsRecorder;
 class PasswordManagerClient;
 class PasswordManagerDriver;
 struct PossibleUsernameData;
@@ -52,14 +50,6 @@ class PasswordFormManager : public PasswordFormManagerForUI,
       const base::WeakPtr<PasswordManagerDriver>& driver,
       const autofill::FormData& observed_form_data,
       FormFetcher* form_fetcher,
-      std::unique_ptr<PasswordSaveManager> password_save_manager,
-      scoped_refptr<PasswordFormMetricsRecorder> metrics_recorder);
-
-  // Constructor for http authentication (aka basic authentication).
-  PasswordFormManager(
-      PasswordManagerClient* client,
-      PasswordStore::FormDigest observed_http_auth_digest,
-      FormFetcher* form_fetcher,
       std::unique_ptr<PasswordSaveManager> password_save_manager);
 
   ~PasswordFormManager() override;
@@ -151,7 +141,6 @@ class PasswordFormManager : public PasswordFormManagerForUI,
       const override;
   const autofill::PasswordForm& GetPendingCredentials() const override;
   metrics_util::CredentialSourceType GetCredentialSource() const override;
-  PasswordFormMetricsRecorder* GetMetricsRecorder() override;
   base::span<const InteractionsStats> GetInteractionsStats() const override;
   base::span<const CompromisedCredentials> GetCompromisedCredentials()
       const override;
@@ -261,13 +250,15 @@ class PasswordFormManager : public PasswordFormManagerForUI,
   using FormOrDigest =
       absl::variant<autofill::FormData, PasswordStore::FormDigest>;
 
+public:
   // Delegating constructor.
   PasswordFormManager(
       PasswordManagerClient* client,
       FormOrDigest observed_form_or_digest,
       FormFetcher* form_fetcher,
-      std::unique_ptr<PasswordSaveManager> password_save_manager,
-      scoped_refptr<PasswordFormMetricsRecorder> metrics_recorder);
+      std::unique_ptr<PasswordSaveManager> password_save_manager);
+
+private:
   // Records the status of readonly fields during parsing, combined with the
   // overall success of the parsing. It reports through two different metrics,
   // depending on whether |mode| indicates parsing for saving or filling.
@@ -344,9 +335,6 @@ class PasswordFormManager : public PasswordFormManagerForUI,
   // |PasswordManager.ResultOfSavingAfterUnblacklisting|.
   bool was_unblacklisted_while_on_page_ = false;
 
-  // Takes care of recording metrics and events for |*this|.
-  scoped_refptr<PasswordFormMetricsRecorder> metrics_recorder_;
-
   // When not null, then this is the object which |form_fetcher_| points to.
   std::unique_ptr<FormFetcher> owned_form_fetcher_;
 
