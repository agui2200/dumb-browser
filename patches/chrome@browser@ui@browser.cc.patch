diff --git a/chrome/browser/ui/browser.cc b/chrome/browser/ui/browser.cc
index 2c9d816e1aff..18226804b4af 100644
--- a/chrome/browser/ui/browser.cc
+++ b/chrome/browser/ui/browser.cc
@@ -74,7 +74,6 @@
 #include "chrome/browser/profiles/profile.h"
 #include "chrome/browser/profiles/profile_destroyer.h"
 #include "chrome/browser/profiles/profile_manager.h"
-#include "chrome/browser/profiles/profile_metrics.h"
 #include "chrome/browser/profiles/profiles_state.h"
 #include "chrome/browser/repost_form_warning_controller.h"
 #include "chrome/browser/resource_coordinator/tab_load_tracker.h"
@@ -154,7 +153,6 @@
 #include "components/blocked_content/list_item_position.h"
 #include "components/blocked_content/popup_blocker.h"
 #include "components/blocked_content/popup_blocker_tab_helper.h"
-#include "components/blocked_content/popup_tracker.h"
 #include "components/bookmarks/browser/bookmark_model.h"
 #include "components/bookmarks/browser/bookmark_utils.h"
 #include "components/bookmarks/common/bookmark_pref_names.h"
@@ -168,20 +166,15 @@
 #include "components/keep_alive_registry/keep_alive_types.h"
 #include "components/keep_alive_registry/scoped_keep_alive.h"
 #include "components/omnibox/browser/location_bar_model_impl.h"
-#include "components/page_load_metrics/browser/metrics_web_contents_observer.h"
-#include "components/page_load_metrics/common/page_load_metrics.mojom.h"
 #include "components/paint_preview/buildflags/buildflags.h"
 #include "components/permissions/permission_request_manager.h"
 #include "components/prefs/pref_service.h"
-#include "components/safe_browsing/content/triggers/ad_redirect_trigger.h"
 #include "components/search/search.h"
 #include "components/security_state/content/content_utils.h"
 #include "components/security_state/core/security_state.h"
 #include "components/sessions/content/session_tab_helper.h"
 #include "components/sessions/core/session_types.h"
 #include "components/sessions/core/tab_restore_service.h"
-#include "components/startup_metric_utils/browser/startup_metric_utils.h"
-#include "components/subresource_filter/content/browser/content_subresource_filter_throttle_manager.h"
 #include "components/translate/core/browser/language_state.h"
 #include "components/user_manager/user_manager.h"
 #include "components/viz/common/surfaces/surface_id.h"
@@ -500,8 +493,6 @@ Browser::Browser(const CreateParams& params)
 
   UpdateBookmarkBarState(BOOKMARK_BAR_STATE_CHANGE_INIT);
 
-  ProfileMetrics::LogProfileLaunch(profile_);
-
   if (params.skip_window_init_for_testing)
     return;
 
@@ -1438,10 +1429,6 @@ void Browser::OnDidBlockNavigation(
       framebust_helper->AddBlockedUrl(blocked_url, base::BindOnce(on_click));
     }
   }
-  if (auto* trigger =
-          safe_browsing::AdRedirectTrigger::FromWebContents(web_contents)) {
-    trigger->OnDidBlockNavigation(initiator_url);
-  }
 }
 
 content::PictureInPictureResult Browser::EnterPictureInPicture(
@@ -1516,10 +1503,7 @@ bool Browser::ShouldShowStaleContentOnEviction(content::WebContents* source) {
 bool Browser::IsFrameLowPriority(
     const content::WebContents* web_contents,
     const content::RenderFrameHost* render_frame_host) {
-  const auto* throttle_manager = subresource_filter::
-      ContentSubresourceFilterThrottleManager::FromWebContents(web_contents);
-  return throttle_manager &&
-         throttle_manager->IsFrameTaggedAsAd(render_frame_host);
+  return false;
 }
 
 void Browser::MediaWatchTimeChanged(
@@ -1543,7 +1527,6 @@ void Browser::OnWindowDidShow() {
     return;
   window_has_shown_ = true;
 
-  startup_metric_utils::RecordBrowserWindowDisplay(base::TimeTicks::Now());
 
   // Nothing to do for non-tabbed windows.
   if (!is_type_normal())
@@ -1600,12 +1583,6 @@ WebContents* Browser::OpenURLFromTab(WebContents* source,
 
   content::WebContents* navigated_or_inserted_contents =
       popup_delegate->nav_params()->navigated_or_inserted_contents;
-  if (is_popup && navigated_or_inserted_contents) {
-    auto* tracker = blocked_content::PopupTracker::CreateForWebContents(
-        navigated_or_inserted_contents, source, params.disposition);
-    tracker->set_is_trusted(params.triggering_event_info !=
-                            blink::TriggeringEventInfo::kFromUntrustedEvent);
-  }
 
   return navigated_or_inserted_contents;
 }
@@ -1659,13 +1636,6 @@ void Browser::AddNewContents(WebContents* source,
   }
 #endif
 
-  // At this point the |new_contents| is beyond the popup blocker, but we use
-  // the same logic for determining if the popup tracker needs to be attached.
-  if (source && blocked_content::ConsiderForPopupBlocking(disposition)) {
-    blocked_content::PopupTracker::CreateForWebContents(new_contents.get(),
-                                                        source, disposition);
-  }
-
   chrome::AddWebContents(this, source, std::move(new_contents), target_url,
                          disposition, initial_rect);
 }
@@ -1695,18 +1665,6 @@ void Browser::SetContentsBounds(WebContents* source, const gfx::Rect& bounds) {
   if (is_type_normal())
     return;
 
-  page_load_metrics::mojom::PageLoadFeatures features;
-  features.features.push_back(blink::mojom::WebFeature::kMovedOrResizedPopup);
-  if (creation_timer_.Elapsed() > base::TimeDelta::FromSeconds(2)) {
-    // Additionally measure whether a popup was moved after creation, to
-    // distinguish between popups that reposition themselves after load and
-    // those which move popups continuously.
-    features.features.push_back(
-        blink::mojom::WebFeature::kMovedOrResizedPopup2sAfterCreation);
-  }
-
-  page_load_metrics::MetricsWebContentsObserver::RecordFeatureUsage(
-      source->GetMainFrame(), features);
   window_->SetBounds(bounds);
 }
 
@@ -2375,12 +2333,6 @@ void Browser::OnTabClosing(WebContents* contents) {
   // associated with their tab is still valid.
   WebContentsModalDialogManager::FromWebContents(contents)->CloseAllDialogs();
 
-  // Page load metrics need to be informed that the WebContents will soon be
-  // destroyed, so that upcoming visibility changes can be ignored.
-  page_load_metrics::MetricsWebContentsObserver* metrics_observer =
-      page_load_metrics::MetricsWebContentsObserver::FromWebContents(contents);
-  metrics_observer->WebContentsWillSoonBeDestroyed();
-
   exclusive_access_manager_->OnTabClosing(contents);
   SessionService* session_service =
       SessionServiceFactory::GetForProfile(profile_);
