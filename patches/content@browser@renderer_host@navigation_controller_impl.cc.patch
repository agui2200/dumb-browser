diff --git a/content/browser/renderer_host/navigation_controller_impl.cc b/content/browser/renderer_host/navigation_controller_impl.cc
index d50253cb9c4d..0871047a7eb1 100644
--- a/content/browser/renderer_host/navigation_controller_impl.cc
+++ b/content/browser/renderer_host/navigation_controller_impl.cc
@@ -84,8 +84,6 @@
 #include "media/base/mime_util.h"
 #include "net/base/escape.h"
 #include "net/http/http_status_code.h"
-#include "services/metrics/public/cpp/ukm_builders.h"
-#include "services/metrics/public/cpp/ukm_recorder.h"
 #include "skia/ext/platform_canvas.h"
 #include "third_party/blink/public/common/blob/blob_utils.h"
 #include "third_party/blink/public/common/mime_util/mime_util.h"
@@ -1041,25 +1039,6 @@ bool NavigationControllerImpl::RendererDidNavigate(
     details->previous_entry_index = -1;
   }
 
-  // TODO(altimin, crbug.com/933147): Remove this logic after we are done with
-  // implementing back-forward cache.
-
-  // Create a new metrics object or reuse the previous one depending on whether
-  // it's a main frame navigation or not.
-  scoped_refptr<BackForwardCacheMetrics> back_forward_cache_metrics =
-      BackForwardCacheMetrics::CreateOrReuseBackForwardCacheMetrics(
-          GetLastCommittedEntry(), !rfh->GetParent(),
-          params.document_sequence_number);
-  // Notify the last active entry that we have navigated away.
-  if (!rfh->GetParent() && !is_same_document_navigation) {
-    if (NavigationEntryImpl* navigation_entry = GetLastCommittedEntry()) {
-      if (auto* metrics = navigation_entry->back_forward_cache_metrics()) {
-        metrics->MainFrameDidNavigateAwayFromDocument(rfh, details,
-                                                      navigation_request);
-      }
-    }
-  }
-
   // If there is a pending entry at this point, it should have a SiteInstance,
   // except for restored entries.
   bool was_restored = false;
@@ -1171,15 +1150,6 @@ bool NavigationControllerImpl::RendererDidNavigate(
   NavigationEntryImpl* active_entry = GetLastCommittedEntry();
   active_entry->SetTimestamp(timestamp);
   active_entry->SetHttpStatusCode(params.http_status_code);
-  // TODO(altimin, crbug.com/933147): Remove this logic after we are done with
-  // implementing back-forward cache.
-  if (!active_entry->back_forward_cache_metrics()) {
-    active_entry->set_back_forward_cache_metrics(
-        std::move(back_forward_cache_metrics));
-  }
-  active_entry->back_forward_cache_metrics()->DidCommitNavigation(
-      navigation_request,
-      back_forward_cache_.IsAllowed(navigation_request->GetURL()));
 
   // Grab the corresponding FrameNavigationEntry for a few updates, but only if
   // the SiteInstance matches (to avoid updating the wrong entry by mistake).
@@ -1571,7 +1541,7 @@ void NavigationControllerImpl::RendererDidNavigateToNewPage(
 
   SetShouldSkipOnBackForwardUIIfNeeded(
       replace_entry, previous_document_was_activated,
-      request->IsRendererInitiated(), request->GetPreviousPageUkmSourceId());
+      request->IsRendererInitiated());
 
   InsertOrReplaceEntry(std::move(new_entry), replace_entry,
                        !request->post_commit_error_page_html().empty());
@@ -1861,7 +1831,7 @@ void NavigationControllerImpl::RendererDidNavigateNewSubframe(
 
   SetShouldSkipOnBackForwardUIIfNeeded(
       replace_entry, previous_document_was_activated,
-      request->IsRendererInitiated(), request->GetPreviousPageUkmSourceId());
+      request->IsRendererInitiated());
 
   // TODO(creis): Update this to add the frame_entry if we can't find the one
   // to replace, which can happen due to a unique name change. See
@@ -3660,8 +3630,7 @@ void NavigationControllerImpl::SetGetTimestampCallbackForTest(
 void NavigationControllerImpl::SetShouldSkipOnBackForwardUIIfNeeded(
     bool replace_entry,
     bool previous_document_was_activated,
-    bool is_renderer_initiated,
-    ukm::SourceId previous_page_load_ukm_source_id) {
+    bool is_renderer_initiated) {
   // Note that for a subframe, previous_document_was_activated is true if the
   // gesture happened in any subframe (propagated to main frame) or in the main
   // frame itself.
@@ -3684,11 +3653,6 @@ void NavigationControllerImpl::SetShouldSkipOnBackForwardUIIfNeeded(
   SetSkippableForSameDocumentEntries(last_committed_entry_index_, true);
   UMA_HISTOGRAM_BOOLEAN("Navigation.BackForward.SetShouldSkipOnBackForwardUI",
                         true);
-
-  // Log UKM with the URL we are navigating away from.
-  ukm::builders::HistoryManipulationIntervention(
-      previous_page_load_ukm_source_id)
-      .Record(ukm::UkmRecorder::Get());
 }
 
 void NavigationControllerImpl::SetSkippableForSameDocumentEntries(
