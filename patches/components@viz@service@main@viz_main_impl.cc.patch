diff --git a/components/viz/service/main/viz_main_impl.cc b/components/viz/service/main/viz_main_impl.cc
index ab67d65ffa88..0596fd36ccce 100644
--- a/components/viz/service/main/viz_main_impl.cc
+++ b/components/viz/service/main/viz_main_impl.cc
@@ -21,8 +21,6 @@
 #include "gpu/ipc/service/gpu_init.h"
 #include "gpu/ipc/service/gpu_watchdog_thread.h"
 #include "media/gpu/buildflags.h"
-#include "services/metrics/public/cpp/delegating_ukm_recorder.h"
-#include "services/metrics/public/cpp/mojo_ukm_recorder.h"
 #include "skia/ext/legacy_display_globals.h"
 
 namespace {
@@ -86,13 +84,6 @@ VizMainImpl::VizMainImpl(Delegate* delegate,
         viz_compositor_thread_runner_->task_runner());
   }
 
-  if (!gpu_init_->gpu_info().in_process_gpu && dependencies_.ukm_recorder) {
-    // NOTE: If the GPU is running in the browser process, we can use the
-    // browser's UKMRecorder.
-    ukm::DelegatingUkmRecorder::Get()->AddDelegate(
-        dependencies_.ukm_recorder->GetWeakPtr());
-  }
-
   gpu_service_ = std::make_unique<GpuServiceImpl>(
       gpu_init_->gpu_info(), gpu_init_->TakeWatchdogThread(), io_task_runner(),
       gpu_init_->gpu_feature_info(), gpu_init_->gpu_preferences(),
@@ -119,10 +110,6 @@ VizMainImpl::~VizMainImpl() {
   // this thread so there is no need to shutdown viz first.
   viz_compositor_thread_runner_ = nullptr;
   viz_compositor_thread_runner_impl_.reset();
-
-  if (dependencies_.ukm_recorder)
-    ukm::DelegatingUkmRecorder::Get()->RemoveDelegate(
-        dependencies_.ukm_recorder.get());
 }
 
 void VizMainImpl::BindAssociated(
