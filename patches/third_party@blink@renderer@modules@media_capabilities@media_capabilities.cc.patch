diff --git a/third_party/blink/renderer/modules/media_capabilities/media_capabilities.cc b/third_party/blink/renderer/modules/media_capabilities/media_capabilities.cc
index 5021f8d6d38e..77b1e228f062 100644
--- a/third_party/blink/renderer/modules/media_capabilities/media_capabilities.cc
+++ b/third_party/blink/renderer/modules/media_capabilities/media_capabilities.cc
@@ -875,40 +875,6 @@ bool MediaCapabilities::EnsureLearningPredictors(
     ExecutionContext* execution_context) {
   DCHECK(execution_context && !execution_context->IsContextDestroyed());
 
-  // One or both of these will have been bound in an earlier pass.
-  if (bad_window_predictor_.is_bound() || nnr_predictor_.is_bound())
-    return true;
-
-  // MediaMetricsProvider currently only exposed via render frame.
-  // TODO(chcunningham): Expose in worker contexts pending outcome of
-  // media-learning experiments.
-  if (execution_context->IsWorkerGlobalScope())
-    return false;
-
-  scoped_refptr<base::SingleThreadTaskRunner> task_runner =
-      execution_context->GetTaskRunner(TaskType::kMediaElementEvent);
-
-  mojo::Remote<media::mojom::blink::MediaMetricsProvider> metrics_provider;
-  execution_context->GetBrowserInterfaceBroker().GetInterface(
-      metrics_provider.BindNewPipeAndPassReceiver(task_runner));
-
-  if (!metrics_provider)
-    return false;
-
-  if (GetLearningBadWindowThreshold() != -1.0) {
-    DCHECK_GE(GetLearningBadWindowThreshold(), 0);
-    metrics_provider->AcquireLearningTaskController(
-        media::learning::tasknames::kConsecutiveBadWindows,
-        bad_window_predictor_.BindNewPipeAndPassReceiver(task_runner));
-  }
-
-  if (GetLearningNnrThreshold() != -1.0) {
-    DCHECK_GE(GetLearningNnrThreshold(), 0);
-    metrics_provider->AcquireLearningTaskController(
-        media::learning::tasknames::kConsecutiveNNRs,
-        nnr_predictor_.BindNewPipeAndPassReceiver(task_runner));
-  }
-
   return bad_window_predictor_.is_bound() || nnr_predictor_.is_bound();
 }
 
