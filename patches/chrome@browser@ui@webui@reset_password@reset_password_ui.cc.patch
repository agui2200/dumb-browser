diff --git a/chrome/browser/ui/webui/reset_password/reset_password_ui.cc b/chrome/browser/ui/webui/reset_password/reset_password_ui.cc
index adfeeab4f218..4716ff009bde 100644
--- a/chrome/browser/ui/webui/reset_password/reset_password_ui.cc
+++ b/chrome/browser/ui/webui/reset_password/reset_password_ui.cc
@@ -14,10 +14,6 @@
 #include "chrome/browser/ui/webui/reset_password/reset_password.mojom.h"
 #include "chrome/common/url_constants.h"
 #include "chrome/grit/browser_resources.h"
-#include "components/safe_browsing/content/password_protection/metrics_util.h"
-#include "components/safe_browsing/content/password_protection/password_protection_service.h"
-#include "components/safe_browsing/core/common/safe_browsing_prefs.h"
-#include "components/safe_browsing/core/proto/csd.pb.h"
 #include "components/strings/grit/components_strings.h"
 #include "components/url_formatter/url_formatter.h"
 #include "components/user_prefs/user_prefs.h"
@@ -58,24 +54,10 @@ class ResetPasswordHandlerImpl : public mojom::ResetPasswordHandler {
   ~ResetPasswordHandlerImpl() override {}
 
   // mojom::ResetPasswordHandler overrides:
-  void HandlePasswordReset() override {
-    Profile* profile =
-        Profile::FromBrowserContext(web_contents_->GetBrowserContext());
-    safe_browsing::ChromePasswordProtectionService* service = safe_browsing::
-        ChromePasswordProtectionService::GetPasswordProtectionService(profile);
-    if (service) {
-      service->OnUserAction(
-          web_contents_,
-          service->reused_password_account_type_for_last_shown_warning(),
-          RequestOutcome::UNKNOWN,
-          LoginReputationClientResponse::VERDICT_TYPE_UNSPECIFIED,
-          /*verdict_token=*/"", safe_browsing::WarningUIType::INTERSTITIAL,
-          safe_browsing::WarningAction::CHANGE_PASSWORD);
-    }
-  }
+  void HandlePasswordReset() override {}
 
  private:
-  content::WebContents* web_contents_;
+  ALLOW_UNUSED_TYPE content::WebContents* web_contents_;
   mojo::Receiver<mojom::ResetPasswordHandler> receiver_;
 
   DISALLOW_COPY_AND_ASSIGN(ResetPasswordHandlerImpl);
