diff --git a/chrome/browser/enterprise/reporting/report_scheduler_desktop.cc b/chrome/browser/enterprise/reporting/report_scheduler_desktop.cc
index 6e6612c4788a..ec6e4261bd8b 100644
--- a/chrome/browser/enterprise/reporting/report_scheduler_desktop.cc
+++ b/chrome/browser/enterprise/reporting/report_scheduler_desktop.cc
@@ -7,7 +7,6 @@
 #include "base/bind.h"
 #include "chrome/browser/browser_process.h"
 #include "chrome/browser/enterprise/reporting/prefs.h"
-#include "chrome/browser/upgrade_detector/build_state.h"
 #include "chrome/common/chrome_constants.h"
 #include "chrome/common/pref_names.h"
 #include "components/prefs/pref_service.h"
@@ -41,8 +40,6 @@ ReportSchedulerDesktop::~ReportSchedulerDesktop() {
   // the (now obsolete) Enterprise.CloudReportingStaleProfileCount metric has
   // shown that this very rarely happens, with 99.23% of samples reporting no
   // stale profiles and 0.72% reporting a single stale profile.
-  if (ShouldReportUpdates())
-    g_browser_process->GetBuildState()->RemoveObserver(this);
 }
 
 PrefService* ReportSchedulerDesktop::GetLocalState() {
@@ -55,12 +52,6 @@ void ReportSchedulerDesktop::StartWatchingUpdatesIfNeeded(
   if (!ShouldReportUpdates())
     return;
 
-  auto* build_state = g_browser_process->GetBuildState();
-  if (build_state->HasObserver(this))
-    // Already watching browser updates.
-    return;
-
-  build_state->AddObserver(this);
 
   // Generate and upload a basic report immediately if the version has
   // changed since the last upload and the last upload was less than 24h
@@ -75,9 +66,6 @@ void ReportSchedulerDesktop::StartWatchingUpdatesIfNeeded(
 }
 
 void ReportSchedulerDesktop::StopWatchingUpdates() {
-  if (ShouldReportUpdates()) {
-    g_browser_process->GetBuildState()->RemoveObserver(this);
-  }
 }
 
 void ReportSchedulerDesktop::SaveLastUploadVersion() {
@@ -87,15 +75,5 @@ void ReportSchedulerDesktop::SaveLastUploadVersion() {
   }
 }
 
-void ReportSchedulerDesktop::OnUpdate(const BuildState* build_state) {
-  DCHECK(ShouldReportUpdates());
-  // A new version has been detected on the machine and a restart is now needed
-  // for it to take effect. Send a basic report (without profile info)
-  // immediately.
-  if (!trigger_report_callback_.is_null()) {
-    trigger_report_callback_.Run(
-        ReportScheduler::ReportTrigger::kTriggerUpdate);
-  }
-}
 
 }  // namespace enterprise_reporting
