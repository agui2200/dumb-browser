diff --git a/third_party/blink/renderer/core/frame/navigator_ua.cc b/third_party/blink/renderer/core/frame/navigator_ua.cc
index 3d03eb2f8df6..f272506c8be5 100644
--- a/third_party/blink/renderer/core/frame/navigator_ua.cc
+++ b/third_party/blink/renderer/core/frame/navigator_ua.cc
@@ -6,11 +6,6 @@
 
 #include "base/compiler_specific.h"
 #include "base/containers/span.h"
-#include "third_party/blink/public/common/privacy_budget/identifiability_metric_builder.h"
-#include "third_party/blink/public/common/privacy_budget/identifiability_study_settings.h"
-#include "third_party/blink/public/common/privacy_budget/identifiable_surface.h"
-#include "third_party/blink/public/common/privacy_budget/identifiable_token.h"
-#include "third_party/blink/public/common/privacy_budget/identifiable_token_builder.h"
 #include "third_party/blink/public/mojom/web_feature/web_feature.mojom-blink.h"
 #include "third_party/blink/renderer/core/execution_context/execution_context.h"
 
@@ -29,13 +24,12 @@ NavigatorUAData* NavigatorUA::userAgentData() {
   ua_data->SetModel(String::FromUTF8(metadata.model));
   ua_data->SetUAFullVersion(String::FromUTF8(metadata.full_version));
 
-  MaybeRecordMetrics(*ua_data);
-
   return ua_data;
 }
 
 // Records identifiability study metrics if the user is in the study.
 void NavigatorUA::MaybeRecordMetrics(const NavigatorUAData& ua_data) {
+#if 0
   constexpr auto identifiable_surface = IdentifiableSurface::FromTypeAndToken(
       IdentifiableSurface::Type::kWebFeature, WebFeature::kNavigatorUserAgent);
   if (LIKELY(!IdentifiabilityStudySettings::Get()->ShouldSample(
@@ -62,6 +56,7 @@ void NavigatorUA::MaybeRecordMetrics(const NavigatorUAData& ua_data) {
   IdentifiabilityMetricBuilder(context->UkmSourceID())
       .Set(identifiable_surface, token_builder.GetToken())
       .Record(context->UkmRecorder());
+#endif
 }
 
 }  // namespace blink
