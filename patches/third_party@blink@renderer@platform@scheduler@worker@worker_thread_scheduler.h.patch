diff --git a/third_party/blink/renderer/platform/scheduler/worker/worker_thread_scheduler.h b/third_party/blink/renderer/platform/scheduler/worker/worker_thread_scheduler.h
index 190f25ffa088..fe31c6e55df5 100644
--- a/third_party/blink/renderer/platform/scheduler/worker/worker_thread_scheduler.h
+++ b/third_party/blink/renderer/platform/scheduler/worker/worker_thread_scheduler.h
@@ -22,10 +22,6 @@ class SequenceManager;
 }
 }  // namespace base
 
-namespace ukm {
-class UkmRecorder;
-}
-
 namespace blink {
 namespace scheduler {
 
@@ -117,19 +113,11 @@ class PLATFORM_EXPORT WorkerThreadScheduler : public NonMainThreadSchedulerImpl,
 
   HashSet<WorkerScheduler*>& GetWorkerSchedulersForTesting();
 
-  void SetUkmTaskSamplingRateForTest(double rate);
-  void SetUkmRecorderForTest(std::unique_ptr<ukm::UkmRecorder> ukm_recorder);
-
   virtual void PerformMicrotaskCheckpoint();
 
  private:
   void MaybeStartLongIdlePeriod();
 
-  void RecordTaskUkm(
-      NonMainThreadTaskQueue* worker_task_queue,
-      const base::sequence_manager::Task& task,
-      const base::sequence_manager::TaskQueue::TaskTiming& task_timing);
-
   const ThreadType thread_type_;
   IdleHelper idle_helper_;
   bool initialized_;
@@ -155,9 +143,6 @@ class PLATFORM_EXPORT WorkerThreadScheduler : public NonMainThreadSchedulerImpl,
   // The status of the parent frame when the worker was created.
   const FrameStatus initial_frame_status_;
 
-  const ukm::SourceId ukm_source_id_;
-  std::unique_ptr<ukm::UkmRecorder> ukm_recorder_;
-
   DISALLOW_COPY_AND_ASSIGN(WorkerThreadScheduler);
 };
 
