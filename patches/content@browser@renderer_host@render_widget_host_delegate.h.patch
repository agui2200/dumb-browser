diff --git a/content/browser/renderer_host/render_widget_host_delegate.h b/content/browser/renderer_host/render_widget_host_delegate.h
index c44d65837280..3eac0d2d8fba 100644
--- a/content/browser/renderer_host/render_widget_host_delegate.h
+++ b/content/browser/renderer_host/render_widget_host_delegate.h
@@ -15,7 +15,6 @@
 #include "components/viz/common/vertical_scroll_direction.h"
 #include "content/common/content_export.h"
 #include "content/public/common/drop_data.h"
-#include "services/metrics/public/cpp/ukm_recorder.h"
 #include "third_party/blink/public/common/input/web_input_event.h"
 #include "third_party/blink/public/common/page/drag_operation.h"
 #include "third_party/blink/public/mojom/frame/lifecycle.mojom.h"
@@ -33,10 +32,6 @@ class Point;
 class Size;
 }
 
-namespace rappor {
-class Sample;
-}
-
 namespace content {
 
 class BrowserAccessibilityManager;
@@ -301,21 +296,10 @@ class CONTENT_EXPORT RenderWidgetHostDelegate {
   virtual void FocusOwningWebContents(
       RenderWidgetHostImpl* render_widget_host) {}
 
-  // Augment a Rappor sample with eTLD+1 context. The caller is still
-  // responsible for logging the sample to the RapporService. Returns false
-  // if the eTLD+1 is not known for |render_widget_host|.
-  virtual bool AddDomainInfoToRapporSample(rappor::Sample* sample);
-
   // Return this object cast to a WebContents, if it is one. If the object is
   // not a WebContents, returns nullptr.
   virtual WebContents* GetAsWebContents();
 
-  // Get the UKM source ID for current content. This is used for providing
-  // data about the content to the URL-keyed metrics service.
-  // Note: Prefer using RenderFrameHost::GetPageUkmSourceId wherever
-  // possible.
-  virtual ukm::SourceId GetCurrentPageUkmSourceId();
-
   // Returns true if there is context menu shown on page.
   virtual bool IsShowingContextMenuOnPage() const;
 
