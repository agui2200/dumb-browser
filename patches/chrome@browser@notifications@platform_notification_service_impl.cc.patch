diff --git a/chrome/browser/notifications/platform_notification_service_impl.cc b/chrome/browser/notifications/platform_notification_service_impl.cc
index eda720345d79..d55e85c90542 100644
--- a/chrome/browser/notifications/platform_notification_service_impl.cc
+++ b/chrome/browser/notifications/platform_notification_service_impl.cc
@@ -18,7 +18,6 @@
 #include "build/build_config.h"
 #include "chrome/browser/browser_process.h"
 #include "chrome/browser/content_settings/host_content_settings_map_factory.h"
-#include "chrome/browser/metrics/ukm_background_recorder_service.h"
 #include "chrome/browser/notifications/metrics/notification_metrics_logger.h"
 #include "chrome/browser/notifications/metrics/notification_metrics_logger_factory.h"
 #include "chrome/browser/notifications/notification_display_service.h"
@@ -239,9 +238,6 @@ void PlatformNotificationServiceImpl::DisplayPersistentNotification(
   NotificationDisplayServiceFactory::GetForProfile(profile_)->Display(
       NotificationHandler::Type::WEB_PERSISTENT, notification,
       std::move(metadata));
-
-  NotificationMetricsLoggerFactory::GetForBrowserContext(profile_)
-      ->LogPersistentNotificationShown();
 }
 
 void PlatformNotificationServiceImpl::CloseNotification(
@@ -324,23 +320,6 @@ int64_t PlatformNotificationServiceImpl::ReadNextPersistentNotificationId() {
 void PlatformNotificationServiceImpl::RecordNotificationUkmEvent(
     const NotificationDatabaseData& data) {
   DCHECK_CURRENTLY_ON(BrowserThread::UI);
-  if (g_browser_process->IsShuttingDown() || !profile_)
-    return;
-
-  // Only record the event if a user explicitly interacted with the notification
-  // to close it.
-  if (data.closed_reason != NotificationDatabaseData::ClosedReason::USER &&
-      data.num_clicks == 0 && data.num_action_button_clicks == 0) {
-    return;
-  }
-
-  // Check if this event can be recorded via UKM.
-  auto* ukm_background_service =
-      ukm::UkmBackgroundRecorderFactory::GetForProfile(profile_);
-  ukm_background_service->GetBackgroundSourceIdIfAllowed(
-      url::Origin::Create(data.origin),
-      base::BindOnce(&PlatformNotificationServiceImpl::DidGetBackgroundSourceId,
-                     std::move(ukm_recorded_closure_for_testing_), data));
 }
 
 NotificationTriggerScheduler*
