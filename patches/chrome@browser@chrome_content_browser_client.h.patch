diff --git a/chrome/browser/chrome_content_browser_client.h b/chrome/browser/chrome_content_browser_client.h
index 758a9e09992d0..9eb91c0d2dc31 100644
--- a/chrome/browser/chrome_content_browser_client.h
+++ b/chrome/browser/chrome_content_browser_client.h
@@ -62,12 +62,6 @@ enum class SmsFetchFailureType;
 struct ServiceWorkerVersionBaseInfo;
 }  // namespace content
 
-namespace safe_browsing {
-class RealTimeUrlLookupServiceBase;
-class SafeBrowsingService;
-class UrlCheckerDelegate;
-}  // namespace safe_browsing
-
 namespace sandbox {
 class SeatbeltExecClient;
 }  // namespace sandbox
@@ -231,8 +225,6 @@ class ChromeContentBrowserClient : public content::ContentBrowserClient {
   void AppendExtraCommandLineSwitches(base::CommandLine* command_line,
                                       int child_process_id) override;
   std::string GetApplicationClientGUIDForQuarantineCheck() override;
-  download::QuarantineConnectionCallback GetQuarantineConnectionCallback()
-      override;
   std::string GetApplicationLocale() override;
   std::string GetAcceptLangs(content::BrowserContext* context) override;
   gfx::ImageSkia GetDefaultFavicon() override;
@@ -647,10 +639,12 @@ class ChromeContentBrowserClient : public content::ContentBrowserClient {
       bool user_gesture,
       blink::NavigationDownloadPolicy* download_policy) override;
 
+#if 0
   blink::mojom::InterestCohortPtr GetInterestCohortForJsApi(
       content::WebContents* web_contents,
       const GURL& url,
       const absl::optional<url::Origin>& top_frame_origin) override;
+#endif
 
   bool IsBluetoothScanningBlocked(content::BrowserContext* browser_context,
                                   const url::Origin& requesting_origin,
@@ -706,7 +700,6 @@ class ChromeContentBrowserClient : public content::ContentBrowserClient {
   bool ShouldAllowInsecurePrivateNetworkRequests(
       content::BrowserContext* browser_context,
       const url::Origin& origin) override;
-  ukm::UkmService* GetUkmService() override;
 
   void OnKeepaliveRequestStarted(
       content::BrowserContext* browser_context) override;
@@ -776,6 +769,7 @@ class ChromeContentBrowserClient : public content::ContentBrowserClient {
       bool allow);
 #endif
 
+#if 0
   // Returns the existing UrlCheckerDelegate object if it is already created.
   // Otherwise, creates a new one and returns it. Updates the
   // |allowlist_domains| in the UrlCheckerDelegate object before returning. It
@@ -798,6 +792,7 @@ class ChromeContentBrowserClient : public content::ContentBrowserClient {
       content::BrowserContext* browser_context,
       bool is_enterprise_lookup_enabled,
       bool is_consumer_lookup_enabled);
+#endif
 
   void SafeBrowsingWebApiHandshakeChecked(
       std::unique_ptr<safe_browsing::WebApiHandshakeChecker> checker,
@@ -813,9 +808,11 @@ class ChromeContentBrowserClient : public content::ContentBrowserClient {
   // Parts are deleted in the reverse order they are added.
   std::vector<ChromeContentBrowserClientParts*> extra_parts_;
 
+#if 0
   scoped_refptr<safe_browsing::SafeBrowsingService> safe_browsing_service_;
   scoped_refptr<safe_browsing::UrlCheckerDelegate>
       safe_browsing_url_checker_delegate_;
+#endif
 
   StartupData startup_data_;
 
