diff --git a/components/translate/core/browser/translate_ranker.h b/components/translate/core/browser/translate_ranker.h
index 4b62b1c048d6..1c8b60b2c21c 100644
--- a/components/translate/core/browser/translate_ranker.h
+++ b/components/translate/core/browser/translate_ranker.h
@@ -11,7 +11,6 @@
 
 #include "base/macros.h"
 #include "components/keyed_service/core/keyed_service.h"
-#include "services/metrics/public/cpp/ukm_source_id.h"
 
 namespace metrics {
 class TranslateEventProto;
@@ -40,14 +39,6 @@ class TranslateRanker : public KeyedService {
   virtual void FlushTranslateEvents(
       std::vector<metrics::TranslateEventProto>* events) = 0;
 
-  // Record |translate_event| with the given |event_type| and |url|.
-  // |event_type| must be one of the values defined by
-  // metrics::TranslateEventProto::EventType.
-  virtual void RecordTranslateEvent(
-      int event_type,
-      ukm::SourceId ukm_source_id,
-      metrics::TranslateEventProto* translate_event) = 0;
-
   // If override for the given |event_type| is enabled, will return true and add
   // |event_type| to |translate_event.decision_overrides()|. If override is
   // disabled, returns false and finalize and record |translate_event| with
@@ -55,9 +46,7 @@ class TranslateRanker : public KeyedService {
   // must be one of the values defined by
   // metrics::TranslateEventProto::EventType.
   virtual bool ShouldOverrideDecision(
-      int event_type,
-      ukm::SourceId ukm_source_id,
-      metrics::TranslateEventProto* translate_event) = 0;
+      int event_type) = 0;
 
   // Override the default enabled/disabled state of translate event logging.
   virtual void EnableLogging(bool enable_logging) = 0;
