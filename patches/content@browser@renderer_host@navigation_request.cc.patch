diff --git a/content/browser/renderer_host/navigation_request.cc b/content/browser/renderer_host/navigation_request.cc
index c97f3d40a599..5a4f50776b10 100644
--- a/content/browser/renderer_host/navigation_request.cc
+++ b/content/browser/renderer_host/navigation_request.cc
@@ -102,7 +102,6 @@
 #include "net/http/http_request_headers.h"
 #include "net/http/http_status_code.h"
 #include "net/url_request/redirect_info.h"
-#include "services/metrics/public/cpp/ukm_source_id.h"
 #include "services/network/public/cpp/content_security_policy/content_security_policy.h"
 #include "services/network/public/cpp/cross_origin_embedder_policy.h"
 #include "services/network/public/cpp/cross_origin_resource_policy.h"
@@ -852,7 +851,6 @@ std::unique_ptr<NavigationRequest> NavigationRequest::CreateRendererInitiated(
           network::mojom::IPAddressSpace::kUnknown,
           /*web_bundle_physical_url=*/GURL(),
           /*base_url_override_for_web_bundle=*/GURL(),
-          /*document_ukm_source_id=*/ukm::kInvalidSourceId,
           frame_tree_node->pending_frame_policy(),
           /*force_enabled_origin_trials=*/std::vector<std::string>(),
           /*origin_isolated=*/false,
@@ -947,7 +945,6 @@ std::unique_ptr<NavigationRequest> NavigationRequest::CreateForCommit(
           network::mojom::IPAddressSpace::kUnknown,
           GURL() /* web_bundle_physical_url */,
           GURL() /* base_url_override_for_web_bundle */,
-          ukm::kInvalidSourceId /* document_ukm_source_id */,
           frame_tree_node->pending_frame_policy(),
           std::vector<std::string>() /* force_enabled_origin_trials */,
           false /* origin_isolated */,
@@ -1036,9 +1033,7 @@ NavigationRequest::NavigationRequest(
           frame_tree_node->current_frame_host()->GetRoutingID())),
       initiator_routing_id_(initiator_routing_id),
       client_security_state_(network::mojom::ClientSecurityState::New()),
-      coop_status_(frame_tree_node, common_params_->initiator_origin),
-      previous_page_ukm_source_id_(
-          frame_tree_node_->current_frame_host()->GetPageUkmSourceId()) {
+      coop_status_(frame_tree_node, common_params_->initiator_origin) {
   DCHECK(browser_initiated_ || common_params_->initiator_origin.has_value());
   DCHECK(!IsRendererDebugURL(common_params_->url));
   DCHECK(common_params_->method == "POST" || !common_params_->post_data);
@@ -1193,13 +1188,6 @@ NavigationRequest::NavigationRequest(
   // Add necessary headers that may not be present in the
   // mojom::BeginNavigationParams.
   if (entry) {
-    // TODO(altimin, crbug.com/933147): Remove this logic after we are done
-    // with implementing back-forward cache.
-    if (frame_tree_node->IsMainFrame() && entry->back_forward_cache_metrics()) {
-      entry->back_forward_cache_metrics()
-          ->MainFrameDidStartNavigationToDocument();
-    }
-
     // If this NavigationRequest is for the current pending entry, make sure
     // that we will discard the pending entry if all of associated its requests
     // go away, by creating a ref to it.
@@ -1737,10 +1725,6 @@ NavigationRequest::TakeCoepReporter() {
   return std::move(coep_reporter_);
 }
 
-ukm::SourceId NavigationRequest::GetPreviousPageUkmSourceId() {
-  return previous_page_ukm_source_id_;
-}
-
 void NavigationRequest::OnRequestRedirected(
     const net::RedirectInfo& redirect_info,
     network::mojom::URLResponseHeadPtr response_head) {
@@ -2690,8 +2674,6 @@ bool NavigationRequest::ShouldKeepErrorPageInCurrentProcess(int net_error) {
 }
 
 void NavigationRequest::OnRequestStarted(base::TimeTicks timestamp) {
-  frame_tree_node_->navigator().LogResourceRequestTime(timestamp,
-                                                       common_params_->url);
 }
 namespace {
 
@@ -3322,11 +3304,6 @@ void NavigationRequest::CommitNavigation() {
     }
   }
 
-  // Generate a UKM source and track it on NavigationRequest. This will be
-  // passed down to the blink::Document to be created, if any, and used for UKM
-  // source creation when navigation has successfully committed.
-  commit_params_->document_ukm_source_id = ukm::UkmRecorder::GetNewSourceID();
-
   blink::mojom::ServiceWorkerContainerInfoForClientPtr
       service_worker_container_info;
   if (service_worker_handle_) {
@@ -3340,8 +3317,7 @@ void NavigationRequest::CommitNavigation() {
         render_frame_host_->GetProcess()->GetID(),
         render_frame_host_->GetRoutingID(),
         render_frame_host_->cross_origin_embedder_policy(),
-        std::move(reporter_remote), &service_worker_container_info,
-        commit_params_->document_ukm_source_id);
+        std::move(reporter_remote), &service_worker_container_info);
   }
 
   if (web_bundle_handle_) {
@@ -4704,21 +4680,6 @@ int64_t NavigationRequest::GetNavigationId() {
   return navigation_id_;
 }
 
-ukm::SourceId NavigationRequest::GetNextPageUkmSourceId() {
-  // If the navigation is restoring from back-forward cache, the UKM id
-  // will get restored, too.
-  if (rfh_restored_from_back_forward_cache_)
-    return rfh_restored_from_back_forward_cache_->GetPageUkmSourceId();
-
-  // If this is the same document or a child frame navigation the UKM id will
-  // not change from it.
-  if (IsSameDocument() || !IsInMainFrame())
-    return previous_page_ukm_source_id_;
-
-  return ukm::ConvertToSourceId(navigation_id_,
-                                ukm::SourceIdObj::Type::NAVIGATION_ID);
-}
-
 const GURL& NavigationRequest::GetURL() {
   return common_params().url;
 }
