diff --git a/chrome/browser/ui/webui/autofill_and_password_manager_internals/internals_ui_handler.cc b/chrome/browser/ui/webui/autofill_and_password_manager_internals/internals_ui_handler.cc
index b1bb0b7e1f2de..53c4f38281f35 100644
--- a/chrome/browser/ui/webui/autofill_and_password_manager_internals/internals_ui_handler.cc
+++ b/chrome/browser/ui/webui/autofill_and_password_manager_internals/internals_ui_handler.cc
@@ -10,7 +10,6 @@
 #include "chrome/browser/browser_process.h"
 #include "chrome/browser/profiles/profile.h"
 #include "chrome/common/channel_info.h"
-#include "components/autofill/core/browser/logging/log_router.h"
 #include "components/embedder_support/user_agent_utils.h"
 #include "components/grit/dev_ui_components_resources.h"
 #include "components/version_info/version_info.h"
@@ -137,26 +136,12 @@ void InternalsUIHandler::OnResetCacheDone(const std::string& message) {
 }
 
 void InternalsUIHandler::StartSubscription() {
-  LogRouter* log_router =
-      get_log_router_function_.Run(Profile::FromWebUI(web_ui()));
-  if (!log_router)
-    return;
-
-  registered_with_log_router_ = true;
-
-  const auto& past_logs = log_router->RegisterReceiver(this);
-  for (const auto& entry : past_logs)
-    LogEntry(entry);
 }
 
 void InternalsUIHandler::EndSubscription() {
   if (!registered_with_log_router_)
     return;
   registered_with_log_router_ = false;
-  LogRouter* log_router =
-      get_log_router_function_.Run(Profile::FromWebUI(web_ui()));
-  if (log_router)
-    log_router->UnregisterReceiver(this);
 }
 
 void InternalsUIHandler::LogEntry(const base::Value& entry) {
