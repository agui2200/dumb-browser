diff --git a/chrome/browser/content_settings/sound_content_setting_observer.cc b/chrome/browser/content_settings/sound_content_setting_observer.cc
index 13ad04ccfb6e..1d72c217e178 100644
--- a/chrome/browser/content_settings/sound_content_setting_observer.cc
+++ b/chrome/browser/content_settings/sound_content_setting_observer.cc
@@ -13,12 +13,10 @@
 #include "components/content_settings/core/common/content_settings_utils.h"
 #include "components/pref_registry/pref_registry_syncable.h"
 #include "components/prefs/pref_service.h"
-#include "components/ukm/content/source_url_recorder.h"
 #include "content/public/browser/navigation_handle.h"
 #include "content/public/browser/render_view_host.h"
 #include "content/public/common/url_constants.h"
 #include "media/base/media_switches.h"
-#include "services/metrics/public/cpp/ukm_builders.h"
 #include "third_party/blink/public/common/associated_interfaces/associated_interface_provider.h"
 #include "third_party/blink/public/mojom/autoplay/autoplay.mojom.h"
 
@@ -28,7 +26,7 @@
 
 SoundContentSettingObserver::SoundContentSettingObserver(
     content::WebContents* contents)
-    : content::WebContentsObserver(contents), logged_site_muted_ukm_(false) {
+    : content::WebContentsObserver(contents) {
   Profile* profile =
       Profile::FromBrowserContext(web_contents()->GetBrowserContext());
   host_content_settings_map_ =
@@ -91,7 +89,6 @@ void SoundContentSettingObserver::DidFinishNavigation(
   if (navigation_handle->IsInMainFrame() && navigation_handle->HasCommitted() &&
       !navigation_handle->IsSameDocument()) {
     MuteOrUnmuteIfNecessary();
-    logged_site_muted_ukm_ = false;
   }
 }
 
@@ -132,6 +129,10 @@ void SoundContentSettingObserver::MuteOrUnmuteIfNecessary() {
 
   TabMutedReason reason = chrome::GetTabAudioMutedReason(web_contents());
 
+  // Do not unmute if we're muted due to audio indicator.
+  if (!mute && reason == TabMutedReason::AUDIO_INDICATOR)
+    return;
+
   // Do not override the decisions of an extension.
   if (reason == TabMutedReason::EXTENSION)
     return;
@@ -166,23 +167,9 @@ void SoundContentSettingObserver::CheckSoundBlocked(bool is_audible) {
             web_contents()->GetMainFrame());
     if (settings)
       settings->OnAudioBlocked();
-
-    RecordSiteMutedUKM();
   }
 }
 
-void SoundContentSettingObserver::RecordSiteMutedUKM() {
-  // We only want to log 1 event per navigation.
-  if (logged_site_muted_ukm_)
-    return;
-  logged_site_muted_ukm_ = true;
-
-  ukm::builders::Media_SiteMuted(
-      ukm::GetSourceIdForWebContentsDocument(web_contents()))
-      .SetMuteReason(GetSiteMutedReason())
-      .Record(ukm::UkmRecorder::Get());
-}
-
 SoundContentSettingObserver::MuteReason
 SoundContentSettingObserver::GetSiteMutedReason() {
   const GURL url = web_contents()->GetLastCommittedURL();
