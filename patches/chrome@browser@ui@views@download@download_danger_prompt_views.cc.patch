diff --git a/chrome/browser/ui/views/download/download_danger_prompt_views.cc b/chrome/browser/ui/views/download/download_danger_prompt_views.cc
index 4ece90d33c39..44e8f32cc8b4 100644
--- a/chrome/browser/ui/views/download/download_danger_prompt_views.cc
+++ b/chrome/browser/ui/views/download/download_danger_prompt_views.cc
@@ -6,7 +6,6 @@
 #include "chrome/browser/download/download_danger_prompt.h"
 
 #include "base/compiler_specific.h"
-#include "chrome/browser/download/download_stats.h"
 #include "chrome/browser/profiles/profile.h"
 #include "chrome/browser/safe_browsing/advanced_protection_status_manager.h"
 #include "chrome/browser/safe_browsing/advanced_protection_status_manager_factory.h"
@@ -113,11 +112,6 @@ DownloadDangerPromptViews::DownloadDangerPromptViews(
   message_body_label->SetAllowCharacterBreak(true);
 
   AddChildView(message_body_label);
-
-  RecordOpenedDangerousConfirmDialog(download_->GetDangerType());
-
-  chrome::RecordDialogCreation(
-      chrome::DialogIdentifier::DOWNLOAD_DANGER_PROMPT);
 }
 
 DownloadDangerPromptViews::~DownloadDangerPromptViews() {
@@ -205,17 +199,9 @@ base::string16 DownloadDangerPromptViews::GetMessageBody() const {
             download_->GetFileNameToReportUser().LossyDisplayName());
       }
       case download::DOWNLOAD_DANGER_TYPE_UNCOMMON_CONTENT: {
-        if (safe_browsing::AdvancedProtectionStatusManagerFactory::
-                GetForProfile(profile_)
-                    ->IsUnderAdvancedProtection()) {
-          return l10n_util::GetStringFUTF16(
-              IDS_PROMPT_UNCOMMON_DOWNLOAD_CONTENT_IN_ADVANCED_PROTECTION,
-              download_->GetFileNameToReportUser().LossyDisplayName());
-        } else {
           return l10n_util::GetStringFUTF16(
               IDS_PROMPT_UNCOMMON_DOWNLOAD_CONTENT,
               download_->GetFileNameToReportUser().LossyDisplayName());
-        }
       }
       case download::DOWNLOAD_DANGER_TYPE_POTENTIALLY_UNWANTED: {
         return l10n_util::GetStringFUTF16(
@@ -275,7 +261,6 @@ void DownloadDangerPromptViews::RunDone(Action action) {
     // completed, don't send any report.
     if (download_->IsDangerous() && !download_->IsDone()) {
       const bool accept = action == DownloadDangerPrompt::ACCEPT;
-      RecordDownloadDangerPrompt(accept, *download_);
       if (!download_->GetURL().is_empty() &&
           !content::DownloadItemUtils::GetBrowserContext(download_)
                ->IsOffTheRecord()) {
