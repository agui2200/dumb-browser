diff --git a/chrome/browser/renderer_host/chrome_render_widget_host_view_mac_delegate.mm b/chrome/browser/renderer_host/chrome_render_widget_host_view_mac_delegate.mm
index f54c77051fdf..f749463f7342 100644
--- a/chrome/browser/renderer_host/chrome_render_widget_host_view_mac_delegate.mm
+++ b/chrome/browser/renderer_host/chrome_render_widget_host_view_mac_delegate.mm
@@ -16,9 +16,7 @@
 #include "chrome/browser/ui/browser_finder.h"
 #include "chrome/common/url_constants.h"
 #include "components/prefs/pref_service.h"
-#include "components/spellcheck/browser/pref_names.h"
-#include "components/spellcheck/browser/spellcheck_platform.h"
-#include "components/spellcheck/common/spellcheck_panel.mojom.h"
+#include "components/spellcheck/spellcheck_buildflags.h"
 #include "components/web_modal/web_contents_modal_dialog_manager.h"
 #include "content/public/browser/render_frame_host.h"
 #include "content/public/browser/render_process_host.h"
@@ -113,37 +111,8 @@ - (BOOL)validateUserInterfaceItem:(id<NSValidatedUserInterfaceItem>)item
                       isValidItem:(BOOL*)valid {
   SEL action = [item action];
 
-  Profile* profile = Profile::FromBrowserContext(
-      _renderWidgetHost->GetProcess()->GetBrowserContext());
-  DCHECK(profile);
-  PrefService* pref = profile->GetPrefs();
-  const PrefService::Preference* spellCheckEnablePreference =
-      pref->FindPreference(spellcheck::prefs::kSpellCheckEnable);
-  DCHECK(spellCheckEnablePreference);
   const bool spellCheckUserModifiable =
-      spellCheckEnablePreference->IsUserModifiable();
-
-  // For now, this action is always enabled for render view;
-  // this is sub-optimal.
-  // TODO(suzhe): Plumb the "can*" methods up from WebCore.
-  if (action == @selector(checkSpelling:)) {
-    *valid = spellCheckUserModifiable &&
-             (RenderViewHost::From(_renderWidgetHost) != nullptr);
-    return YES;
-  }
-
-  // TODO(groby): Clarify who sends this and if toggleContinuousSpellChecking:
-  // is still necessary.
-  if (action == @selector(toggleContinuousSpellChecking:)) {
-    if ([(id)item respondsToSelector:@selector(setState:)]) {
-      NSCellStateValue checkedState =
-          pref->GetBoolean(spellcheck::prefs::kSpellCheckEnable) ? NSOnState
-                                                                 : NSOffState;
-      [(id)item setState:checkedState];
-    }
-    *valid = spellCheckUserModifiable;
-    return YES;
-  }
+      RenderViewHost::From(_renderWidgetHost) != nullptr;
 
   if (action == @selector(showGuessPanel:) ||
       action == @selector(toggleGrammarChecking:)) {
@@ -168,6 +137,7 @@ - (void)rendererHandledOverscrollEvent:(const ui::DidOverscrollParams&)params {
   [_historySwiper onOverscrolled:params];
 }
 
+#if BUILDFLAG(ENABLE_SPELLCHECK)
 // Spellchecking methods
 // The next five methods are implemented here since this class is the first
 // responder for anything in the browser.
@@ -241,6 +211,7 @@ - (void)toggleContinuousSpellChecking:(id)sender {
 }
 
 // END Spellchecking methods
+#endif
 
 // If a dialog is visible, make its window key. See becomeFirstResponder.
 - (void)makeAnyDialogKey {
