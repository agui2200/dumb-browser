diff --git a/content/browser/devtools/service_worker_devtools_agent_host.cc b/content/browser/devtools/service_worker_devtools_agent_host.cc
index 46c6708c4de5..7c05a8dfcf91 100644
--- a/content/browser/devtools/service_worker_devtools_agent_host.cc
+++ b/content/browser/devtools/service_worker_devtools_agent_host.cc
@@ -59,8 +59,6 @@ ServiceWorkerDevToolsAgentHost::ServiceWorkerDevToolsAgentHost(
     bool is_installed_version,
     base::Optional<network::CrossOriginEmbedderPolicy>
         cross_origin_embedder_policy,
-    mojo::PendingRemote<network::mojom::CrossOriginEmbedderPolicyReporter>
-        coep_reporter,
     const base::UnguessableToken& devtools_worker_token)
     : DevToolsAgentHostImpl(devtools_worker_token.ToString()),
       state_(WORKER_NOT_READY),
@@ -73,8 +71,7 @@ ServiceWorkerDevToolsAgentHost::ServiceWorkerDevToolsAgentHost(
       scope_(scope),
       version_installed_time_(is_installed_version ? base::Time::Now()
                                                    : base::Time()),
-      cross_origin_embedder_policy_(std::move(cross_origin_embedder_policy)),
-      coep_reporter_(std::move(coep_reporter)) {
+      cross_origin_embedder_policy_(std::move(cross_origin_embedder_policy)) {
   UpdateProcessHost();
   NotifyCreated();
 }
@@ -161,11 +158,8 @@ void ServiceWorkerDevToolsAgentHost::WorkerReadyForInspection(
 }
 
 void ServiceWorkerDevToolsAgentHost::UpdateCrossOriginEmbedderPolicy(
-    network::CrossOriginEmbedderPolicy cross_origin_embedder_policy,
-    mojo::PendingRemote<network::mojom::CrossOriginEmbedderPolicyReporter>
-        coep_reporter) {
+    network::CrossOriginEmbedderPolicy cross_origin_embedder_policy) {
   cross_origin_embedder_policy_ = std::move(cross_origin_embedder_policy);
-  coep_reporter_.Bind(std::move(coep_reporter));
 }
 
 void ServiceWorkerDevToolsAgentHost::WorkerRestarted(int worker_process_id,
@@ -223,16 +217,6 @@ void ServiceWorkerDevToolsAgentHost::UpdateLoaderFactories(
   }
   const url::Origin origin = url::Origin::Create(url_);
 
-  mojo::PendingRemote<network::mojom::CrossOriginEmbedderPolicyReporter>
-      coep_reporter_for_script_loader;
-  mojo::PendingRemote<network::mojom::CrossOriginEmbedderPolicyReporter>
-      coep_reporter_for_subresource_loader;
-  if (coep_reporter_) {
-    coep_reporter_->Clone(
-        coep_reporter_for_script_loader.InitWithNewPipeAndPassReceiver());
-    coep_reporter_->Clone(
-        coep_reporter_for_subresource_loader.InitWithNewPipeAndPassReceiver());
-  }
   // Use the default CrossOriginEmbedderPolicy if
   // |cross_origin_embedder_policy_| is nullopt. It's acceptable because the
   // factory bundles are updated with correct COEP value before any subresource
@@ -241,13 +225,11 @@ void ServiceWorkerDevToolsAgentHost::UpdateLoaderFactories(
       rph, worker_route_id_, origin,
       cross_origin_embedder_policy_ ? cross_origin_embedder_policy_.value()
                                     : network::CrossOriginEmbedderPolicy(),
-      std::move(coep_reporter_for_script_loader),
       ContentBrowserClient::URLLoaderFactoryType::kServiceWorkerScript);
   auto subresource_bundle = EmbeddedWorkerInstance::CreateFactoryBundle(
       rph, worker_route_id_, origin,
       cross_origin_embedder_policy_ ? cross_origin_embedder_policy_.value()
                                     : network::CrossOriginEmbedderPolicy(),
-      std::move(coep_reporter_for_subresource_loader),
       ContentBrowserClient::URLLoaderFactoryType::kServiceWorkerSubResource);
 
   auto* version = context_wrapper_->GetLiveVersion(version_id_);
@@ -268,7 +250,6 @@ ServiceWorkerDevToolsAgentHost::CreateNetworkFactoryParamsForDevTools() {
       net::IsolationInfo::Create(net::IsolationInfo::RequestType::kOther,
                                  origin, origin,
                                  net::SiteForCookies::FromOrigin(origin)),
-      /*coep_reporter=*/mojo::NullRemote(),
       static_cast<StoragePartitionImpl*>(rph->GetStoragePartition())
           ->CreateAuthCertObserverForServiceWorker(),
       /*debug_tag=*/"SWDTAH::CreateNetworkFactoryParamsForDevTools");
