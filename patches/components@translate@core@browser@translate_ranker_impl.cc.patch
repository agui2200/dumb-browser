diff --git a/components/translate/core/browser/translate_ranker_impl.cc b/components/translate/core/browser/translate_ranker_impl.cc
index 90a61e4f2463..f9b2e3fe42fc 100644
--- a/components/translate/core/browser/translate_ranker_impl.cc
+++ b/components/translate/core/browser/translate_ranker_impl.cc
@@ -28,9 +28,6 @@
 #include "components/translate/core/browser/translate_metrics_logger.h"
 #include "components/translate/core/common/translate_switches.h"
 #include "components/variations/variations_associated_data.h"
-#include "services/metrics/public/cpp/ukm_builders.h"
-#include "services/metrics/public/cpp/ukm_recorder.h"
-#include "services/metrics/public/cpp/ukm_source_id.h"
 #include "third_party/metrics_proto/translate_event.pb.h"
 #include "url/gurl.h"
 
@@ -151,10 +148,8 @@ void TranslateRankerFeatures::WriteTo(std::ostream& stream) const {
 }
 
 TranslateRankerImpl::TranslateRankerImpl(const base::FilePath& model_path,
-                                         const GURL& model_url,
-                                         ukm::UkmRecorder* ukm_recorder)
-    : ukm_recorder_(ukm_recorder),
-      is_uma_logging_enabled_(false),
+                                         const GURL& model_url)
+    : is_uma_logging_enabled_(false),
       is_query_enabled_(base::FeatureList::IsEnabled(kTranslateRankerQuery)),
       is_enforcement_enabled_(
           base::FeatureList::IsEnabled(kTranslateRankerEnforcement)),
@@ -324,40 +319,6 @@ void TranslateRankerImpl::FlushTranslateEvents(
   event_cache_.clear();
 }
 
-void TranslateRankerImpl::SendEventToUKM(
-    const metrics::TranslateEventProto& event,
-    ukm::SourceId ukm_source_id) {
-  if (!ukm_recorder_) {
-    DVLOG(3) << "No UKM service.";
-    return;
-  }
-
-  ukm::builders::Translate(ukm_source_id)
-      .SetSourceLanguage(base::HashMetricName(event.source_language()))
-      .SetTargetLanguage(base::HashMetricName(event.target_language()))
-      .SetCountry(base::HashMetricName(event.country()))
-      .SetAcceptCount(event.accept_count())
-      .SetDeclineCount(event.decline_count())
-      .SetIgnoreCount(event.ignore_count())
-      .SetRankerVersion(event.ranker_version())
-      .SetRankerResponse(event.ranker_response())
-      .SetEventType(event.event_type())
-      .Record(ukm_recorder_);
-}
-
-void TranslateRankerImpl::AddTranslateEvent(
-    const metrics::TranslateEventProto& event,
-    ukm::SourceId ukm_source_id) {
-  DCHECK(sequence_checker_.CalledOnValidSequence());
-  if (ukm_source_id != ukm::kInvalidSourceId) {
-    SendEventToUKM(event, ukm_source_id);
-  }
-  if (is_uma_logging_enabled_) {
-    DVLOG(3) << "Adding translate ranker event.";
-    event_cache_.push_back(event);
-  }
-}
-
 void TranslateRankerImpl::OnModelAvailable(std::unique_ptr<RankerModel> model) {
   DCHECK(sequence_checker_.CalledOnValidSequence());
   model_ = std::move(model);
@@ -367,33 +328,16 @@ bool TranslateRankerImpl::CheckModelLoaderForTesting() {
   return model_loader_ != nullptr;
 }
 
-void TranslateRankerImpl::RecordTranslateEvent(
-    int event_type,
-    ukm::SourceId ukm_source_id,
-    metrics::TranslateEventProto* translate_event) {
-  DCHECK(metrics::TranslateEventProto::EventType_IsValid(event_type));
-  translate_event->set_event_type(
-      static_cast<metrics::TranslateEventProto::EventType>(event_type));
-  translate_event->set_event_timestamp_sec(
-      (base::TimeTicks::Now() - base::TimeTicks()).InSeconds());
-  AddTranslateEvent(*translate_event, ukm_source_id);
-}
-
 bool TranslateRankerImpl::ShouldOverrideDecision(
-    int event_type,
-    ukm::SourceId ukm_source_id,
-    metrics::TranslateEventProto* translate_event) {
+    int event_type) {
   DCHECK(metrics::TranslateEventProto::EventType_IsValid(event_type));
   if ((event_type == metrics::TranslateEventProto::MATCHES_PREVIOUS_LANGUAGE &&
        is_previous_language_matches_override_enabled_) ||
       event_type ==
           metrics::TranslateEventProto::LANGUAGE_DISABLED_BY_AUTO_BLACKLIST) {
-    translate_event->add_decision_overrides(
-        static_cast<metrics::TranslateEventProto::EventType>(event_type));
     DVLOG(3) << "Overriding decision of type: " << event_type;
     return true;
   } else {
-    RecordTranslateEvent(event_type, ukm_source_id, translate_event);
     return false;
   }
 }
