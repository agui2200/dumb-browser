diff --git a/chrome/browser/enterprise/connectors/connectors_manager.h b/chrome/browser/enterprise/connectors/connectors_manager.h
index ef82ea35c7d1..de40e93452b8 100644
--- a/chrome/browser/enterprise/connectors/connectors_manager.h
+++ b/chrome/browser/enterprise/connectors/connectors_manager.h
@@ -7,10 +7,8 @@
 
 #include "base/callback_forward.h"
 #include "base/optional.h"
-#include "chrome/browser/enterprise/connectors/analysis/analysis_service_settings.h"
 #include "chrome/browser/enterprise/connectors/common.h"
 #include "chrome/browser/enterprise/connectors/file_system/service_settings.h"
-#include "chrome/browser/enterprise/connectors/reporting/reporting_service_settings.h"
 #include "chrome/browser/enterprise/connectors/service_provider_config.h"
 #include "components/prefs/pref_change_registrar.h"
 #include "components/prefs/pref_service.h"
@@ -24,10 +22,6 @@ namespace enterprise_connectors {
 class ConnectorsManager {
  public:
   // Maps used to cache connectors settings.
-  using AnalysisConnectorsSettings =
-      std::map<AnalysisConnector, std::vector<AnalysisServiceSettings>>;
-  using ReportingConnectorsSettings =
-      std::map<ReportingConnector, std::vector<ReportingServiceSettings>>;
   using FileSystemConnectorsSettings =
       std::map<FileSystemConnector, std::vector<FileSystemServiceSettings>>;
 
@@ -36,19 +30,6 @@ class ConnectorsManager {
                     bool observe_prefs = true);
   ~ConnectorsManager();
 
-  // Validates which settings should be applied to a reporting event
-  // against cached policies. Cache the policy value the first time this is
-  // called for every different connector.
-  base::Optional<ReportingSettings> GetReportingSettings(
-      ReportingConnector connector);
-
-  // Validates which settings should be applied to an analysis connector event
-  // against cached policies. This function will prioritize new connector
-  // policies over legacy ones if they are set.
-  base::Optional<AnalysisSettings> GetAnalysisSettings(
-      const GURL& url,
-      AnalysisConnector connector);
-
   // Validates which settings should be applied to a file system connector
   // against cached policies. Cache the policy value the first time this is
   // called for every different connector.
@@ -57,59 +38,28 @@ class ConnectorsManager {
       FileSystemConnector connector);
 
   // Checks if the corresponding connector is enabled.
-  bool IsConnectorEnabled(AnalysisConnector connector) const;
-  bool IsConnectorEnabled(ReportingConnector connector) const;
   bool IsConnectorEnabled(FileSystemConnector connector) const;
 
-  bool DelayUntilVerdict(AnalysisConnector connector);
-
-  std::vector<std::string> GetAnalysisServiceProviderNames(
-      AnalysisConnector connector);
-  std::vector<std::string> GetReportingServiceProviderNames(
-      ReportingConnector connector);
-
   // Public testing functions.
-  const AnalysisConnectorsSettings& GetAnalysisConnectorsSettingsForTesting()
-      const;
-  const ReportingConnectorsSettings& GetReportingConnectorsSettingsForTesting()
-      const;
   const FileSystemConnectorsSettings&
   GetFileSystemConnectorsSettingsForTesting() const;
 
  private:
-  // Validates which settings should be applied to an analysis connector event
-  // against connector policies. Cache the policy value the first time this is
-  // called for every different connector.
-  base::Optional<AnalysisSettings> GetAnalysisSettingsFromConnectorPolicy(
-      const GURL& url,
-      AnalysisConnector connector);
 
   // Read and cache the policy corresponding to |connector|.
-  void CacheAnalysisConnectorPolicy(AnalysisConnector connector);
-  void CacheReportingConnectorPolicy(ReportingConnector connector);
   void CacheFileSystemConnectorPolicy(FileSystemConnector connector);
 
   // Sets up |pref_change_registrar_|. Used by the constructor and
   // SetUpForTesting.
   void StartObservingPrefs(PrefService* pref_service);
-  void StartObservingPref(AnalysisConnector connector);
-  void StartObservingPref(ReportingConnector connector);
   void StartObservingPref(FileSystemConnector connector);
 
-  // Validates which settings should be applied to an analysis connector event
-  // against connector policies. Cache the policy value the first time this is
-  // called for every different connector.
-  base::Optional<ReportingSettings> GetReportingSettingsFromConnectorPolicy(
-      ReportingConnector connector);
-
   // Cached values of available service providers. This information validates
   // the Connector policies have a valid provider.
   ServiceProviderConfig* service_provider_config_;
 
   // Cached values of the connector policies. Updated when a connector is first
   // used or when a policy is updated.
-  AnalysisConnectorsSettings analysis_connector_settings_;
-  ReportingConnectorsSettings reporting_connector_settings_;
   FileSystemConnectorsSettings file_system_connector_settings_;
 
   // Used to track changes of connector policies and propagate them in
