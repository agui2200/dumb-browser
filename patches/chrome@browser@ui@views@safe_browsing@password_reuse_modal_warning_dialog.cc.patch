diff --git a/chrome/browser/ui/views/safe_browsing/password_reuse_modal_warning_dialog.cc b/chrome/browser/ui/views/safe_browsing/password_reuse_modal_warning_dialog.cc
index 6a4214a5bef2..e075bca9a51a 100644
--- a/chrome/browser/ui/views/safe_browsing/password_reuse_modal_warning_dialog.cc
+++ b/chrome/browser/ui/views/safe_browsing/password_reuse_modal_warning_dialog.cc
@@ -121,7 +121,6 @@ PasswordReuseModalWarningDialog::PasswordReuseModalWarningDialog(
     OnWarningDone done_callback)
     : content::WebContentsObserver(web_contents),
       done_callback_(std::move(done_callback)),
-      service_(service),
       url_(web_contents->GetLastCommittedURL()),
       password_type_(password_type) {
   bool show_check_passwords = false;
@@ -162,34 +161,13 @@ PasswordReuseModalWarningDialog::PasswordReuseModalWarningDialog(
   SetCancelCallback(make_done_callback(WarningAction::IGNORE_WARNING));
   SetCloseCallback(make_done_callback(WarningAction::CLOSE));
 
-  // |service| maybe NULL in tests.
-  if (service_)
-    service_->AddObserver(this);
-
-  std::vector<size_t> placeholder_offsets;
-
-  if (password_type.account_type() ==
-      ReusedPasswordAccountType::SAVED_PASSWORD) {
-    const base::string16 message_body =
-        service_->GetWarningDetailText(password_type, &placeholder_offsets);
-
-    CreateSavedPasswordReuseModalWarningDialog(
-        message_body, service_->GetPlaceholdersForSavedPasswordWarningText(),
-        placeholder_offsets);
-  } else {
-    views::Label* message_body_label = CreateMessageBodyLabel(
-        service_
-            ? service_->GetWarningDetailText(password_type,
-                                             &placeholder_offsets)
-            : l10n_util::GetStringUTF16(IDS_PAGE_INFO_CHANGE_PASSWORD_DETAILS));
-    CreateGaiaPasswordReuseModalWarningDialog(message_body_label);
-  }
+  views::Label* message_body_label = CreateMessageBodyLabel(
+      l10n_util::GetStringUTF16(IDS_PAGE_INFO_CHANGE_PASSWORD_DETAILS));
+  CreateGaiaPasswordReuseModalWarningDialog(message_body_label);
   modal_construction_start_time_ = base::TimeTicks::Now();
 }
 
 PasswordReuseModalWarningDialog::~PasswordReuseModalWarningDialog() {
-  if (service_)
-    service_->RemoveObserver(this);
   LogModalWarningDialogLifetime(modal_construction_start_time_);
 }
 
