diff --git a/chrome/browser/resource_coordinator/usage_clock.cc b/chrome/browser/resource_coordinator/usage_clock.cc
index 3616a2fc3a42c..2a239924444f7 100644
--- a/chrome/browser/resource_coordinator/usage_clock.cc
+++ b/chrome/browser/resource_coordinator/usage_clock.cc
@@ -9,17 +9,9 @@
 namespace resource_coordinator {
 
 UsageClock::UsageClock() : current_usage_session_start_time_(NowTicks()) {
-  if (metrics::DesktopSessionDurationTracker::IsInitialized()) {
-    auto* tracker = metrics::DesktopSessionDurationTracker::Get();
-    tracker->AddObserver(this);
-    if (!tracker->in_session())
-      current_usage_session_start_time_ = base::TimeTicks();
-  }
 }
 
 UsageClock::~UsageClock() {
-  if (metrics::DesktopSessionDurationTracker::IsInitialized())
-    metrics::DesktopSessionDurationTracker::Get()->RemoveObserver(this);
 }
 
 base::TimeDelta UsageClock::GetTotalUsageTime() const {
@@ -33,21 +25,4 @@ bool UsageClock::IsInUse() const {
   return !current_usage_session_start_time_.is_null();
 }
 
-void UsageClock::OnSessionStarted(base::TimeTicks session_start) {
-  // Ignore |session_start| because it doesn't come from the resource
-  // coordinator clock.
-  DCHECK(!IsInUse());
-  current_usage_session_start_time_ = NowTicks();
-}
-
-void UsageClock::OnSessionEnded(base::TimeDelta session_length,
-                                base::TimeTicks session_end) {
-  // Ignore |session_length| because it wasn't measured using the resource
-  // coordinator clock.
-  DCHECK(IsInUse());
-  usage_time_in_completed_sessions_ +=
-      NowTicks() - current_usage_session_start_time_;
-  current_usage_session_start_time_ = base::TimeTicks();
-}
-
 }  // namespace resource_coordinator
