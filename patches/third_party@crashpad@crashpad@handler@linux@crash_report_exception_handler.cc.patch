diff --git a/third_party/crashpad/crashpad/handler/linux/crash_report_exception_handler.cc b/third_party/crashpad/crashpad/handler/linux/crash_report_exception_handler.cc
index 9dc313cdaf8b..e1d868887f39 100644
--- a/third_party/crashpad/crashpad/handler/linux/crash_report_exception_handler.cc
+++ b/third_party/crashpad/crashpad/handler/linux/crash_report_exception_handler.cc
@@ -30,7 +30,6 @@
 #include "util/linux/direct_ptrace_connection.h"
 #include "util/linux/ptrace_client.h"
 #include "util/misc/implicit_cast.h"
-#include "util/misc/metrics.h"
 #include "util/misc/uuid.h"
 #include "util/stream/base94_output_stream.h"
 #include "util/stream/log_output_stream.h"
@@ -100,14 +99,12 @@ bool WriteMinidumpLogFromFile(FileReaderInterface* file_reader) {
 
 CrashReportExceptionHandler::CrashReportExceptionHandler(
     CrashReportDatabase* database,
-    CrashReportUploadThread* upload_thread,
     const std::map<std::string, std::string>* process_annotations,
     const std::vector<base::FilePath>* attachments,
     bool write_minidump_to_database,
     bool write_minidump_to_log,
     const UserStreamDataSources* user_stream_data_sources)
     : database_(database),
-      upload_thread_(upload_thread),
       process_annotations_(process_annotations),
       attachments_(attachments),
       write_minidump_to_database_(write_minidump_to_database),
@@ -125,12 +122,9 @@ bool CrashReportExceptionHandler::HandleException(
     VMAddress requesting_thread_stack_address,
     pid_t* requesting_thread_id,
     UUID* local_report_id) {
-  Metrics::ExceptionEncountered();
 
   DirectPtraceConnection connection;
   if (!connection.Initialize(client_process_id)) {
-    Metrics::ExceptionCaptureResult(
-        Metrics::CaptureResult::kDirectPtraceFailed);
     return false;
   }
 
@@ -148,12 +142,9 @@ bool CrashReportExceptionHandler::HandleExceptionWithBroker(
     const ExceptionHandlerProtocol::ClientInformation& info,
     int broker_sock,
     UUID* local_report_id) {
-  Metrics::ExceptionEncountered();
 
   PtraceClient client;
   if (!client.Initialize(broker_sock, client_process_id)) {
-    Metrics::ExceptionCaptureResult(
-        Metrics::CaptureResult::kBrokeredPtraceFailed);
     return false;
   }
 
@@ -210,8 +201,6 @@ bool CrashReportExceptionHandler::WriteMinidumpToDatabase(
       database_->PrepareNewCrashReport(&new_report);
   if (database_status != CrashReportDatabase::kNoError) {
     LOG(ERROR) << "PrepareNewCrashReport failed";
-    Metrics::ExceptionCaptureResult(
-        Metrics::CaptureResult::kPrepareNewCrashReportFailed);
     return false;
   }
 
@@ -227,8 +216,6 @@ bool CrashReportExceptionHandler::WriteMinidumpToDatabase(
 
   if (!minidump.WriteEverything(new_report->Writer())) {
     LOG(ERROR) << "WriteEverything failed";
-    Metrics::ExceptionCaptureResult(
-        Metrics::CaptureResult::kMinidumpWriteFailed);
     return false;
   }
 
@@ -266,21 +253,13 @@ bool CrashReportExceptionHandler::WriteMinidumpToDatabase(
       database_->FinishedWritingCrashReport(std::move(new_report), &uuid);
   if (database_status != CrashReportDatabase::kNoError) {
     LOG(ERROR) << "FinishedWritingCrashReport failed";
-    Metrics::ExceptionCaptureResult(
-        Metrics::CaptureResult::kFinishedWritingCrashReportFailed);
     return false;
   }
 
-  if (upload_thread_) {
-    upload_thread_->ReportPending(uuid);
-  }
-
   if (local_report_id != nullptr) {
     *local_report_id = uuid;
   }
 
-  Metrics::ExceptionCaptureResult(Metrics::CaptureResult::kSuccess);
-
   return write_minidump_to_log ? write_minidump_to_log_succeed : true;
 }
 
