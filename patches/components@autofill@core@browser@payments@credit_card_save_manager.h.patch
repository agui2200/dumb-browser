diff --git a/components/autofill/core/browser/payments/credit_card_save_manager.h b/components/autofill/core/browser/payments/credit_card_save_manager.h
index cc5131c29561..9b9cc3a64a52 100644
--- a/components/autofill/core/browser/payments/credit_card_save_manager.h
+++ b/components/autofill/core/browser/payments/credit_card_save_manager.h
@@ -15,7 +15,6 @@
 #include "base/strings/string16.h"
 #include "build/build_config.h"
 #include "components/autofill/core/browser/autofill_client.h"
-#include "components/autofill/core/browser/autofill_metrics.h"
 #include "components/autofill/core/browser/data_model/credit_card.h"
 #include "components/autofill/core/browser/form_structure.h"
 #include "components/autofill/core/browser/payments/credit_card_save_strike_database.h"
@@ -257,21 +256,6 @@ class CreditCardSaveManager {
   // a strike change has been made.
   void OnStrikeChangeComplete(const int num_strikes);
 
-  // Returns metric relevant to the CVC field based on values in
-  // |found_cvc_field_|, |found_value_in_cvc_field_| and
-  // |found_cvc_value_in_non_cvc_field_|. Only called when a valid CVC was NOT
-  // found.
-  AutofillMetrics::CardUploadDecisionMetric GetCVCCardUploadDecisionMetric()
-      const;
-
-  // Logs the card upload decisions in UKM and UMA.
-  // |upload_decision_metrics| is a bitmask of
-  // |AutofillMetrics::CardUploadDecisionMetric|.
-  void LogCardUploadDecisions(int upload_decision_metrics);
-
-  // Logs the reason why expiration date was explicitly requested.
-  void LogSaveCardRequestExpirationDateReasonMetric();
-
   // For testing.
   void SetEventObserverForTesting(ObserverForTest* observer) {
     observer_for_testing_ = observer;
@@ -297,11 +281,6 @@ class CreditCardSaveManager {
   // Collected information about a pending upload request.
   payments::PaymentsClient::UploadRequestDetails upload_request_;
 
-  // A bitmask of |AutofillMetrics::CardUploadDecisionMetric| representing the
-  // decisions made when determining if credit card upload save should be
-  // offered.
-  int upload_decision_metrics_ = 0;
-
   // |true| if the offer-to-save bubble/infobar should pop-up, |false| if not.
   // Will be base::nullopt until data has been retrieved from the StrikeSystem.
   base::Optional<bool> show_save_prompt_;
