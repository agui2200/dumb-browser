diff --git a/chrome/browser/android/metrics/uma_session_stats.cc b/chrome/browser/android/metrics/uma_session_stats.cc
index c14dbe52b4ae..e5a5caef3f51 100644
--- a/chrome/browser/android/metrics/uma_session_stats.cc
+++ b/chrome/browser/android/metrics/uma_session_stats.cc
@@ -55,17 +55,6 @@ void UmaSessionStats::UmaResumeSession(JNIEnv* env,
     const bool had_background_session =
         session_time_tracker_.BeginForegroundSession();
 
-    // Tell the metrics services that the application resumes.
-    metrics::MetricsService* metrics = g_browser_process->metrics_service();
-    if (metrics) {
-      // Forcing a new log allows foreground and background metrics can be
-      // separated in analysis.
-      const bool force_new_log = base::FeatureList::IsEnabled(
-                                     chrome::android::kUmaBackgroundSessions) &&
-                                 had_background_session;
-
-      metrics->OnAppEnterForeground(force_new_log);
-    }
     // Report background session time if it wasn't already reported by
     // OnAppEnterForeground() -> ProvideCurrentSessionData().
     session_time_tracker_.ReportBackgroundSessionTime();
@@ -94,13 +83,7 @@ void UmaSessionStats::UmaEndSession(JNIEnv* env,
         session_time_tracker_.EndForegroundSession();
 
     DCHECK(g_browser_process);
-    // Tell the metrics services they were cleanly shutdown.
-    metrics::MetricsService* metrics = g_browser_process->metrics_service();
-    if (metrics) {
-      const bool keep_reporting =
-          base::FeatureList::IsEnabled(chrome::android::kUmaBackgroundSessions);
-      metrics->OnAppEnterBackground(keep_reporting);
-    }
+
     ukm::UkmService* ukm_service =
         g_browser_process->GetMetricsServicesManager()->GetUkmService();
     if (ukm_service)
