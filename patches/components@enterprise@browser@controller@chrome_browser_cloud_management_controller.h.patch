diff --git a/components/enterprise/browser/controller/chrome_browser_cloud_management_controller.h b/components/enterprise/browser/controller/chrome_browser_cloud_management_controller.h
index 819ed6188f8a1..a8a683382275e 100644
--- a/components/enterprise/browser/controller/chrome_browser_cloud_management_controller.h
+++ b/components/enterprise/browser/controller/chrome_browser_cloud_management_controller.h
@@ -28,12 +28,6 @@ class NetworkConnectionTracker;
 class SharedURLLoaderFactory;
 }  // namespace network
 
-#if !defined(OS_ANDROID)
-namespace enterprise_reporting {
-class ReportScheduler;
-}
-#endif
-
 namespace policy {
 class ChromeBrowserCloudManagementRegistrar;
 class ConfigurationPolicyProvider;
@@ -126,12 +120,14 @@ class ChromeBrowserCloudManagementController
     virtual scoped_refptr<network::SharedURLLoaderFactory>
     GetSharedURLLoaderFactory() = 0;
 
+#if 0
 #if !defined(OS_ANDROID)
     // Creates and returns a ReportScheduler for enterprise reporting. Delegates
     // must pass the platform-specific factory that should be used to
     // instantiate the delegates for the reporting objects.
     virtual std::unique_ptr<enterprise_reporting::ReportScheduler>
     CreateReportScheduler(CloudPolicyClient* client) = 0;
+#endif
 #endif
 
     // Returns a BestEffort Task Runner, bound to the UI thread like the rest of
@@ -224,8 +220,10 @@ class ChromeBrowserCloudManagementController
   void InvalidatePolicies();
   void InvalidateDMTokenCallback(bool success);
 
+#if 0
 #if !defined(OS_ANDROID)
   void CreateReportScheduler();
+#endif
 #endif
 
   base::ObserverList<Observer, true>::Unchecked observers_;
@@ -239,8 +237,10 @@ class ChromeBrowserCloudManagementController
   // Time at which the enrollment process was started.  Used to log UMA metric.
   base::Time enrollment_start_time_;
 
+#if 0
 #if !defined(OS_ANDROID)
   std::unique_ptr<enterprise_reporting::ReportScheduler> report_scheduler_;
+#endif
 #endif
 
   std::unique_ptr<policy::CloudPolicyClient> cloud_policy_client_;
