diff --git a/components/enterprise/browser/controller/chrome_browser_cloud_management_controller.h b/components/enterprise/browser/controller/chrome_browser_cloud_management_controller.h
index 68effcc7c276b..ce4e8d1b7f9d2 100644
--- a/components/enterprise/browser/controller/chrome_browser_cloud_management_controller.h
+++ b/components/enterprise/browser/controller/chrome_browser_cloud_management_controller.h
@@ -120,11 +120,13 @@ class ChromeBrowserCloudManagementController
     virtual scoped_refptr<network::SharedURLLoaderFactory>
     GetSharedURLLoaderFactory() = 0;
 
+#if 0
     // Creates and returns a ReportScheduler for enterprise reporting. Delegates
     // must pass the platform-specific factory that should be used to
     // instantiate the delegates for the reporting objects.
     virtual std::unique_ptr<enterprise_reporting::ReportScheduler>
     CreateReportScheduler(CloudPolicyClient* client) = 0;
+#endif
 
     // Returns a BestEffort Task Runner, bound to the UI thread like the rest of
     // this class, that is meant to be used to schedule asynchronous tasks
@@ -212,8 +214,6 @@ class ChromeBrowserCloudManagementController
   void InvalidatePolicies();
   void InvalidateDMTokenCallback(bool success);
 
-  void CreateReportScheduler();
-
   base::ObserverList<Observer, true>::Unchecked observers_;
 
   std::unique_ptr<Delegate> delegate_;
