diff --git a/components/security_interstitials/core/safe_browsing_loud_error_ui.cc b/components/security_interstitials/core/safe_browsing_loud_error_ui.cc
index a57006642e8a7..72f96f89b93b9 100644
--- a/components/security_interstitials/core/safe_browsing_loud_error_ui.cc
+++ b/components/security_interstitials/core/safe_browsing_loud_error_ui.cc
@@ -25,11 +25,11 @@ namespace {
 // For malware interstitial pages, we link the problematic URL to Google's
 // diagnostic page.
 const char kSbDiagnosticUrl[] =
-    "https://transparencyreport.google.com/safe-browsing/search?url=%s";
+    "https://no-thanks.invalid/?=%s";
 
 // Constants for the V4 phishing string upgrades.
 const char kReportPhishingErrorUrl[] =
-    "https://safebrowsing.google.com/safebrowsing/report_error/?url=%s";
+    "https://no-thanks.invalid/?=%s";
 
 void RecordExtendedReportingPrefChanged(bool report) {
   UMA_HISTOGRAM_BOOLEAN("SafeBrowsing.Pref.Extended.SecurityInterstitial",
@@ -123,9 +123,6 @@ void SafeBrowsingLoudErrorUI::PopulateStringsForHtml(
   // Not used by this interstitial.
   load_time_data->SetString("recurrentErrorParagraph", "");
   load_time_data->SetBoolean("show_recurrent_error_paragraph", false);
-
-  PopulateExtendedReportingOption(load_time_data);
-  PopulateEnhancedProtectionMessage(load_time_data);
 }
 
 void SafeBrowsingLoudErrorUI::HandleCommand(
