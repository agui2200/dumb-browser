diff --git a/chrome/browser/extensions/api/webstore_private/webstore_private_api.cc b/chrome/browser/extensions/api/webstore_private/webstore_private_api.cc
index ef6d0d7ccec01..65caa2c0ff9a5 100644
--- a/chrome/browser/extensions/api/webstore_private/webstore_private_api.cc
+++ b/chrome/browser/extensions/api/webstore_private/webstore_private_api.cc
@@ -33,10 +33,6 @@
 #include "chrome/browser/extensions/install_tracker.h"
 #include "chrome/browser/extensions/scoped_active_install.h"
 #include "chrome/browser/profiles/profile.h"
-#include "chrome/browser/safe_browsing/safe_browsing_metrics_collector.h"
-#include "chrome/browser/safe_browsing/safe_browsing_metrics_collector_factory.h"
-#include "chrome/browser/safe_browsing/safe_browsing_navigation_observer_manager.h"
-#include "chrome/browser/safe_browsing/safe_browsing_service.h"
 #include "chrome/browser/signin/identity_manager_factory.h"
 #include "chrome/browser/ui/app_list/app_list_util.h"
 #include "chrome/browser/ui/browser_dialogs.h"
@@ -70,8 +66,6 @@
 #include "chrome/browser/supervised_user/supervised_user_service_factory.h"
 #endif  // BUILDFLAG(ENABLE_SUPERVISED_USERS)
 
-using safe_browsing::SafeBrowsingNavigationObserverManager;
-
 namespace extensions {
 
 namespace BeginInstallWithManifest3 =
@@ -215,6 +209,7 @@ void ShowBlockedByParentDialog(const Extension* extension,
 #endif  // BUILDFLAG(ENABLE_SUPERVISED_USERS)
 
 // The number of user gestures to trace back for the referrer chain.
+ALLOW_UNUSED_TYPE
 const int kExtensionReferrerUserGestureLimit = 2;
 
 WebstoreInstaller::Delegate* test_webstore_installer_delegate = nullptr;
@@ -675,6 +670,7 @@ void WebstorePrivateBeginInstallWithManifest3Function::OnFrictionPromptDone(
 
 void WebstorePrivateBeginInstallWithManifest3Function::
     ReportFrictionAcceptedEvent() {
+#if 0
   if (!profile_) {
     return;
   }
@@ -687,6 +683,7 @@ void WebstorePrivateBeginInstallWithManifest3Function::
         safe_browsing::SafeBrowsingMetricsCollector::EventType::
             EXTENSION_ALLOWLIST_INSTALL_BYPASS);
   }
+#endif
 }
 
 void WebstorePrivateBeginInstallWithManifest3Function::OnInstallPromptDone(
@@ -1180,6 +1177,7 @@ WebstorePrivateGetReferrerChainFunction::
 
 ExtensionFunction::ResponseAction
 WebstorePrivateGetReferrerChainFunction::Run() {
+#if 0
   Profile* profile = Profile::FromBrowserContext(browser_context());
   if (!SafeBrowsingNavigationObserverManager::IsEnabledAndReady(profile))
     return RespondNow(ArgumentList(
@@ -1222,9 +1220,10 @@ WebstorePrivateGetReferrerChainFunction::Run() {
   // Base64 encode the proto to avoid issues with base::Value rejecting strings
   // which are not valid UTF8.
   base::Base64Encode(serialized_referrer_proto, &serialized_referrer_proto);
+#endif
   return RespondNow(
       ArgumentList(api::webstore_private::GetReferrerChain::Results::Create(
-          serialized_referrer_proto)));
+          "")));
 }
 
 WebstorePrivateGetExtensionStatusFunction::
