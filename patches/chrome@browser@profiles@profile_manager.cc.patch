diff --git a/chrome/browser/profiles/profile_manager.cc b/chrome/browser/profiles/profile_manager.cc
index 9b9335369a4f..df893d8c41a6 100644
--- a/chrome/browser/profiles/profile_manager.cc
+++ b/chrome/browser/profiles/profile_manager.cc
@@ -42,8 +42,6 @@
 #include "chrome/browser/data_reduction_proxy/data_reduction_proxy_chrome_settings_factory.h"
 #include "chrome/browser/download/download_core_service.h"
 #include "chrome/browser/download/download_core_service_factory.h"
-#include "chrome/browser/lite_video/lite_video_keyed_service.h"
-#include "chrome/browser/lite_video/lite_video_keyed_service_factory.h"
 #include "chrome/browser/navigation_predictor/navigation_predictor_keyed_service_factory.h"
 #include "chrome/browser/optimization_guide/optimization_guide_keyed_service.h"
 #include "chrome/browser/optimization_guide/optimization_guide_keyed_service_factory.h"
@@ -60,7 +58,6 @@
 #include "chrome/browser/profiles/profile_info_cache.h"
 #include "chrome/browser/profiles/profile_key.h"
 #include "chrome/browser/profiles/profile_manager_observer.h"
-#include "chrome/browser/profiles/profile_metrics.h"
 #include "chrome/browser/profiles/profiles_state.h"
 #include "chrome/browser/signin/account_reconcilor_factory.h"
 #include "chrome/browser/signin/identity_manager_factory.h"
@@ -265,7 +262,6 @@ void CancelProfileDeletion(const base::FilePath& path) {
   DCHECK(!base::Contains(ProfilesToDelete(), path) ||
          ProfilesToDelete()[path] == ProfileDeletionStage::SCHEDULING);
   ProfilesToDelete().erase(path);
-  ProfileMetrics::LogProfileDeleteUser(ProfileMetrics::DELETE_PROFILE_ABORTED);
 }
 #endif
 
@@ -848,11 +844,9 @@ ProfileShortcutManager* ProfileManager::profile_shortcut_manager() {
 #if !defined(OS_ANDROID)
 void ProfileManager::MaybeScheduleProfileForDeletion(
     const base::FilePath& profile_dir,
-    ProfileLoadedCallback callback,
-    ProfileMetrics::ProfileDelete deletion_source) {
+    ProfileLoadedCallback callback) {
   if (!ScheduleProfileDirectoryForDeletion(profile_dir))
     return;
-  ProfileMetrics::LogProfileDeleteUser(deletion_source);
   ScheduleProfileForDeletion(profile_dir, std::move(callback));
 }
 
@@ -1349,12 +1343,14 @@ void ProfileManager::DoFinalInitForServices(Profile* profile,
       profile);
 #endif
 
+#if 0
   // Creates the LiteVideo Keyed Service and begins loading the
   // hint cache and user blocklist.
   auto* lite_video_keyed_service =
       LiteVideoKeyedServiceFactory::GetForProfile(profile);
   if (lite_video_keyed_service)
     lite_video_keyed_service->Initialize(profile->GetPath());
+#endif
 
   // TODO(crbug.com/1031477): Remove once getting this created with the browser
   // context does not change dependency initialization order to cause crashes.
@@ -1532,9 +1528,6 @@ void ProfileManager::EnsureActiveProfileExistsBeforeDeletion(
     new_avatar_url = profiles::GetDefaultAvatarIconUrl(avatar_index);
     new_profile_name = storage.ChooseNameForNewProfile(avatar_index);
 #endif
-    // A new profile about to be created.
-    ProfileMetrics::LogProfileAddNewUser(
-        ProfileMetrics::ADD_NEW_USER_LAST_DELETED);
   }
 
   // Create and/or load fallback profile.
@@ -1572,7 +1565,6 @@ void ProfileManager::OnLoadProfileForProfileDeletion(
     ProfileAttributesEntry* entry;
     bool has_entry = storage.GetProfileAttributesWithPath(profile_dir, &entry);
     DCHECK(has_entry);
-    ProfileMetrics::LogProfileDelete(entry->IsAuthenticated());
     // Some platforms store passwords in keychains. They should be removed.
     scoped_refptr<password_manager::PasswordStore> password_store =
         PasswordStoreFactory::GetForProfile(profile,
