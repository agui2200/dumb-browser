diff --git a/components/payments/content/payment_request.h b/components/payments/content/payment_request.h
index 06c849a03704b..d455deed0d85a 100644
--- a/components/payments/content/payment_request.h
+++ b/components/payments/content/payment_request.h
@@ -17,7 +17,6 @@
 #include "components/payments/content/payment_request_spec.h"
 #include "components/payments/content/payment_request_state.h"
 #include "components/payments/content/service_worker_payment_app.h"
-#include "components/payments/core/journey_logger.h"
 #include "content/public/browser/global_routing_id.h"
 #include "mojo/public/cpp/bindings/receiver.h"
 #include "mojo/public/cpp/bindings/remote.h"
@@ -177,11 +176,6 @@ class PaymentRequest : public mojom::PaymentRequest,
   // information.
   bool SatisfiesSkipUIConstraints();
 
-  // Only records the abort reason if it's the first completion for this Payment
-  // Request. This is necessary since the aborts cascade into one another with
-  // the first one being the most precise.
-  void RecordFirstAbortReason(JourneyLogger::AbortReason completion_status);
-
   // The callback for PaymentRequestState::CanMakePayment.
   void CanMakePaymentCallback(bool can_make_payment);
 
@@ -207,8 +201,10 @@ class PaymentRequest : public mojom::PaymentRequest,
   // Show an error message in the UI (if available) and abort payment.
   void ShowErrorMessageAndAbortPayment();
 
+#if 0
   // Get the payment method category from the selected app.
   JourneyLogger::PaymentMethodCategory GetSelectedMethodCategory() const;
+#endif
 
   const content::GlobalFrameRoutingId initiator_frame_routing_id_;
   DeveloperConsoleLogger log_;
@@ -246,8 +242,6 @@ class PaymentRequest : public mojom::PaymentRequest,
   // May be null, must outlive this object.
   ObserverForTest* observer_for_testing_;
 
-  JourneyLogger journey_logger_;
-
   // Whether a completion was already recorded for this Payment Request.
   bool has_recorded_completion_ = false;
 
