diff --git a/content/browser/display_cutout/display_cutout_host_impl.h b/content/browser/display_cutout/display_cutout_host_impl.h
index 56081029df02..64c5a3c4cade 100644
--- a/content/browser/display_cutout/display_cutout_host_impl.h
+++ b/content/browser/display_cutout/display_cutout_host_impl.h
@@ -36,16 +36,6 @@ class DisplayCutoutHostImpl : public blink::mojom::DisplayCutoutHost {
   void SetDisplayCutoutSafeArea(gfx::Insets insets);
 
  private:
-  // Stores the data for a pending UKM event.
-  struct PendingUKMEvent {
-    ukm::SourceId source_id;
-    bool is_main_frame;
-    blink::mojom::ViewportFit applied_value;
-    blink::mojom::ViewportFit supplied_value;
-    int ignored_reason;
-    int safe_areas_present = 0;
-  };
-
   // Set the current |RenderFrameHost| that should have control over the
   // viewport fit value and we should set safe area insets on.
   void SetCurrentRenderFrameHost(RenderFrameHost* rfh);
@@ -57,19 +47,6 @@ class DisplayCutoutHostImpl : public blink::mojom::DisplayCutoutHost {
   // stored value.
   blink::mojom::ViewportFit GetValueOrDefault(RenderFrameHost* rfh) const;
 
-  // Builds and records a Layout.DisplayCutout.StateChanged UKM event for the
-  // provided |frame|. The event will be added to the list of pending events.
-  void MaybeQueueUKMEvent(RenderFrameHost* frame);
-
-  // Records any UKM events that we have not recorded yet.
-  void RecordPendingUKMEvents();
-
-  // Gets the integer value of the current safe areas for recording to UKM.
-  int GetSafeAreasPresentUKMValue() const;
-
-  // Stores pending UKM events.
-  std::list<PendingUKMEvent> pending_ukm_events_;
-
   // Stores the current safe area insets.
   gfx::Insets insets_;
 
