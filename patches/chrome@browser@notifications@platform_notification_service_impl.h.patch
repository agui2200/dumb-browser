diff --git a/chrome/browser/notifications/platform_notification_service_impl.h b/chrome/browser/notifications/platform_notification_service_impl.h
index 926349b0ca5e..7c83947afb57 100644
--- a/chrome/browser/notifications/platform_notification_service_impl.h
+++ b/chrome/browser/notifications/platform_notification_service_impl.h
@@ -21,7 +21,6 @@
 #include "components/content_settings/core/browser/content_settings_observer.h"
 #include "components/keyed_service/core/keyed_service.h"
 #include "content/public/browser/platform_notification_service.h"
-#include "services/metrics/public/cpp/ukm_source_id.h"
 #include "ui/message_center/public/cpp/notification.h"
 
 class GURL;
@@ -71,12 +70,6 @@ class PlatformNotificationServiceImpl
   void ScheduleTrigger(base::Time timestamp) override;
   base::Time ReadNextTriggerTimestamp() override;
   int64_t ReadNextPersistentNotificationId() override;
-  void RecordNotificationUkmEvent(
-      const content::NotificationDatabaseData& data) override;
-
-  void set_ukm_recorded_closure_for_testing(base::OnceClosure closure) {
-    ukm_recorded_closure_for_testing_ = std::move(closure);
-  }
 
   NotificationTriggerScheduler* GetNotificationTriggerScheduler();
 
@@ -90,8 +83,6 @@ class PlatformNotificationServiceImpl
                            CreateNotificationFromData);
   FRIEND_TEST_ALL_PREFIXES(PlatformNotificationServiceTest,
                            DisplayNameForContextMessage);
-  FRIEND_TEST_ALL_PREFIXES(PlatformNotificationServiceTest,
-                           RecordNotificationUkmEvent);
 
   // KeyedService implementation.
   void Shutdown() override;
@@ -102,11 +93,6 @@ class PlatformNotificationServiceImpl
                                ContentSettingsType content_type,
                                const std::string& resource_identifier) override;
 
-  static void DidGetBackgroundSourceId(
-      base::OnceClosure recorded_closure,
-      const content::NotificationDatabaseData& data,
-      base::Optional<ukm::SourceId> source_id);
-
   // Creates a new Web Notification-based Notification object. Should only be
   // called when the notification is first shown.
   message_center::Notification CreateNotificationFromData(
@@ -131,9 +117,6 @@ class PlatformNotificationServiceImpl
 
   // Scheduler for notifications with a trigger.
   std::unique_ptr<NotificationTriggerScheduler> trigger_scheduler_;
-
-  // Testing-only closure to observe when a UKM event has been recorded.
-  base::OnceClosure ukm_recorded_closure_for_testing_;
 };
 
 #endif  // CHROME_BROWSER_NOTIFICATIONS_PLATFORM_NOTIFICATION_SERVICE_IMPL_H_
