diff --git a/chrome/browser/browser_process.h b/chrome/browser/browser_process.h
index a453e1acb6db..1212552edaf4 100644
--- a/chrome/browser/browser_process.h
+++ b/chrome/browser/browser_process.h
@@ -49,19 +49,6 @@ class NetworkQualityTracker;
 class SharedURLLoaderFactory;
 }
 
-namespace safe_browsing {
-class SafeBrowsingService;
-}
-
-namespace subresource_filter {
-class RulesetService;
-}
-
-namespace federated_learning {
-class FlocBlocklistService;
-class FlocSortingLshClustersService;
-}
-
 namespace variations {
 class VariationsService;
 }
@@ -106,10 +93,6 @@ class PrintJobManager;
 class PrintPreviewDialogController;
 }
 
-namespace rappor {
-class RapporServiceImpl;
-}
-
 namespace resource_coordinator {
 class ResourceCoordinatorParts;
 class TabManager;
@@ -139,7 +122,6 @@ class BrowserProcess {
 
   // Services: any of these getters may return NULL
   virtual metrics::MetricsService* metrics_service() = 0;
-  virtual rappor::RapporServiceImpl* rappor_service() = 0;
   virtual ProfileManager* profile_manager() = 0;
   virtual PrefService* local_state() = 0;
   virtual scoped_refptr<network::SharedURLLoaderFactory>
@@ -217,23 +199,6 @@ class BrowserProcess {
   // on this platform (or this is a unit test).
   virtual StatusTray* status_tray() = 0;
 
-  // Returns the SafeBrowsing service.
-  virtual safe_browsing::SafeBrowsingService* safe_browsing_service() = 0;
-
-  // Returns the service providing versioned storage for rules used by the Safe
-  // Browsing subresource filter.
-  virtual subresource_filter::RulesetService*
-  subresource_filter_ruleset_service() = 0;
-
-  // Returns the service providing versioned storage for a blocklist of flocs.
-  virtual federated_learning::FlocBlocklistService*
-  floc_blocklist_service() = 0;
-
-  // Returns the service providing versioned storage for a list of limit values
-  // for calculating the floc based on SortingLSH.
-  virtual federated_learning::FlocSortingLshClustersService*
-  floc_sorting_lsh_clusters_service() = 0;
-
   // Returns the service used to provide hints for what optimizations can be
   // performed on slow page loads.
   virtual optimization_guide::OptimizationGuideService*
@@ -280,8 +245,6 @@ class BrowserProcess {
   virtual resource_coordinator::ResourceCoordinatorParts*
   resource_coordinator_parts() = 0;
 
-  virtual BuildState* GetBuildState() = 0;
-
  private:
   DISALLOW_COPY_AND_ASSIGN(BrowserProcess);
 };
