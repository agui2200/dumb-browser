diff --git a/chrome/browser/browser_process.h b/chrome/browser/browser_process.h
index 1ea08a7ad6ae..e4bc11303fb4 100644
--- a/chrome/browser/browser_process.h
+++ b/chrome/browser/browser_process.h
@@ -37,7 +37,6 @@ class PrefService;
 class ProfileManager;
 class StatusTray;
 class SystemNetworkContextManager;
-class WatchDogThread;
 class WebRtcLogUploader;
 class StartupData;
 
@@ -50,18 +49,6 @@ class NetworkQualityTracker;
 class SharedURLLoaderFactory;
 }
 
-namespace safe_browsing {
-class SafeBrowsingService;
-}
-
-namespace subresource_filter {
-class RulesetService;
-}
-
-namespace federated_learning {
-class FlocSortingLshClustersService;
-}
-
 namespace variations {
 class VariationsService;
 }
@@ -101,10 +88,6 @@ class PrintJobManager;
 class PrintPreviewDialogController;
 }
 
-namespace rappor {
-class RapporServiceImpl;
-}
-
 namespace resource_coordinator {
 class ResourceCoordinatorParts;
 class TabManager;
@@ -134,7 +117,6 @@ class BrowserProcess {
 
   // Services: any of these getters may return NULL
   virtual metrics::MetricsService* metrics_service() = 0;
-  virtual rappor::RapporServiceImpl* rappor_service() = 0;
   virtual ProfileManager* profile_manager() = 0;
   virtual PrefService* local_state() = 0;
   virtual scoped_refptr<network::SharedURLLoaderFactory>
@@ -162,9 +144,6 @@ class BrowserProcess {
   // network quality change events.
   virtual network::NetworkQualityTracker* network_quality_tracker() = 0;
 
-  // Returns the thread that is used for health check of all browser threads.
-  virtual WatchDogThread* watchdog_thread() = 0;
-
   // Starts and manages the policy system.
   virtual policy::ChromeBrowserPolicyConnector* browser_policy_connector() = 0;
 
@@ -212,19 +191,6 @@ class BrowserProcess {
   // on this platform (or this is a unit test).
   virtual StatusTray* status_tray() = 0;
 
-  // Returns the SafeBrowsing service.
-  virtual safe_browsing::SafeBrowsingService* safe_browsing_service() = 0;
-
-  // Returns the service providing versioned storage for rules used by the Safe
-  // Browsing subresource filter.
-  virtual subresource_filter::RulesetService*
-  subresource_filter_ruleset_service() = 0;
-
-  // Returns the service providing versioned storage for a list of limit values
-  // for calculating the floc based on SortingLSH.
-  virtual federated_learning::FlocSortingLshClustersService*
-  floc_sorting_lsh_clusters_service() = 0;
-
   // Returns the StartupData which owns any pre-created objects in //chrome
   // before the full browser starts.
   virtual StartupData* startup_data() = 0;
@@ -263,8 +229,6 @@ class BrowserProcess {
   virtual resource_coordinator::ResourceCoordinatorParts*
   resource_coordinator_parts() = 0;
 
-  virtual BuildState* GetBuildState() = 0;
-
  private:
   DISALLOW_COPY_AND_ASSIGN(BrowserProcess);
 };
