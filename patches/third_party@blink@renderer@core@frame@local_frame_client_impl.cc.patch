diff --git a/third_party/blink/renderer/core/frame/local_frame_client_impl.cc b/third_party/blink/renderer/core/frame/local_frame_client_impl.cc
index 1cb22fc5f0ec..28d8b899ea51 100644
--- a/third_party/blink/renderer/core/frame/local_frame_client_impl.cc
+++ b/third_party/blink/renderer/core/frame/local_frame_client_impl.cc
@@ -539,27 +539,6 @@ void LocalFrameClientImpl::DispatchDidCommitLoad(
       ResetWheelAndTouchEventHandlerProperties(*web_frame_->GetFrame());
 
       web_frame_->FrameWidgetImpl()->DidNavigate();
-
-      // UKM metrics are only collected for the main frame. Ensure after
-      // a navigation on the main frame we setup the appropriate structures.
-      if (web_frame_->GetFrame()->IsMainFrame() &&
-          web_frame_->ViewImpl()->does_composite()) {
-        cc::LayerTreeHost* layer_tree_host =
-            web_frame_->FrameWidgetImpl()->LayerTreeHost();
-
-        // Update the URL and the document source id used to key UKM metrics in
-        // the compositor. Note that the metrics for all frames are keyed to the
-        // main frame's URL.
-        layer_tree_host->SetSourceURL(
-            web_frame_->GetDocument().GetUkmSourceId(),
-            KURL(web_frame_->Client()->LastCommittedUrlForUKM()));
-
-        auto shmem = layer_tree_host->CreateSharedMemoryForSmoothnessUkm();
-        if (shmem.IsValid()) {
-          web_frame_->Client()->SetUpSharedMemoryForSmoothness(
-              std::move(shmem));
-        }
-      }
     }
   }
   if (WebDevToolsAgentImpl* dev_tools = DevToolsAgent())
