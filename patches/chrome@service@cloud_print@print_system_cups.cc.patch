diff --git a/chrome/service/cloud_print/print_system_cups.cc b/chrome/service/cloud_print/print_system_cups.cc
index bb9c90c07357..fa45ee68f903 100644
--- a/chrome/service/cloud_print/print_system_cups.cc
+++ b/chrome/service/cloud_print/print_system_cups.cc
@@ -31,7 +31,6 @@
 #include "base/values.h"
 #include "chrome/common/cloud_print/cloud_print_constants.h"
 #include "chrome/service/cloud_print/cloud_print_service_helpers.h"
-#include "components/crash/core/common/crash_keys.h"
 #include "printing/backend/cups_helper.h"
 #include "printing/backend/print_backend.h"
 #include "printing/backend/print_backend_consts.h"
@@ -261,8 +260,6 @@ class PrinterWatcherCUPS
     scoped_refptr<printing::PrintBackend> print_backend(
         printing::PrintBackend::CreateInstanceForCloudPrint(
             /*print_backend_settings=*/nullptr));
-    crash_keys::ScopedPrinterInfo crash_key(
-        print_backend->GetPrinterDriverInfo(printer_name_));
     if (delegate_)
       StopWatching();
     delegate_ = delegate;
@@ -570,14 +567,6 @@ bool PrintSystemCUPS::GetPrinterCapsAndDefaults(
     return true;
   }
 
-  // TODO(gene): Retry multiple times in case of error.
-  crash_keys::ScopedPrinterInfo crash_key(
-      server_info->backend->GetPrinterDriverInfo(short_printer_name));
-  if (!server_info->backend->GetPrinterCapsAndDefaults(short_printer_name,
-                                                       printer_info) ) {
-    return false;
-  }
-
   server_info->caps_cache[printer_name] = *printer_info;
   return true;
 }
@@ -594,8 +583,6 @@ bool PrintSystemCUPS::GetJobDetails(const std::string& printer_name,
   if (!server_info)
     return false;
 
-  crash_keys::ScopedPrinterInfo crash_key(
-      server_info->backend->GetPrinterDriverInfo(short_printer_name));
   cups_job_t* jobs = nullptr;
   int num_jobs = GetJobs(&jobs, server_info->url, cups_encryption_,
                          short_printer_name.c_str(), 1, -1);
@@ -763,9 +750,6 @@ PlatformJobId PrintSystemCUPS::SpoolPrintJob(
   if (!server_info)
     return false;
 
-  crash_keys::ScopedPrinterInfo crash_key(
-      server_info->backend->GetPrinterDriverInfo(printer_name));
-
   // We need to store options as char* string for the duration of the
   // cupsPrintFile2 call. We'll use map here to store options, since
   // Dictionary value from JSON parser returns wchat_t.
