diff --git a/chrome/browser/ui/webui/settings/people_handler.cc b/chrome/browser/ui/webui/settings/people_handler.cc
index 95c22b6e7f854..9bdba49550604 100644
--- a/chrome/browser/ui/webui/settings/people_handler.cc
+++ b/chrome/browser/ui/webui/settings/people_handler.cc
@@ -20,7 +20,6 @@
 #include "chrome/browser/lifetime/application_lifetime.h"
 #include "chrome/browser/profiles/profile.h"
 #include "chrome/browser/profiles/profile_avatar_icon_util.h"
-#include "chrome/browser/profiles/profile_metrics.h"
 #include "chrome/browser/signin/identity_manager_factory.h"
 #include "chrome/browser/signin/signin_error_controller_factory.h"
 #include "chrome/browser/signin/signin_promo.h"
@@ -52,7 +51,6 @@
 #include "components/sync/base/user_selectable_type.h"
 #include "components/sync/driver/sync_driver_switches.h"
 #include "components/sync/driver/sync_user_settings.h"
-#include "components/unified_consent/unified_consent_metrics.h"
 #include "content/public/browser/render_view_host.h"
 #include "content/public/browser/web_contents.h"
 #include "content/public/browser/web_contents_delegate.h"
@@ -447,10 +445,6 @@ void PeopleHandler::HandleSetDatatypes(const base::ListValue* args) {
 
   // Choosing data types to sync never fails.
   ResolveJavascriptCallback(*callback_id, base::Value(kConfigurePageStatus));
-
-  ProfileMetrics::LogProfileSyncInfo(ProfileMetrics::SYNC_CUSTOMIZE);
-  if (!configuration.sync_everything)
-    ProfileMetrics::LogProfileSyncInfo(ProfileMetrics::SYNC_CHOOSE);
 }
 
 void PeopleHandler::HandleGetStoredAccounts(const base::ListValue* args) {
@@ -558,8 +552,6 @@ void PeopleHandler::HandleSetEncryptionPassphrase(const base::ListValue* args) {
   } else {
     sync_user_settings->SetEncryptionPassphrase(passphrase);
     successfully_set = true;
-    ProfileMetrics::LogProfileSyncInfo(
-        ProfileMetrics::SYNC_CREATED_NEW_PASSPHRASE);
   }
   ResolveJavascriptCallback(callback_id, base::Value(successfully_set));
 }
@@ -584,10 +576,6 @@ void PeopleHandler::HandleSetDecryptionPassphrase(const base::ListValue* args) {
   bool successfully_set = false;
   if (!passphrase.empty() && sync_user_settings->IsPassphraseRequired()) {
     successfully_set = sync_user_settings->SetDecryptionPassphrase(passphrase);
-    if (successfully_set) {
-      ProfileMetrics::LogProfileSyncInfo(
-          ProfileMetrics::SYNC_ENTERED_EXISTING_PASSPHRASE);
-    }
   }
   ResolveJavascriptCallback(callback_id, base::Value(successfully_set));
 }
@@ -700,8 +688,7 @@ void PeopleHandler::HandleSignout(const base::ListValue* args) {
   // CAUTION: |this| may be deleted at this point.
 
   if (delete_profile) {
-    webui::DeleteProfileAtPath(profile_path,
-                               ProfileMetrics::DELETE_PROFILE_SETTINGS);
+    webui::DeleteProfileAtPath(profile_path);
   }
 }
 
@@ -1077,9 +1064,6 @@ void PeopleHandler::MarkFirstSetupComplete() {
   if (service->GetUserSettings()->IsFirstSetupComplete())
     return;
 
-  unified_consent::metrics::RecordSyncSetupDataTypesHistrogam(
-      service->GetUserSettings(), profile_->GetPrefs());
-
   // We're done configuring, so notify SyncService that it is OK to start
   // syncing.
   service->GetUserSettings()->SetFirstSetupComplete(
