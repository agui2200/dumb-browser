diff --git a/chrome/browser/ui/webui/settings/people_handler.cc b/chrome/browser/ui/webui/settings/people_handler.cc
index e326ae815ea7..54dbba59c73b 100644
--- a/chrome/browser/ui/webui/settings/people_handler.cc
+++ b/chrome/browser/ui/webui/settings/people_handler.cc
@@ -19,7 +19,6 @@
 #include "chrome/browser/lifetime/application_lifetime.h"
 #include "chrome/browser/profiles/profile.h"
 #include "chrome/browser/profiles/profile_avatar_icon_util.h"
-#include "chrome/browser/profiles/profile_metrics.h"
 #include "chrome/browser/signin/identity_manager_factory.h"
 #include "chrome/browser/signin/signin_error_controller_factory.h"
 #include "chrome/browser/signin/signin_promo.h"
@@ -449,10 +448,6 @@ void PeopleHandler::HandleSetDatatypes(const base::ListValue* args) {
 
   // Choosing data types to sync never fails.
   ResolveJavascriptCallback(*callback_id, base::Value(kConfigurePageStatus));
-
-  ProfileMetrics::LogProfileSyncInfo(ProfileMetrics::SYNC_CUSTOMIZE);
-  if (!configuration.sync_everything)
-    ProfileMetrics::LogProfileSyncInfo(ProfileMetrics::SYNC_CHOOSE);
 }
 
 void PeopleHandler::HandleGetStoredAccounts(const base::ListValue* args) {
@@ -544,7 +539,6 @@ void PeopleHandler::HandleSetEncryption(const base::ListValue* args) {
   }
 
   if (service->GetUserSettings()->IsEncryptEverythingAllowed()) {
-    ProfileMetrics::LogProfileSyncInfo(ProfileMetrics::SYNC_ENCRYPT);
   } else {
     // Don't allow "encrypt all" if the SyncService doesn't allow it.
     // The UI is hidden, but the user may have enabled it e.g. by fiddling with
@@ -596,9 +590,6 @@ void PeopleHandler::HandleSetEncryption(const base::ListValue* args) {
   } else {
     ResolveJavascriptCallback(*callback_id, base::Value(kConfigurePageStatus));
   }
-
-  if (!configuration.set_new_passphrase && !configuration.passphrase.empty())
-    ProfileMetrics::LogProfileSyncInfo(ProfileMetrics::SYNC_PASSPHRASE);
 }
 
 void PeopleHandler::HandleShowSyncSetupUI(const base::ListValue* args) {
@@ -703,8 +694,7 @@ void PeopleHandler::HandleSignout(const base::ListValue* args) {
   }
 
   if (delete_profile) {
-    webui::DeleteProfileAtPath(profile_->GetPath(),
-                               ProfileMetrics::DELETE_PROFILE_SETTINGS);
+    webui::DeleteProfileAtPath(profile_->GetPath());
   }
 }
 
