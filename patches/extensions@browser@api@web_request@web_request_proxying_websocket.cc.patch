diff --git a/extensions/browser/api/web_request/web_request_proxying_websocket.cc b/extensions/browser/api/web_request/web_request_proxying_websocket.cc
index 58c9b259cfe8..a505eb7997cd 100644
--- a/extensions/browser/api/web_request/web_request_proxying_websocket.cc
+++ b/extensions/browser/api/web_request/web_request_proxying_websocket.cc
@@ -51,7 +51,6 @@ WebRequestProxyingWebSocket::WebRequestProxyingWebSocket(
     bool has_extra_headers,
     int process_id,
     int render_frame_id,
-    base::UkmSourceId ukm_source_id,
     content::BrowserContext* browser_context,
     WebRequestAPI::RequestIDGenerator* request_id_generator,
     WebRequestAPI::ProxySet* proxies)
@@ -71,8 +70,7 @@ WebRequestProxyingWebSocket::WebRequestProxyingWebSocket(
           /*is_download=*/false,
           /*is_async=*/true,
           /*is_service_worker_script=*/false,
-          /*navigation_id=*/base::nullopt,
-          ukm_source_id)),
+          /*navigation_id=*/base::nullopt)),
       proxies_(proxies) {
   // base::Unretained is safe here because the callback will be canceled when
   // |shutdown_notifier_| is destroyed, and |proxies_| owns this.
@@ -280,7 +278,6 @@ void WebRequestProxyingWebSocket::StartProxying(
     bool has_extra_headers,
     int process_id,
     int render_frame_id,
-    base::UkmSourceId ukm_source_id,
     WebRequestAPI::RequestIDGenerator* request_id_generator,
     const url::Origin& origin,
     content::BrowserContext* browser_context,
@@ -296,7 +293,7 @@ void WebRequestProxyingWebSocket::StartProxying(
 
   auto proxy = std::make_unique<WebRequestProxyingWebSocket>(
       std::move(factory), request, std::move(handshake_client),
-      has_extra_headers, process_id, render_frame_id, ukm_source_id,
+      has_extra_headers, process_id, render_frame_id,
       browser_context, request_id_generator, proxies);
 
   auto* raw_proxy = proxy.get();
