diff --git a/chrome/installer/setup/uninstall.cc b/chrome/installer/setup/uninstall.cc
index 762bfb9d8fb7..f7133e315e57 100644
--- a/chrome/installer/setup/uninstall.cc
+++ b/chrome/installer/setup/uninstall.cc
@@ -61,8 +61,6 @@
 #include "chrome/installer/util/util_constants.h"
 #include "chrome/installer/util/work_item.h"
 #include "content/public/common/result_codes.h"
-#include "rlz/lib/rlz_lib_clear.h"
-#include "rlz/lib/supplementary_branding.h"
 
 using base::win::RegKey;
 
@@ -105,22 +103,6 @@ void ProcessChromeWorkItems(const InstallerState& installer_state) {
   work_item_list->Do();
 }
 
-void ClearRlzProductState() {
-  const rlz_lib::AccessPoint points[] = {
-      rlz_lib::CHROME_OMNIBOX, rlz_lib::CHROME_HOME_PAGE,
-      rlz_lib::CHROME_APP_LIST, rlz_lib::NO_ACCESS_POINT};
-
-  rlz_lib::ClearProductState(rlz_lib::CHROME, points);
-
-  // If chrome has been reactivated, clear all events for this brand as well.
-  base::string16 reactivation_brand_wide;
-  if (GoogleUpdateSettings::GetReactivationBrand(&reactivation_brand_wide)) {
-    std::string reactivation_brand(base::UTF16ToASCII(reactivation_brand_wide));
-    rlz_lib::SupplementaryBranding branding(reactivation_brand.c_str());
-    rlz_lib::ClearProductState(rlz_lib::CHROME, points);
-  }
-}
-
 // Removes all files from the installer directory. Returns false in case of an
 // error.
 bool RemoveInstallerFiles(const base::FilePath& installer_directory) {
@@ -846,11 +828,6 @@ InstallStatus UninstallProduct(const ModifyParams& modify_params,
     }
   }
 
-  // Chrome is not in use so lets uninstall Chrome by deleting various files
-  // and registry entries. Here we will just make best effort and keep going
-  // in case of errors.
-  ClearRlzProductState();
-
   auto_launch_util::DisableBackgroundStartAtLogin();
 
   // If user-level chrome is self-destructing as a result of encountering a
