diff --git a/chrome/browser/metrics/chrome_metrics_service_accessor.cc b/chrome/browser/metrics/chrome_metrics_service_accessor.cc
index 1fd2d3df7f06..26387b360f64 100644
--- a/chrome/browser/metrics/chrome_metrics_service_accessor.cc
+++ b/chrome/browser/metrics/chrome_metrics_service_accessor.cc
@@ -34,44 +34,24 @@ void ChromeMetricsServiceAccessor::SetMetricsAndCrashReportingForTesting(
 
 // static
 bool ChromeMetricsServiceAccessor::IsMetricsAndCrashReportingEnabled() {
-  return IsMetricsAndCrashReportingEnabled(g_browser_process->local_state());
+  return false;
 }
 
 // static
 bool ChromeMetricsServiceAccessor::IsMetricsAndCrashReportingEnabled(
     PrefService* local_state) {
-  if (g_metrics_consent_for_testing)
-    return *g_metrics_consent_for_testing;
-
-  // TODO(blundell): Fix the unittests that don't set up the UI thread and
-  // change this to just be DCHECK_CURRENTLY_ON().
-  DCHECK(!content::BrowserThread::IsThreadInitialized(
-             content::BrowserThread::UI) ||
-         content::BrowserThread::CurrentlyOn(content::BrowserThread::UI));
-
-  // This is only possible during unit tests. If the unit test didn't set the
-  // local_state then it doesn't care about pref value and therefore we return
-  // false.
-  if (!local_state) {
-    DLOG(WARNING) << "Local state has not been set and pref cannot be read";
-    return false;
-  }
-
-  return IsMetricsReportingEnabled(local_state);
+  return false;
 }
 
 // static
 bool ChromeMetricsServiceAccessor::RegisterSyntheticFieldTrial(
     base::StringPiece trial_name,
     base::StringPiece group_name) {
-  return metrics::MetricsServiceAccessor::RegisterSyntheticFieldTrial(
-      g_browser_process->metrics_service(), trial_name, group_name);
+  return true;
 }
 
 void ChromeMetricsServiceAccessor::SetForceIsMetricsReportingEnabledPrefLookup(
     bool value) {
-  metrics::MetricsServiceAccessor::SetForceIsMetricsReportingEnabledPrefLookup(
-      value);
 }
 
 #if BUILDFLAG(ENABLE_PLUGINS)
