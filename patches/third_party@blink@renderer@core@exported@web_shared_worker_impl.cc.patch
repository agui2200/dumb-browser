diff --git a/third_party/blink/renderer/core/exported/web_shared_worker_impl.cc b/third_party/blink/renderer/core/exported/web_shared_worker_impl.cc
index 104e677c50c9..02eedf6b115a 100644
--- a/third_party/blink/renderer/core/exported/web_shared_worker_impl.cc
+++ b/third_party/blink/renderer/core/exported/web_shared_worker_impl.cc
@@ -78,15 +78,13 @@ WebSharedWorkerImpl::WebSharedWorkerImpl(
     const blink::SharedWorkerToken& token,
     const base::UnguessableToken& appcache_host_id,
     CrossVariantMojoRemote<mojom::SharedWorkerHostInterfaceBase> host,
-    WebSharedWorkerClient* client,
-    ukm::SourceId ukm_source_id)
+    WebSharedWorkerClient* client)
     : reporting_proxy_(MakeGarbageCollected<SharedWorkerReportingProxy>(
           this,
           ParentExecutionContextTaskRunners::Create())),
       worker_thread_(std::make_unique<SharedWorkerThread>(*reporting_proxy_,
                                                           token,
-                                                          appcache_host_id,
-                                                          ukm_source_id)),
+                                                          appcache_host_id)),
       host_(std::move(host)),
       client_(client) {
   DCHECK(IsMainThread());
@@ -349,10 +347,9 @@ std::unique_ptr<WebSharedWorker> WebSharedWorker::CreateAndStart(
         worker_main_script_load_params,
     scoped_refptr<WebWorkerFetchContext> web_worker_fetch_context,
     CrossVariantMojoRemote<mojom::SharedWorkerHostInterfaceBase> host,
-    WebSharedWorkerClient* client,
-    ukm::SourceId ukm_source_id) {
+    WebSharedWorkerClient* client) {
   auto worker = base::WrapUnique(new WebSharedWorkerImpl(
-      token, appcache_host_id, std::move(host), client, ukm_source_id));
+      token, appcache_host_id, std::move(host), client));
   worker->StartWorkerContext(
       script_request_url, script_type, credentials_mode, name,
       constructor_origin, user_agent, ua_metadata, content_security_policy,
