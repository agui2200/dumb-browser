diff --git a/third_party/blink/renderer/modules/encryptedmedia/media_key_system_access_initializer_base.cc b/third_party/blink/renderer/modules/encryptedmedia/media_key_system_access_initializer_base.cc
index 461b77f9566e..9d1625488d43 100644
--- a/third_party/blink/renderer/modules/encryptedmedia/media_key_system_access_initializer_base.cc
+++ b/third_party/blink/renderer/modules/encryptedmedia/media_key_system_access_initializer_base.cc
@@ -6,8 +6,6 @@
 
 #include "base/metrics/histogram_functions.h"
 #include "media/base/eme_constants.h"
-#include "services/metrics/public/cpp/ukm_builders.h"
-#include "services/metrics/public/cpp/ukm_recorder.h"
 #include "third_party/blink/renderer/bindings/modules/v8/v8_media_key_system_media_capability.h"
 #include "third_party/blink/renderer/core/dom/document.h"
 #include "third_party/blink/renderer/core/frame/local_dom_window.h"
@@ -214,21 +212,6 @@ void MediaKeySystemAccessInitializerBase::GenerateWarningAndReportMetrics()
 
   if (!DomWindow())
     return;
-
-  LocalFrame* frame = DomWindow()->GetFrame();
-  ukm::builders::Media_EME_RequestMediaKeySystemAccess builder(
-      DomWindow()->UkmSourceID());
-  builder.SetKeySystem(KeySystemForUkm::kWidevine);
-  builder.SetIsAdFrame(
-      static_cast<int>(frame->IsAdRoot() || frame->IsAdSubframe()));
-  builder.SetIsCrossOrigin(static_cast<int>(frame->IsCrossOriginToMainFrame()));
-  builder.SetIsTopFrame(static_cast<int>(frame->IsMainFrame()));
-  builder.SetVideoCapabilities(static_cast<int>(has_video_capabilities));
-  builder.SetVideoCapabilities_HasEmptyRobustness(
-      static_cast<int>(has_empty_robustness));
-  builder.SetVideoCapabilities_HasHwSecureAllRobustness(
-      static_cast<int>(has_hw_secure_all));
-  builder.Record(DomWindow()->UkmRecorder());
 }
 
 }  // namespace blink
